
[RTOS]Queue_send_struct.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000052b8  08000110  08000110  00010110  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000030c  080053c8  080053c8  000153c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080056d4  080056d4  000200ac  2**0
                  CONTENTS
  4 .ARM          00000000  080056d4  080056d4  000200ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  080056d4  080056d4  000200ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080056d4  080056d4  000156d4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080056d8  080056d8  000156d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000ac  20000000  080056dc  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00002eac  200000ac  08005788  000200ac  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20002f58  08005788  00022f58  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  000200ac  2**0
                  CONTENTS, READONLY
 12 .debug_info   000134e7  00000000  00000000  000200d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000028da  00000000  00000000  000335bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000d68  00000000  00000000  00035e98  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000c40  00000000  00000000  00036c00  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00003c7a  00000000  00000000  00037840  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000ca8e  00000000  00000000  0003b4ba  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00074d15  00000000  00000000  00047f48  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000bcc5d  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000039c0  00000000  00000000  000bccd8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200000ac 	.word	0x200000ac
 800012c:	00000000 	.word	0x00000000
 8000130:	080053b0 	.word	0x080053b0

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200000b0 	.word	0x200000b0
 800014c:	080053b0 	.word	0x080053b0

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000160:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000162:	b08f      	sub	sp, #60	; 0x3c
 8000164:	af0e      	add	r7, sp, #56	; 0x38
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000166:	f000 fe13 	bl	8000d90 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800016a:	f000 f9e3 	bl	8000534 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 800016e:	f000 fa51 	bl	8000614 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8000172:	f000 fa25 	bl	80005c0 <MX_USART2_UART_Init>
  /* USER CODE BEGIN 2 */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_11, 1);
 8000176:	2201      	movs	r2, #1
 8000178:	f44f 6100 	mov.w	r1, #2048	; 0x800
 800017c:	48b0      	ldr	r0, [pc, #704]	; (8000440 <main+0x2e0>)
 800017e:	f001 f8a7 	bl	80012d0 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_12, 1);
 8000182:	2201      	movs	r2, #1
 8000184:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8000188:	48ad      	ldr	r0, [pc, #692]	; (8000440 <main+0x2e0>)
 800018a:	f001 f8a1 	bl	80012d0 <HAL_GPIO_WritePin>
  /* USER CODE END 2 */

  /* Init scheduler */
  osKernelInitialize();
 800018e:	f001 fef5 	bl	8001f7c <osKernelInitialize>
  /* start timers, add new ones, ... */
  /* USER CODE END RTOS_TIMERS */

  /* USER CODE BEGIN RTOS_QUEUES */
  /* add queues, ... */
  queue_handle = osMessageQueueNew(QUEUE_SIZE, sizeof(DataFrame_t), NULL);
 8000192:	2200      	movs	r2, #0
 8000194:	2108      	movs	r1, #8
 8000196:	2007      	movs	r0, #7
 8000198:	f002 f82e 	bl	80021f8 <osMessageQueueNew>
 800019c:	4602      	mov	r2, r0
 800019e:	4ba9      	ldr	r3, [pc, #676]	; (8000444 <main+0x2e4>)
 80001a0:	601a      	str	r2, [r3, #0]
  if (queue_handle == NULL)
 80001a2:	4ba8      	ldr	r3, [pc, #672]	; (8000444 <main+0x2e4>)
 80001a4:	681b      	ldr	r3, [r3, #0]
 80001a6:	2b00      	cmp	r3, #0
 80001a8:	d12a      	bne.n	8000200 <main+0xa0>
  {
    error_count++;
 80001aa:	4ba7      	ldr	r3, [pc, #668]	; (8000448 <main+0x2e8>)
 80001ac:	681b      	ldr	r3, [r3, #0]
 80001ae:	3301      	adds	r3, #1
 80001b0:	4aa5      	ldr	r2, [pc, #660]	; (8000448 <main+0x2e8>)
 80001b2:	6013      	str	r3, [r2, #0]
    PRINTF("Failed to create new queue\r\n");
 80001b4:	2264      	movs	r2, #100	; 0x64
 80001b6:	2100      	movs	r1, #0
 80001b8:	48a4      	ldr	r0, [pc, #656]	; (800044c <main+0x2ec>)
 80001ba:	f004 fcac 	bl	8004b16 <memset>
 80001be:	4aa3      	ldr	r2, [pc, #652]	; (800044c <main+0x2ec>)
 80001c0:	4ba3      	ldr	r3, [pc, #652]	; (8000450 <main+0x2f0>)
 80001c2:	4615      	mov	r5, r2
 80001c4:	461c      	mov	r4, r3
 80001c6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80001c8:	6028      	str	r0, [r5, #0]
 80001ca:	6069      	str	r1, [r5, #4]
 80001cc:	60aa      	str	r2, [r5, #8]
 80001ce:	60eb      	str	r3, [r5, #12]
 80001d0:	cc07      	ldmia	r4!, {r0, r1, r2}
 80001d2:	6128      	str	r0, [r5, #16]
 80001d4:	6169      	str	r1, [r5, #20]
 80001d6:	61aa      	str	r2, [r5, #24]
 80001d8:	7823      	ldrb	r3, [r4, #0]
 80001da:	772b      	strb	r3, [r5, #28]
 80001dc:	4e9d      	ldr	r6, [pc, #628]	; (8000454 <main+0x2f4>)
 80001de:	4b9b      	ldr	r3, [pc, #620]	; (800044c <main+0x2ec>)
 80001e0:	930c      	str	r3, [sp, #48]	; 0x30
 80001e2:	466d      	mov	r5, sp
 80001e4:	f106 0410 	add.w	r4, r6, #16
 80001e8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80001ea:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80001ec:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80001ee:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80001f0:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 80001f4:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 80001f8:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 80001fc:	f000 fc5a 	bl	8000ab4 <vUARTSend>
  }
  /* USER CODE END RTOS_QUEUES */
  /* creation of blinkLed1 */
  blinkLed1Handle = osThreadNew(blinkTask, NULL, &blinkLed1_attributes);
 8000200:	4a95      	ldr	r2, [pc, #596]	; (8000458 <main+0x2f8>)
 8000202:	2100      	movs	r1, #0
 8000204:	4895      	ldr	r0, [pc, #596]	; (800045c <main+0x2fc>)
 8000206:	f001 ff1f 	bl	8002048 <osThreadNew>
 800020a:	4602      	mov	r2, r0
 800020c:	4b94      	ldr	r3, [pc, #592]	; (8000460 <main+0x300>)
 800020e:	601a      	str	r2, [r3, #0]

  /* USER CODE BEGIN RTOS_THREADS */
  /* creation of Sender task*/

  SenderHandle1 = osThreadNew(senderTask, (void *)DataStructToSend, &Sender_attributes);
 8000210:	4a94      	ldr	r2, [pc, #592]	; (8000464 <main+0x304>)
 8000212:	4995      	ldr	r1, [pc, #596]	; (8000468 <main+0x308>)
 8000214:	4895      	ldr	r0, [pc, #596]	; (800046c <main+0x30c>)
 8000216:	f001 ff17 	bl	8002048 <osThreadNew>
 800021a:	4602      	mov	r2, r0
 800021c:	4b94      	ldr	r3, [pc, #592]	; (8000470 <main+0x310>)
 800021e:	601a      	str	r2, [r3, #0]
  SenderHandle2 = osThreadNew(senderTask, (void *)(DataStructToSend + 1), &Sender_attributes);
 8000220:	4b94      	ldr	r3, [pc, #592]	; (8000474 <main+0x314>)
 8000222:	4a90      	ldr	r2, [pc, #576]	; (8000464 <main+0x304>)
 8000224:	4619      	mov	r1, r3
 8000226:	4891      	ldr	r0, [pc, #580]	; (800046c <main+0x30c>)
 8000228:	f001 ff0e 	bl	8002048 <osThreadNew>
 800022c:	4602      	mov	r2, r0
 800022e:	4b92      	ldr	r3, [pc, #584]	; (8000478 <main+0x318>)
 8000230:	601a      	str	r2, [r3, #0]
  SenderHandle3 = osThreadNew(senderTask, (void *)(DataStructToSend + 2), &Sender_attributes);
 8000232:	4b92      	ldr	r3, [pc, #584]	; (800047c <main+0x31c>)
 8000234:	4a8b      	ldr	r2, [pc, #556]	; (8000464 <main+0x304>)
 8000236:	4619      	mov	r1, r3
 8000238:	488c      	ldr	r0, [pc, #560]	; (800046c <main+0x30c>)
 800023a:	f001 ff05 	bl	8002048 <osThreadNew>
 800023e:	4602      	mov	r2, r0
 8000240:	4b8f      	ldr	r3, [pc, #572]	; (8000480 <main+0x320>)
 8000242:	601a      	str	r2, [r3, #0]
  SenderHandle4 = osThreadNew(senderTask, (void *)(DataStructToSend + 3), &Sender_attributes);
 8000244:	4b8f      	ldr	r3, [pc, #572]	; (8000484 <main+0x324>)
 8000246:	4a87      	ldr	r2, [pc, #540]	; (8000464 <main+0x304>)
 8000248:	4619      	mov	r1, r3
 800024a:	4888      	ldr	r0, [pc, #544]	; (800046c <main+0x30c>)
 800024c:	f001 fefc 	bl	8002048 <osThreadNew>
 8000250:	4602      	mov	r2, r0
 8000252:	4b8d      	ldr	r3, [pc, #564]	; (8000488 <main+0x328>)
 8000254:	601a      	str	r2, [r3, #0]
  SenderHandle5 = osThreadNew(senderTask, (void *)(DataStructToSend + 4), &Sender_attributes);
 8000256:	4b8d      	ldr	r3, [pc, #564]	; (800048c <main+0x32c>)
 8000258:	4a82      	ldr	r2, [pc, #520]	; (8000464 <main+0x304>)
 800025a:	4619      	mov	r1, r3
 800025c:	4883      	ldr	r0, [pc, #524]	; (800046c <main+0x30c>)
 800025e:	f001 fef3 	bl	8002048 <osThreadNew>
 8000262:	4602      	mov	r2, r0
 8000264:	4b8a      	ldr	r3, [pc, #552]	; (8000490 <main+0x330>)
 8000266:	601a      	str	r2, [r3, #0]
  SenderHandle6 = osThreadNew(senderTask, (void *)(DataStructToSend + 5), &Sender_attributes);
 8000268:	4b8a      	ldr	r3, [pc, #552]	; (8000494 <main+0x334>)
 800026a:	4a7e      	ldr	r2, [pc, #504]	; (8000464 <main+0x304>)
 800026c:	4619      	mov	r1, r3
 800026e:	487f      	ldr	r0, [pc, #508]	; (800046c <main+0x30c>)
 8000270:	f001 feea 	bl	8002048 <osThreadNew>
 8000274:	4602      	mov	r2, r0
 8000276:	4b88      	ldr	r3, [pc, #544]	; (8000498 <main+0x338>)
 8000278:	601a      	str	r2, [r3, #0]
  GatewayHandle = osThreadNew(senderTask, (void *)(DataStructToSend + 6), &Sender_attributes);
 800027a:	4b88      	ldr	r3, [pc, #544]	; (800049c <main+0x33c>)
 800027c:	4a79      	ldr	r2, [pc, #484]	; (8000464 <main+0x304>)
 800027e:	4619      	mov	r1, r3
 8000280:	487a      	ldr	r0, [pc, #488]	; (800046c <main+0x30c>)
 8000282:	f001 fee1 	bl	8002048 <osThreadNew>
 8000286:	4602      	mov	r2, r0
 8000288:	4b85      	ldr	r3, [pc, #532]	; (80004a0 <main+0x340>)
 800028a:	601a      	str	r2, [r3, #0]

  //Check if all tasks are created successful or not
  if ((SenderHandle1 == NULL) || (SenderHandle2 == NULL) || (SenderHandle3 == NULL) || (SenderHandle4 == NULL) || (SenderHandle5 == NULL) || (SenderHandle6 == NULL) || (GatewayHandle == NULL))
 800028c:	4b78      	ldr	r3, [pc, #480]	; (8000470 <main+0x310>)
 800028e:	681b      	ldr	r3, [r3, #0]
 8000290:	2b00      	cmp	r3, #0
 8000292:	d017      	beq.n	80002c4 <main+0x164>
 8000294:	4b78      	ldr	r3, [pc, #480]	; (8000478 <main+0x318>)
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	2b00      	cmp	r3, #0
 800029a:	d013      	beq.n	80002c4 <main+0x164>
 800029c:	4b78      	ldr	r3, [pc, #480]	; (8000480 <main+0x320>)
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	2b00      	cmp	r3, #0
 80002a2:	d00f      	beq.n	80002c4 <main+0x164>
 80002a4:	4b78      	ldr	r3, [pc, #480]	; (8000488 <main+0x328>)
 80002a6:	681b      	ldr	r3, [r3, #0]
 80002a8:	2b00      	cmp	r3, #0
 80002aa:	d00b      	beq.n	80002c4 <main+0x164>
 80002ac:	4b78      	ldr	r3, [pc, #480]	; (8000490 <main+0x330>)
 80002ae:	681b      	ldr	r3, [r3, #0]
 80002b0:	2b00      	cmp	r3, #0
 80002b2:	d007      	beq.n	80002c4 <main+0x164>
 80002b4:	4b78      	ldr	r3, [pc, #480]	; (8000498 <main+0x338>)
 80002b6:	681b      	ldr	r3, [r3, #0]
 80002b8:	2b00      	cmp	r3, #0
 80002ba:	d003      	beq.n	80002c4 <main+0x164>
 80002bc:	4b78      	ldr	r3, [pc, #480]	; (80004a0 <main+0x340>)
 80002be:	681b      	ldr	r3, [r3, #0]
 80002c0:	2b00      	cmp	r3, #0
 80002c2:	d12a      	bne.n	800031a <main+0x1ba>
  {
    PRINTF("Failed to create senderTask\r\n");
 80002c4:	2264      	movs	r2, #100	; 0x64
 80002c6:	2100      	movs	r1, #0
 80002c8:	4860      	ldr	r0, [pc, #384]	; (800044c <main+0x2ec>)
 80002ca:	f004 fc24 	bl	8004b16 <memset>
 80002ce:	4a5f      	ldr	r2, [pc, #380]	; (800044c <main+0x2ec>)
 80002d0:	4b74      	ldr	r3, [pc, #464]	; (80004a4 <main+0x344>)
 80002d2:	4615      	mov	r5, r2
 80002d4:	461c      	mov	r4, r3
 80002d6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80002d8:	6028      	str	r0, [r5, #0]
 80002da:	6069      	str	r1, [r5, #4]
 80002dc:	60aa      	str	r2, [r5, #8]
 80002de:	60eb      	str	r3, [r5, #12]
 80002e0:	cc07      	ldmia	r4!, {r0, r1, r2}
 80002e2:	6128      	str	r0, [r5, #16]
 80002e4:	6169      	str	r1, [r5, #20]
 80002e6:	61aa      	str	r2, [r5, #24]
 80002e8:	8823      	ldrh	r3, [r4, #0]
 80002ea:	83ab      	strh	r3, [r5, #28]
 80002ec:	4e59      	ldr	r6, [pc, #356]	; (8000454 <main+0x2f4>)
 80002ee:	4b57      	ldr	r3, [pc, #348]	; (800044c <main+0x2ec>)
 80002f0:	930c      	str	r3, [sp, #48]	; 0x30
 80002f2:	466d      	mov	r5, sp
 80002f4:	f106 0410 	add.w	r4, r6, #16
 80002f8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80002fa:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80002fc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80002fe:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000300:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000304:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000308:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800030c:	f000 fbd2 	bl	8000ab4 <vUARTSend>
    error_count++;
 8000310:	4b4d      	ldr	r3, [pc, #308]	; (8000448 <main+0x2e8>)
 8000312:	681b      	ldr	r3, [r3, #0]
 8000314:	3301      	adds	r3, #1
 8000316:	4a4c      	ldr	r2, [pc, #304]	; (8000448 <main+0x2e8>)
 8000318:	6013      	str	r3, [r2, #0]
  }

  /* creation of Receiver task */
  ReceiverHandle = osThreadNew(receiverTask, NULL, &Receiver_attributes);
 800031a:	4a63      	ldr	r2, [pc, #396]	; (80004a8 <main+0x348>)
 800031c:	2100      	movs	r1, #0
 800031e:	4863      	ldr	r0, [pc, #396]	; (80004ac <main+0x34c>)
 8000320:	f001 fe92 	bl	8002048 <osThreadNew>
 8000324:	4602      	mov	r2, r0
 8000326:	4b62      	ldr	r3, [pc, #392]	; (80004b0 <main+0x350>)
 8000328:	601a      	str	r2, [r3, #0]
  if (ReceiverHandle == NULL)
 800032a:	4b61      	ldr	r3, [pc, #388]	; (80004b0 <main+0x350>)
 800032c:	681b      	ldr	r3, [r3, #0]
 800032e:	2b00      	cmp	r3, #0
 8000330:	d12a      	bne.n	8000388 <main+0x228>
  {
    PRINTF("Failed to create receiverTask");
 8000332:	2264      	movs	r2, #100	; 0x64
 8000334:	2100      	movs	r1, #0
 8000336:	4845      	ldr	r0, [pc, #276]	; (800044c <main+0x2ec>)
 8000338:	f004 fbed 	bl	8004b16 <memset>
 800033c:	4a43      	ldr	r2, [pc, #268]	; (800044c <main+0x2ec>)
 800033e:	4b5d      	ldr	r3, [pc, #372]	; (80004b4 <main+0x354>)
 8000340:	4615      	mov	r5, r2
 8000342:	461c      	mov	r4, r3
 8000344:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000346:	6028      	str	r0, [r5, #0]
 8000348:	6069      	str	r1, [r5, #4]
 800034a:	60aa      	str	r2, [r5, #8]
 800034c:	60eb      	str	r3, [r5, #12]
 800034e:	cc07      	ldmia	r4!, {r0, r1, r2}
 8000350:	6128      	str	r0, [r5, #16]
 8000352:	6169      	str	r1, [r5, #20]
 8000354:	61aa      	str	r2, [r5, #24]
 8000356:	8823      	ldrh	r3, [r4, #0]
 8000358:	83ab      	strh	r3, [r5, #28]
 800035a:	4e3e      	ldr	r6, [pc, #248]	; (8000454 <main+0x2f4>)
 800035c:	4b3b      	ldr	r3, [pc, #236]	; (800044c <main+0x2ec>)
 800035e:	930c      	str	r3, [sp, #48]	; 0x30
 8000360:	466d      	mov	r5, sp
 8000362:	f106 0410 	add.w	r4, r6, #16
 8000366:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000368:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800036a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800036c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800036e:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000372:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000376:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800037a:	f000 fb9b 	bl	8000ab4 <vUARTSend>
    error_count++;
 800037e:	4b32      	ldr	r3, [pc, #200]	; (8000448 <main+0x2e8>)
 8000380:	681b      	ldr	r3, [r3, #0]
 8000382:	3301      	adds	r3, #1
 8000384:	4a30      	ldr	r2, [pc, #192]	; (8000448 <main+0x2e8>)
 8000386:	6013      	str	r3, [r2, #0]

  /* USER CODE END RTOS_THREADS */

  /* Start scheduler */
  //If any error is counted, Kernel will not start
  if (error_count != 0)
 8000388:	4b2f      	ldr	r3, [pc, #188]	; (8000448 <main+0x2e8>)
 800038a:	681b      	ldr	r3, [r3, #0]
 800038c:	2b00      	cmp	r3, #0
 800038e:	f000 80a5 	beq.w	80004dc <main+0x37c>
  {
    PRINTF("Failed to start Kernel\r\n");
 8000392:	2264      	movs	r2, #100	; 0x64
 8000394:	2100      	movs	r1, #0
 8000396:	482d      	ldr	r0, [pc, #180]	; (800044c <main+0x2ec>)
 8000398:	f004 fbbd 	bl	8004b16 <memset>
 800039c:	4a2b      	ldr	r2, [pc, #172]	; (800044c <main+0x2ec>)
 800039e:	4b46      	ldr	r3, [pc, #280]	; (80004b8 <main+0x358>)
 80003a0:	4615      	mov	r5, r2
 80003a2:	461c      	mov	r4, r3
 80003a4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80003a6:	6028      	str	r0, [r5, #0]
 80003a8:	6069      	str	r1, [r5, #4]
 80003aa:	60aa      	str	r2, [r5, #8]
 80003ac:	60eb      	str	r3, [r5, #12]
 80003ae:	cc03      	ldmia	r4!, {r0, r1}
 80003b0:	6128      	str	r0, [r5, #16]
 80003b2:	6169      	str	r1, [r5, #20]
 80003b4:	7823      	ldrb	r3, [r4, #0]
 80003b6:	762b      	strb	r3, [r5, #24]
 80003b8:	4e26      	ldr	r6, [pc, #152]	; (8000454 <main+0x2f4>)
 80003ba:	4b24      	ldr	r3, [pc, #144]	; (800044c <main+0x2ec>)
 80003bc:	930c      	str	r3, [sp, #48]	; 0x30
 80003be:	466d      	mov	r5, sp
 80003c0:	f106 0410 	add.w	r4, r6, #16
 80003c4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80003c6:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80003c8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80003ca:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80003cc:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 80003d0:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 80003d4:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 80003d8:	f000 fb6c 	bl	8000ab4 <vUARTSend>
    PRINT_VAR(error_count);
 80003dc:	2264      	movs	r2, #100	; 0x64
 80003de:	2100      	movs	r1, #0
 80003e0:	481a      	ldr	r0, [pc, #104]	; (800044c <main+0x2ec>)
 80003e2:	f004 fb98 	bl	8004b16 <memset>
 80003e6:	4b18      	ldr	r3, [pc, #96]	; (8000448 <main+0x2e8>)
 80003e8:	681b      	ldr	r3, [r3, #0]
 80003ea:	461a      	mov	r2, r3
 80003ec:	4933      	ldr	r1, [pc, #204]	; (80004bc <main+0x35c>)
 80003ee:	4817      	ldr	r0, [pc, #92]	; (800044c <main+0x2ec>)
 80003f0:	f004 fbce 	bl	8004b90 <siprintf>
 80003f4:	4e17      	ldr	r6, [pc, #92]	; (8000454 <main+0x2f4>)
 80003f6:	4b15      	ldr	r3, [pc, #84]	; (800044c <main+0x2ec>)
 80003f8:	930c      	str	r3, [sp, #48]	; 0x30
 80003fa:	466d      	mov	r5, sp
 80003fc:	f106 0410 	add.w	r4, r6, #16
 8000400:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000402:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000404:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000406:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000408:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 800040c:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000410:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8000414:	f000 fb4e 	bl	8000ab4 <vUARTSend>
 8000418:	2264      	movs	r2, #100	; 0x64
 800041a:	2100      	movs	r1, #0
 800041c:	480b      	ldr	r0, [pc, #44]	; (800044c <main+0x2ec>)
 800041e:	f004 fb7a 	bl	8004b16 <memset>
 8000422:	4b0a      	ldr	r3, [pc, #40]	; (800044c <main+0x2ec>)
 8000424:	4a26      	ldr	r2, [pc, #152]	; (80004c0 <main+0x360>)
 8000426:	8811      	ldrh	r1, [r2, #0]
 8000428:	7892      	ldrb	r2, [r2, #2]
 800042a:	8019      	strh	r1, [r3, #0]
 800042c:	709a      	strb	r2, [r3, #2]
 800042e:	4e09      	ldr	r6, [pc, #36]	; (8000454 <main+0x2f4>)
 8000430:	4b06      	ldr	r3, [pc, #24]	; (800044c <main+0x2ec>)
 8000432:	930c      	str	r3, [sp, #48]	; 0x30
 8000434:	466d      	mov	r5, sp
 8000436:	f106 0410 	add.w	r4, r6, #16
 800043a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800043c:	e042      	b.n	80004c4 <main+0x364>
 800043e:	bf00      	nop
 8000440:	40010800 	.word	0x40010800
 8000444:	200000c8 	.word	0x200000c8
 8000448:	200000cc 	.word	0x200000cc
 800044c:	20002e50 	.word	0x20002e50
 8000450:	080053e8 	.word	0x080053e8
 8000454:	20002ecc 	.word	0x20002ecc
 8000458:	0800561c 	.word	0x0800561c
 800045c:	08000a89 	.word	0x08000a89
 8000460:	20002eb4 	.word	0x20002eb4
 8000464:	08005640 	.word	0x08005640
 8000468:	20000000 	.word	0x20000000
 800046c:	080006d9 	.word	0x080006d9
 8000470:	20002ec8 	.word	0x20002ec8
 8000474:	20000008 	.word	0x20000008
 8000478:	20002e4c 	.word	0x20002e4c
 800047c:	20000010 	.word	0x20000010
 8000480:	20002ec4 	.word	0x20002ec4
 8000484:	20000018 	.word	0x20000018
 8000488:	20002ec0 	.word	0x20002ec0
 800048c:	20000020 	.word	0x20000020
 8000490:	20002eb8 	.word	0x20002eb8
 8000494:	20000028 	.word	0x20000028
 8000498:	20002e48 	.word	0x20002e48
 800049c:	20000030 	.word	0x20000030
 80004a0:	20002f0c 	.word	0x20002f0c
 80004a4:	08005408 	.word	0x08005408
 80004a8:	08005664 	.word	0x08005664
 80004ac:	08000865 	.word	0x08000865
 80004b0:	20002ebc 	.word	0x20002ebc
 80004b4:	08005428 	.word	0x08005428
 80004b8:	08005448 	.word	0x08005448
 80004bc:	08005464 	.word	0x08005464
 80004c0:	08005480 	.word	0x08005480
 80004c4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80004c6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80004c8:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80004ca:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 80004ce:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 80004d2:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 80004d6:	f000 faed 	bl	8000ab4 <vUARTSend>
 80004da:	e023      	b.n	8000524 <main+0x3c4>
  }
  else
  {
    PRINTF("Start RTOS_Kernel\r\n");
 80004dc:	2264      	movs	r2, #100	; 0x64
 80004de:	2100      	movs	r1, #0
 80004e0:	4811      	ldr	r0, [pc, #68]	; (8000528 <main+0x3c8>)
 80004e2:	f004 fb18 	bl	8004b16 <memset>
 80004e6:	4a10      	ldr	r2, [pc, #64]	; (8000528 <main+0x3c8>)
 80004e8:	4b10      	ldr	r3, [pc, #64]	; (800052c <main+0x3cc>)
 80004ea:	4615      	mov	r5, r2
 80004ec:	461c      	mov	r4, r3
 80004ee:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80004f0:	6028      	str	r0, [r5, #0]
 80004f2:	6069      	str	r1, [r5, #4]
 80004f4:	60aa      	str	r2, [r5, #8]
 80004f6:	60eb      	str	r3, [r5, #12]
 80004f8:	6820      	ldr	r0, [r4, #0]
 80004fa:	6128      	str	r0, [r5, #16]
 80004fc:	4e0c      	ldr	r6, [pc, #48]	; (8000530 <main+0x3d0>)
 80004fe:	4b0a      	ldr	r3, [pc, #40]	; (8000528 <main+0x3c8>)
 8000500:	930c      	str	r3, [sp, #48]	; 0x30
 8000502:	466d      	mov	r5, sp
 8000504:	f106 0410 	add.w	r4, r6, #16
 8000508:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800050a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800050c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800050e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000510:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000514:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000518:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800051c:	f000 faca 	bl	8000ab4 <vUARTSend>
    osKernelStart();
 8000520:	f001 fd5e 	bl	8001fe0 <osKernelStart>
  }
  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8000524:	e7fe      	b.n	8000524 <main+0x3c4>
 8000526:	bf00      	nop
 8000528:	20002e50 	.word	0x20002e50
 800052c:	08005484 	.word	0x08005484
 8000530:	20002ecc 	.word	0x20002ecc

08000534 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000534:	b580      	push	{r7, lr}
 8000536:	b090      	sub	sp, #64	; 0x40
 8000538:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800053a:	f107 0318 	add.w	r3, r7, #24
 800053e:	2228      	movs	r2, #40	; 0x28
 8000540:	2100      	movs	r1, #0
 8000542:	4618      	mov	r0, r3
 8000544:	f004 fae7 	bl	8004b16 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000548:	1d3b      	adds	r3, r7, #4
 800054a:	2200      	movs	r2, #0
 800054c:	601a      	str	r2, [r3, #0]
 800054e:	605a      	str	r2, [r3, #4]
 8000550:	609a      	str	r2, [r3, #8]
 8000552:	60da      	str	r2, [r3, #12]
 8000554:	611a      	str	r2, [r3, #16]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000556:	2301      	movs	r3, #1
 8000558:	61bb      	str	r3, [r7, #24]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 800055a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800055e:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 8000560:	2300      	movs	r3, #0
 8000562:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8000564:	2301      	movs	r3, #1
 8000566:	62bb      	str	r3, [r7, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000568:	2302      	movs	r3, #2
 800056a:	637b      	str	r3, [r7, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800056c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000570:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 8000572:	f44f 13e0 	mov.w	r3, #1835008	; 0x1c0000
 8000576:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000578:	f107 0318 	add.w	r3, r7, #24
 800057c:	4618      	mov	r0, r3
 800057e:	f000 fed7 	bl	8001330 <HAL_RCC_OscConfig>
 8000582:	4603      	mov	r3, r0
 8000584:	2b00      	cmp	r3, #0
 8000586:	d001      	beq.n	800058c <SystemClock_Config+0x58>
  {
    Error_Handler();
 8000588:	f000 fa8e 	bl	8000aa8 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 800058c:	230f      	movs	r3, #15
 800058e:	607b      	str	r3, [r7, #4]
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000590:	2302      	movs	r3, #2
 8000592:	60bb      	str	r3, [r7, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000594:	2300      	movs	r3, #0
 8000596:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8000598:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800059c:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 800059e:	2300      	movs	r3, #0
 80005a0:	617b      	str	r3, [r7, #20]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 80005a2:	1d3b      	adds	r3, r7, #4
 80005a4:	2102      	movs	r1, #2
 80005a6:	4618      	mov	r0, r3
 80005a8:	f001 f942 	bl	8001830 <HAL_RCC_ClockConfig>
 80005ac:	4603      	mov	r3, r0
 80005ae:	2b00      	cmp	r3, #0
 80005b0:	d001      	beq.n	80005b6 <SystemClock_Config+0x82>
  {
    Error_Handler();
 80005b2:	f000 fa79 	bl	8000aa8 <Error_Handler>
  }
}
 80005b6:	bf00      	nop
 80005b8:	3740      	adds	r7, #64	; 0x40
 80005ba:	46bd      	mov	sp, r7
 80005bc:	bd80      	pop	{r7, pc}
	...

080005c0 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 80005c0:	b580      	push	{r7, lr}
 80005c2:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 80005c4:	4b11      	ldr	r3, [pc, #68]	; (800060c <MX_USART2_UART_Init+0x4c>)
 80005c6:	4a12      	ldr	r2, [pc, #72]	; (8000610 <MX_USART2_UART_Init+0x50>)
 80005c8:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 80005ca:	4b10      	ldr	r3, [pc, #64]	; (800060c <MX_USART2_UART_Init+0x4c>)
 80005cc:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80005d0:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 80005d2:	4b0e      	ldr	r3, [pc, #56]	; (800060c <MX_USART2_UART_Init+0x4c>)
 80005d4:	2200      	movs	r2, #0
 80005d6:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 80005d8:	4b0c      	ldr	r3, [pc, #48]	; (800060c <MX_USART2_UART_Init+0x4c>)
 80005da:	2200      	movs	r2, #0
 80005dc:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 80005de:	4b0b      	ldr	r3, [pc, #44]	; (800060c <MX_USART2_UART_Init+0x4c>)
 80005e0:	2200      	movs	r2, #0
 80005e2:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 80005e4:	4b09      	ldr	r3, [pc, #36]	; (800060c <MX_USART2_UART_Init+0x4c>)
 80005e6:	220c      	movs	r2, #12
 80005e8:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80005ea:	4b08      	ldr	r3, [pc, #32]	; (800060c <MX_USART2_UART_Init+0x4c>)
 80005ec:	2200      	movs	r2, #0
 80005ee:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 80005f0:	4b06      	ldr	r3, [pc, #24]	; (800060c <MX_USART2_UART_Init+0x4c>)
 80005f2:	2200      	movs	r2, #0
 80005f4:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 80005f6:	4805      	ldr	r0, [pc, #20]	; (800060c <MX_USART2_UART_Init+0x4c>)
 80005f8:	f001 fab6 	bl	8001b68 <HAL_UART_Init>
 80005fc:	4603      	mov	r3, r0
 80005fe:	2b00      	cmp	r3, #0
 8000600:	d001      	beq.n	8000606 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8000602:	f000 fa51 	bl	8000aa8 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */
}
 8000606:	bf00      	nop
 8000608:	bd80      	pop	{r7, pc}
 800060a:	bf00      	nop
 800060c:	20002ecc 	.word	0x20002ecc
 8000610:	40004400 	.word	0x40004400

08000614 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8000614:	b580      	push	{r7, lr}
 8000616:	b088      	sub	sp, #32
 8000618:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800061a:	f107 0310 	add.w	r3, r7, #16
 800061e:	2200      	movs	r2, #0
 8000620:	601a      	str	r2, [r3, #0]
 8000622:	605a      	str	r2, [r3, #4]
 8000624:	609a      	str	r2, [r3, #8]
 8000626:	60da      	str	r2, [r3, #12]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8000628:	4b28      	ldr	r3, [pc, #160]	; (80006cc <MX_GPIO_Init+0xb8>)
 800062a:	699b      	ldr	r3, [r3, #24]
 800062c:	4a27      	ldr	r2, [pc, #156]	; (80006cc <MX_GPIO_Init+0xb8>)
 800062e:	f043 0320 	orr.w	r3, r3, #32
 8000632:	6193      	str	r3, [r2, #24]
 8000634:	4b25      	ldr	r3, [pc, #148]	; (80006cc <MX_GPIO_Init+0xb8>)
 8000636:	699b      	ldr	r3, [r3, #24]
 8000638:	f003 0320 	and.w	r3, r3, #32
 800063c:	60fb      	str	r3, [r7, #12]
 800063e:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000640:	4b22      	ldr	r3, [pc, #136]	; (80006cc <MX_GPIO_Init+0xb8>)
 8000642:	699b      	ldr	r3, [r3, #24]
 8000644:	4a21      	ldr	r2, [pc, #132]	; (80006cc <MX_GPIO_Init+0xb8>)
 8000646:	f043 0304 	orr.w	r3, r3, #4
 800064a:	6193      	str	r3, [r2, #24]
 800064c:	4b1f      	ldr	r3, [pc, #124]	; (80006cc <MX_GPIO_Init+0xb8>)
 800064e:	699b      	ldr	r3, [r3, #24]
 8000650:	f003 0304 	and.w	r3, r3, #4
 8000654:	60bb      	str	r3, [r7, #8]
 8000656:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000658:	4b1c      	ldr	r3, [pc, #112]	; (80006cc <MX_GPIO_Init+0xb8>)
 800065a:	699b      	ldr	r3, [r3, #24]
 800065c:	4a1b      	ldr	r2, [pc, #108]	; (80006cc <MX_GPIO_Init+0xb8>)
 800065e:	f043 0308 	orr.w	r3, r3, #8
 8000662:	6193      	str	r3, [r2, #24]
 8000664:	4b19      	ldr	r3, [pc, #100]	; (80006cc <MX_GPIO_Init+0xb8>)
 8000666:	699b      	ldr	r3, [r3, #24]
 8000668:	f003 0308 	and.w	r3, r3, #8
 800066c:	607b      	str	r3, [r7, #4]
 800066e:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5 | GPIO_PIN_11 | GPIO_PIN_12, GPIO_PIN_RESET);
 8000670:	2200      	movs	r2, #0
 8000672:	f44f 51c1 	mov.w	r1, #6176	; 0x1820
 8000676:	4816      	ldr	r0, [pc, #88]	; (80006d0 <MX_GPIO_Init+0xbc>)
 8000678:	f000 fe2a 	bl	80012d0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_8, GPIO_PIN_RESET);
 800067c:	2200      	movs	r2, #0
 800067e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000682:	4814      	ldr	r0, [pc, #80]	; (80006d4 <MX_GPIO_Init+0xc0>)
 8000684:	f000 fe24 	bl	80012d0 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : PA5 PA11 PA12 */
  GPIO_InitStruct.Pin = GPIO_PIN_5 | GPIO_PIN_11 | GPIO_PIN_12;
 8000688:	f44f 53c1 	mov.w	r3, #6176	; 0x1820
 800068c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800068e:	2301      	movs	r3, #1
 8000690:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000692:	2300      	movs	r3, #0
 8000694:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000696:	2302      	movs	r3, #2
 8000698:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800069a:	f107 0310 	add.w	r3, r7, #16
 800069e:	4619      	mov	r1, r3
 80006a0:	480b      	ldr	r0, [pc, #44]	; (80006d0 <MX_GPIO_Init+0xbc>)
 80006a2:	f000 fcbb 	bl	800101c <HAL_GPIO_Init>

  /*Configure GPIO pin : PB8 */
  GPIO_InitStruct.Pin = GPIO_PIN_8;
 80006a6:	f44f 7380 	mov.w	r3, #256	; 0x100
 80006aa:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80006ac:	2301      	movs	r3, #1
 80006ae:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80006b0:	2300      	movs	r3, #0
 80006b2:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80006b4:	2302      	movs	r3, #2
 80006b6:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80006b8:	f107 0310 	add.w	r3, r7, #16
 80006bc:	4619      	mov	r1, r3
 80006be:	4805      	ldr	r0, [pc, #20]	; (80006d4 <MX_GPIO_Init+0xc0>)
 80006c0:	f000 fcac 	bl	800101c <HAL_GPIO_Init>
}
 80006c4:	bf00      	nop
 80006c6:	3720      	adds	r7, #32
 80006c8:	46bd      	mov	sp, r7
 80006ca:	bd80      	pop	{r7, pc}
 80006cc:	40021000 	.word	0x40021000
 80006d0:	40010800 	.word	0x40010800
 80006d4:	40010c00 	.word	0x40010c00

080006d8 <senderTask>:

/* USER CODE BEGIN 4 */

void senderTask(void *argument)
{
 80006d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80006da:	b095      	sub	sp, #84	; 0x54
 80006dc:	af0e      	add	r7, sp, #56	; 0x38
 80006de:	6078      	str	r0, [r7, #4]
  BaseType_t status;
  TickType_t send_freq = pdMS_TO_TICKS(500);
 80006e0:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 80006e4:	617b      	str	r3, [r7, #20]
  TickType_t block_time = pdMS_TO_TICKS(3000);
 80006e6:	f640 33b8 	movw	r3, #3000	; 0xbb8
 80006ea:	613b      	str	r3, [r7, #16]
  DataFrame_t *dtDataToSend = (DataFrame_t *)argument;
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	60fb      	str	r3, [r7, #12]

  /* Infinite loop */
  for (;;)
  {
    newline;
 80006f0:	4e53      	ldr	r6, [pc, #332]	; (8000840 <senderTask+0x168>)
 80006f2:	4b54      	ldr	r3, [pc, #336]	; (8000844 <senderTask+0x16c>)
 80006f4:	930c      	str	r3, [sp, #48]	; 0x30
 80006f6:	466d      	mov	r5, sp
 80006f8:	f106 0410 	add.w	r4, r6, #16
 80006fc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80006fe:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000700:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000702:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000704:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000708:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 800070c:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8000710:	f000 f9d0 	bl	8000ab4 <vUARTSend>
    PRINT_VAR_IN_TASK(send_freq);
 8000714:	2264      	movs	r2, #100	; 0x64
 8000716:	2100      	movs	r1, #0
 8000718:	484b      	ldr	r0, [pc, #300]	; (8000848 <senderTask+0x170>)
 800071a:	f004 f9fc 	bl	8004b16 <memset>
 800071e:	2000      	movs	r0, #0
 8000720:	f002 fee4 	bl	80034ec <pcTaskGetName>
 8000724:	4602      	mov	r2, r0
 8000726:	697b      	ldr	r3, [r7, #20]
 8000728:	4948      	ldr	r1, [pc, #288]	; (800084c <senderTask+0x174>)
 800072a:	4847      	ldr	r0, [pc, #284]	; (8000848 <senderTask+0x170>)
 800072c:	f004 fa30 	bl	8004b90 <siprintf>
 8000730:	4e43      	ldr	r6, [pc, #268]	; (8000840 <senderTask+0x168>)
 8000732:	4b45      	ldr	r3, [pc, #276]	; (8000848 <senderTask+0x170>)
 8000734:	930c      	str	r3, [sp, #48]	; 0x30
 8000736:	466d      	mov	r5, sp
 8000738:	f106 0410 	add.w	r4, r6, #16
 800073c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800073e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000740:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000742:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000744:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000748:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 800074c:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8000750:	f000 f9b0 	bl	8000ab4 <vUARTSend>
 8000754:	4e3a      	ldr	r6, [pc, #232]	; (8000840 <senderTask+0x168>)
 8000756:	4b3b      	ldr	r3, [pc, #236]	; (8000844 <senderTask+0x16c>)
 8000758:	930c      	str	r3, [sp, #48]	; 0x30
 800075a:	466d      	mov	r5, sp
 800075c:	f106 0410 	add.w	r4, r6, #16
 8000760:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000762:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000764:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000766:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000768:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 800076c:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000770:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8000774:	f000 f99e 	bl	8000ab4 <vUARTSend>
    send_freq = RAND_U32(300, 3000);
 8000778:	f640 31b8 	movw	r1, #3000	; 0xbb8
 800077c:	f44f 7096 	mov.w	r0, #300	; 0x12c
 8000780:	f000 f9b1 	bl	8000ae6 <ucRandomNumber>
 8000784:	6178      	str	r0, [r7, #20]
    sprintf(main_string, "ChargePoint number %d starts transfering data\r\n", dtDataToSend->eDataSource);
 8000786:	68fb      	ldr	r3, [r7, #12]
 8000788:	781b      	ldrb	r3, [r3, #0]
 800078a:	461a      	mov	r2, r3
 800078c:	4930      	ldr	r1, [pc, #192]	; (8000850 <senderTask+0x178>)
 800078e:	4831      	ldr	r0, [pc, #196]	; (8000854 <senderTask+0x17c>)
 8000790:	f004 f9fe 	bl	8004b90 <siprintf>
    PRINT_IN_TASK(main_string);
 8000794:	2264      	movs	r2, #100	; 0x64
 8000796:	2100      	movs	r1, #0
 8000798:	482b      	ldr	r0, [pc, #172]	; (8000848 <senderTask+0x170>)
 800079a:	f004 f9bc 	bl	8004b16 <memset>
 800079e:	2000      	movs	r0, #0
 80007a0:	f002 fea4 	bl	80034ec <pcTaskGetName>
 80007a4:	4602      	mov	r2, r0
 80007a6:	4b2b      	ldr	r3, [pc, #172]	; (8000854 <senderTask+0x17c>)
 80007a8:	492b      	ldr	r1, [pc, #172]	; (8000858 <senderTask+0x180>)
 80007aa:	4827      	ldr	r0, [pc, #156]	; (8000848 <senderTask+0x170>)
 80007ac:	f004 f9f0 	bl	8004b90 <siprintf>
 80007b0:	4e23      	ldr	r6, [pc, #140]	; (8000840 <senderTask+0x168>)
 80007b2:	4b25      	ldr	r3, [pc, #148]	; (8000848 <senderTask+0x170>)
 80007b4:	930c      	str	r3, [sp, #48]	; 0x30
 80007b6:	466d      	mov	r5, sp
 80007b8:	f106 0410 	add.w	r4, r6, #16
 80007bc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80007be:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80007c0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80007c2:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80007c4:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 80007c8:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 80007cc:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 80007d0:	f000 f970 	bl	8000ab4 <vUARTSend>
    status = xQueueSendToBack(queue_handle, (void *)dtDataToSend, block_time); /* If the queue is full, senderTask will be blocked for maximum block_time before return fail */
 80007d4:	4b21      	ldr	r3, [pc, #132]	; (800085c <senderTask+0x184>)
 80007d6:	6818      	ldr	r0, [r3, #0]
 80007d8:	2300      	movs	r3, #0
 80007da:	693a      	ldr	r2, [r7, #16]
 80007dc:	68f9      	ldr	r1, [r7, #12]
 80007de:	f001 ffad 	bl	800273c <xQueueGenericSend>
 80007e2:	60b8      	str	r0, [r7, #8]
    if (status != pdPASS)
 80007e4:	68bb      	ldr	r3, [r7, #8]
 80007e6:	2b01      	cmp	r3, #1
 80007e8:	d026      	beq.n	8000838 <senderTask+0x160>
    {
      sprintf(main_string, "ChargePoint number %d failed to transfer data\r\n", dtDataToSend->eDataSource);
 80007ea:	68fb      	ldr	r3, [r7, #12]
 80007ec:	781b      	ldrb	r3, [r3, #0]
 80007ee:	461a      	mov	r2, r3
 80007f0:	491b      	ldr	r1, [pc, #108]	; (8000860 <senderTask+0x188>)
 80007f2:	4818      	ldr	r0, [pc, #96]	; (8000854 <senderTask+0x17c>)
 80007f4:	f004 f9cc 	bl	8004b90 <siprintf>
      PRINT_IN_TASK(main_string);
 80007f8:	2264      	movs	r2, #100	; 0x64
 80007fa:	2100      	movs	r1, #0
 80007fc:	4812      	ldr	r0, [pc, #72]	; (8000848 <senderTask+0x170>)
 80007fe:	f004 f98a 	bl	8004b16 <memset>
 8000802:	2000      	movs	r0, #0
 8000804:	f002 fe72 	bl	80034ec <pcTaskGetName>
 8000808:	4602      	mov	r2, r0
 800080a:	4b12      	ldr	r3, [pc, #72]	; (8000854 <senderTask+0x17c>)
 800080c:	4912      	ldr	r1, [pc, #72]	; (8000858 <senderTask+0x180>)
 800080e:	480e      	ldr	r0, [pc, #56]	; (8000848 <senderTask+0x170>)
 8000810:	f004 f9be 	bl	8004b90 <siprintf>
 8000814:	4e0a      	ldr	r6, [pc, #40]	; (8000840 <senderTask+0x168>)
 8000816:	4b0c      	ldr	r3, [pc, #48]	; (8000848 <senderTask+0x170>)
 8000818:	930c      	str	r3, [sp, #48]	; 0x30
 800081a:	466d      	mov	r5, sp
 800081c:	f106 0410 	add.w	r4, r6, #16
 8000820:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000822:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000824:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000826:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000828:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 800082c:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000830:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8000834:	f000 f93e 	bl	8000ab4 <vUARTSend>
    }

    osDelay(send_freq);
 8000838:	6978      	ldr	r0, [r7, #20]
 800083a:	f001 fcaf 	bl	800219c <osDelay>
    newline;
 800083e:	e757      	b.n	80006f0 <senderTask+0x18>
 8000840:	20002ecc 	.word	0x20002ecc
 8000844:	08005480 	.word	0x08005480
 8000848:	20002e50 	.word	0x20002e50
 800084c:	08005498 	.word	0x08005498
 8000850:	080054b8 	.word	0x080054b8
 8000854:	20002de4 	.word	0x20002de4
 8000858:	080054e8 	.word	0x080054e8
 800085c:	200000c8 	.word	0x200000c8
 8000860:	080054f4 	.word	0x080054f4

08000864 <receiverTask>:
/*receiverTask */
/**

*/
void receiverTask(void *argument)
{
 8000864:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000866:	b097      	sub	sp, #92	; 0x5c
 8000868:	af0e      	add	r7, sp, #56	; 0x38
 800086a:	6078      	str	r0, [r7, #4]
  DataFrame_t dtReceivedDataFrame; /* Create a variable to store data received from queue */
  BaseType_t status;
  TickType_t receive_freq = pdMS_TO_TICKS(500);
 800086c:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8000870:	61fb      	str	r3, [r7, #28]
  uint8_t nb_data_on_queue = 0;
 8000872:	2300      	movs	r3, #0
 8000874:	76fb      	strb	r3, [r7, #27]
  /* Infinite loop */
  for (;;)
  {
    newline;
 8000876:	4e79      	ldr	r6, [pc, #484]	; (8000a5c <receiverTask+0x1f8>)
 8000878:	4b79      	ldr	r3, [pc, #484]	; (8000a60 <receiverTask+0x1fc>)
 800087a:	930c      	str	r3, [sp, #48]	; 0x30
 800087c:	466d      	mov	r5, sp
 800087e:	f106 0410 	add.w	r4, r6, #16
 8000882:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000884:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000886:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000888:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800088a:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 800088e:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000892:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8000896:	f000 f90d 	bl	8000ab4 <vUARTSend>
    //Check number of data already on queue
    nb_data_on_queue = (uint8_t)uxQueueMessagesWaiting(queue_handle);
 800089a:	4b72      	ldr	r3, [pc, #456]	; (8000a64 <receiverTask+0x200>)
 800089c:	681b      	ldr	r3, [r3, #0]
 800089e:	4618      	mov	r0, r3
 80008a0:	f002 f9b6 	bl	8002c10 <uxQueueMessagesWaiting>
 80008a4:	4603      	mov	r3, r0
 80008a6:	76fb      	strb	r3, [r7, #27]
    if (nb_data_on_queue != 7)
 80008a8:	7efb      	ldrb	r3, [r7, #27]
 80008aa:	2b07      	cmp	r3, #7
 80008ac:	d031      	beq.n	8000912 <receiverTask+0xae>
    {
      PRINT_IN_TASK("Queue is not full\r\n");
 80008ae:	2264      	movs	r2, #100	; 0x64
 80008b0:	2100      	movs	r1, #0
 80008b2:	486d      	ldr	r0, [pc, #436]	; (8000a68 <receiverTask+0x204>)
 80008b4:	f004 f92f 	bl	8004b16 <memset>
 80008b8:	2000      	movs	r0, #0
 80008ba:	f002 fe17 	bl	80034ec <pcTaskGetName>
 80008be:	4602      	mov	r2, r0
 80008c0:	4b6a      	ldr	r3, [pc, #424]	; (8000a6c <receiverTask+0x208>)
 80008c2:	496b      	ldr	r1, [pc, #428]	; (8000a70 <receiverTask+0x20c>)
 80008c4:	4868      	ldr	r0, [pc, #416]	; (8000a68 <receiverTask+0x204>)
 80008c6:	f004 f963 	bl	8004b90 <siprintf>
 80008ca:	4e64      	ldr	r6, [pc, #400]	; (8000a5c <receiverTask+0x1f8>)
 80008cc:	4b66      	ldr	r3, [pc, #408]	; (8000a68 <receiverTask+0x204>)
 80008ce:	930c      	str	r3, [sp, #48]	; 0x30
 80008d0:	466d      	mov	r5, sp
 80008d2:	f106 0410 	add.w	r4, r6, #16
 80008d6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80008d8:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80008da:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80008dc:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80008de:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 80008e2:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 80008e6:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 80008ea:	f000 f8e3 	bl	8000ab4 <vUARTSend>
      newline;
 80008ee:	4e5b      	ldr	r6, [pc, #364]	; (8000a5c <receiverTask+0x1f8>)
 80008f0:	4b5b      	ldr	r3, [pc, #364]	; (8000a60 <receiverTask+0x1fc>)
 80008f2:	930c      	str	r3, [sp, #48]	; 0x30
 80008f4:	466d      	mov	r5, sp
 80008f6:	f106 0410 	add.w	r4, r6, #16
 80008fa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80008fc:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80008fe:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000900:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000902:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000906:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 800090a:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 800090e:	f000 f8d1 	bl	8000ab4 <vUARTSend>
    }

    status = xQueueReceive(queue_handle, &dtReceivedDataFrame, 0);
 8000912:	4b54      	ldr	r3, [pc, #336]	; (8000a64 <receiverTask+0x200>)
 8000914:	681b      	ldr	r3, [r3, #0]
 8000916:	f107 010c 	add.w	r1, r7, #12
 800091a:	2200      	movs	r2, #0
 800091c:	4618      	mov	r0, r3
 800091e:	f002 f89b 	bl	8002a58 <xQueueReceive>
 8000922:	6178      	str	r0, [r7, #20]
    if (status != pdPASS)
 8000924:	697b      	ldr	r3, [r7, #20]
 8000926:	2b01      	cmp	r3, #1
 8000928:	d020      	beq.n	800096c <receiverTask+0x108>
    {
      PRINT_IN_TASK("Receive data failed!\r\n");
 800092a:	2264      	movs	r2, #100	; 0x64
 800092c:	2100      	movs	r1, #0
 800092e:	484e      	ldr	r0, [pc, #312]	; (8000a68 <receiverTask+0x204>)
 8000930:	f004 f8f1 	bl	8004b16 <memset>
 8000934:	2000      	movs	r0, #0
 8000936:	f002 fdd9 	bl	80034ec <pcTaskGetName>
 800093a:	4602      	mov	r2, r0
 800093c:	4b4d      	ldr	r3, [pc, #308]	; (8000a74 <receiverTask+0x210>)
 800093e:	494c      	ldr	r1, [pc, #304]	; (8000a70 <receiverTask+0x20c>)
 8000940:	4849      	ldr	r0, [pc, #292]	; (8000a68 <receiverTask+0x204>)
 8000942:	f004 f925 	bl	8004b90 <siprintf>
 8000946:	4e45      	ldr	r6, [pc, #276]	; (8000a5c <receiverTask+0x1f8>)
 8000948:	4b47      	ldr	r3, [pc, #284]	; (8000a68 <receiverTask+0x204>)
 800094a:	930c      	str	r3, [sp, #48]	; 0x30
 800094c:	466d      	mov	r5, sp
 800094e:	f106 0410 	add.w	r4, r6, #16
 8000952:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000954:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000956:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000958:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800095a:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 800095e:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000962:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8000966:	f000 f8a5 	bl	8000ab4 <vUARTSend>
 800096a:	e072      	b.n	8000a52 <receiverTask+0x1ee>
    }
    else /* When receive data successfully */
    {
      switch (dtReceivedDataFrame.eDataSource)
 800096c:	7b3b      	ldrb	r3, [r7, #12]
 800096e:	2b06      	cmp	r3, #6
 8000970:	d847      	bhi.n	8000a02 <receiverTask+0x19e>
 8000972:	a201      	add	r2, pc, #4	; (adr r2, 8000978 <receiverTask+0x114>)
 8000974:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000978:	08000995 	.word	0x08000995
 800097c:	080009a5 	.word	0x080009a5
 8000980:	080009b5 	.word	0x080009b5
 8000984:	080009c5 	.word	0x080009c5
 8000988:	080009d5 	.word	0x080009d5
 800098c:	080009e5 	.word	0x080009e5
 8000990:	080009f5 	.word	0x080009f5
      {
      case (eChargePoint_1):
        sprintf((main_string), "Received data from ChargePoint %d - Data = %d\n\n\r", dtReceivedDataFrame.eDataSource + 1, (int)dtReceivedDataFrame.ulValue);
 8000994:	7b3b      	ldrb	r3, [r7, #12]
 8000996:	1c5a      	adds	r2, r3, #1
 8000998:	693b      	ldr	r3, [r7, #16]
 800099a:	4937      	ldr	r1, [pc, #220]	; (8000a78 <receiverTask+0x214>)
 800099c:	4837      	ldr	r0, [pc, #220]	; (8000a7c <receiverTask+0x218>)
 800099e:	f004 f8f7 	bl	8004b90 <siprintf>
        break;
 80009a2:	e036      	b.n	8000a12 <receiverTask+0x1ae>
      case (eChargePoint_2):
        sprintf((main_string), "Received data from ChargePoint %d - Data = %d\n\n\r", dtReceivedDataFrame.eDataSource + 1, (int)dtReceivedDataFrame.ulValue);
 80009a4:	7b3b      	ldrb	r3, [r7, #12]
 80009a6:	1c5a      	adds	r2, r3, #1
 80009a8:	693b      	ldr	r3, [r7, #16]
 80009aa:	4933      	ldr	r1, [pc, #204]	; (8000a78 <receiverTask+0x214>)
 80009ac:	4833      	ldr	r0, [pc, #204]	; (8000a7c <receiverTask+0x218>)
 80009ae:	f004 f8ef 	bl	8004b90 <siprintf>
        break;
 80009b2:	e02e      	b.n	8000a12 <receiverTask+0x1ae>
      case (eChargePoint_3):
        sprintf((main_string), "Received data from ChargePoint %d - Data = %d\n\n\r", dtReceivedDataFrame.eDataSource + 1, (int)dtReceivedDataFrame.ulValue);
 80009b4:	7b3b      	ldrb	r3, [r7, #12]
 80009b6:	1c5a      	adds	r2, r3, #1
 80009b8:	693b      	ldr	r3, [r7, #16]
 80009ba:	492f      	ldr	r1, [pc, #188]	; (8000a78 <receiverTask+0x214>)
 80009bc:	482f      	ldr	r0, [pc, #188]	; (8000a7c <receiverTask+0x218>)
 80009be:	f004 f8e7 	bl	8004b90 <siprintf>
        break;
 80009c2:	e026      	b.n	8000a12 <receiverTask+0x1ae>
      case (eChargePoint_4):
        sprintf((main_string), "Received data from ChargePoint %d - Data = %d\n\n\r", dtReceivedDataFrame.eDataSource + 1, (int)dtReceivedDataFrame.ulValue);
 80009c4:	7b3b      	ldrb	r3, [r7, #12]
 80009c6:	1c5a      	adds	r2, r3, #1
 80009c8:	693b      	ldr	r3, [r7, #16]
 80009ca:	492b      	ldr	r1, [pc, #172]	; (8000a78 <receiverTask+0x214>)
 80009cc:	482b      	ldr	r0, [pc, #172]	; (8000a7c <receiverTask+0x218>)
 80009ce:	f004 f8df 	bl	8004b90 <siprintf>
        break;
 80009d2:	e01e      	b.n	8000a12 <receiverTask+0x1ae>
      case (eChargePoint_5):
        sprintf((main_string), "Received data from ChargePoint %d - Data = %d\n\n\r", dtReceivedDataFrame.eDataSource + 1, (int)dtReceivedDataFrame.ulValue);
 80009d4:	7b3b      	ldrb	r3, [r7, #12]
 80009d6:	1c5a      	adds	r2, r3, #1
 80009d8:	693b      	ldr	r3, [r7, #16]
 80009da:	4927      	ldr	r1, [pc, #156]	; (8000a78 <receiverTask+0x214>)
 80009dc:	4827      	ldr	r0, [pc, #156]	; (8000a7c <receiverTask+0x218>)
 80009de:	f004 f8d7 	bl	8004b90 <siprintf>
        break;
 80009e2:	e016      	b.n	8000a12 <receiverTask+0x1ae>
      case (eChargePoint_6):
        sprintf((main_string), "Received data from ChargePoint %d - Data = %d\n\n\r", dtReceivedDataFrame.eDataSource + 1, (int)dtReceivedDataFrame.ulValue);
 80009e4:	7b3b      	ldrb	r3, [r7, #12]
 80009e6:	1c5a      	adds	r2, r3, #1
 80009e8:	693b      	ldr	r3, [r7, #16]
 80009ea:	4923      	ldr	r1, [pc, #140]	; (8000a78 <receiverTask+0x214>)
 80009ec:	4823      	ldr	r0, [pc, #140]	; (8000a7c <receiverTask+0x218>)
 80009ee:	f004 f8cf 	bl	8004b90 <siprintf>
        break;
 80009f2:	e00e      	b.n	8000a12 <receiverTask+0x1ae>
      case (eGateway):
        sprintf((main_string), "Received data from GateWay - Data = %d\n\n\r", (int)dtReceivedDataFrame.ulValue);
 80009f4:	693b      	ldr	r3, [r7, #16]
 80009f6:	461a      	mov	r2, r3
 80009f8:	4921      	ldr	r1, [pc, #132]	; (8000a80 <receiverTask+0x21c>)
 80009fa:	4820      	ldr	r0, [pc, #128]	; (8000a7c <receiverTask+0x218>)
 80009fc:	f004 f8c8 	bl	8004b90 <siprintf>
        break;
 8000a00:	e007      	b.n	8000a12 <receiverTask+0x1ae>
      default:
        sprintf((main_string), "Unknown data %d from %d\n\n\r", (int)dtReceivedDataFrame.ulValue, dtReceivedDataFrame.eDataSource);
 8000a02:	693b      	ldr	r3, [r7, #16]
 8000a04:	461a      	mov	r2, r3
 8000a06:	7b3b      	ldrb	r3, [r7, #12]
 8000a08:	491e      	ldr	r1, [pc, #120]	; (8000a84 <receiverTask+0x220>)
 8000a0a:	481c      	ldr	r0, [pc, #112]	; (8000a7c <receiverTask+0x218>)
 8000a0c:	f004 f8c0 	bl	8004b90 <siprintf>
        break;
 8000a10:	bf00      	nop
      }
      PRINT_IN_TASK(main_string);
 8000a12:	2264      	movs	r2, #100	; 0x64
 8000a14:	2100      	movs	r1, #0
 8000a16:	4814      	ldr	r0, [pc, #80]	; (8000a68 <receiverTask+0x204>)
 8000a18:	f004 f87d 	bl	8004b16 <memset>
 8000a1c:	2000      	movs	r0, #0
 8000a1e:	f002 fd65 	bl	80034ec <pcTaskGetName>
 8000a22:	4602      	mov	r2, r0
 8000a24:	4b15      	ldr	r3, [pc, #84]	; (8000a7c <receiverTask+0x218>)
 8000a26:	4912      	ldr	r1, [pc, #72]	; (8000a70 <receiverTask+0x20c>)
 8000a28:	480f      	ldr	r0, [pc, #60]	; (8000a68 <receiverTask+0x204>)
 8000a2a:	f004 f8b1 	bl	8004b90 <siprintf>
 8000a2e:	4e0b      	ldr	r6, [pc, #44]	; (8000a5c <receiverTask+0x1f8>)
 8000a30:	4b0d      	ldr	r3, [pc, #52]	; (8000a68 <receiverTask+0x204>)
 8000a32:	930c      	str	r3, [sp, #48]	; 0x30
 8000a34:	466d      	mov	r5, sp
 8000a36:	f106 0410 	add.w	r4, r6, #16
 8000a3a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000a3c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000a3e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8000a40:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8000a42:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8000a46:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
 8000a4a:	e896 000f 	ldmia.w	r6, {r0, r1, r2, r3}
 8000a4e:	f000 f831 	bl	8000ab4 <vUARTSend>
    }
    osDelay(receive_freq);
 8000a52:	69f8      	ldr	r0, [r7, #28]
 8000a54:	f001 fba2 	bl	800219c <osDelay>
    newline;
 8000a58:	e70d      	b.n	8000876 <receiverTask+0x12>
 8000a5a:	bf00      	nop
 8000a5c:	20002ecc 	.word	0x20002ecc
 8000a60:	08005480 	.word	0x08005480
 8000a64:	200000c8 	.word	0x200000c8
 8000a68:	20002e50 	.word	0x20002e50
 8000a6c:	08005524 	.word	0x08005524
 8000a70:	080054e8 	.word	0x080054e8
 8000a74:	08005538 	.word	0x08005538
 8000a78:	08005550 	.word	0x08005550
 8000a7c:	20002de4 	.word	0x20002de4
 8000a80:	08005584 	.word	0x08005584
 8000a84:	080055b0 	.word	0x080055b0

08000a88 <blinkTask>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_blinkTask */
void blinkTask(void *argument)
{
 8000a88:	b580      	push	{r7, lr}
 8000a8a:	b082      	sub	sp, #8
 8000a8c:	af00      	add	r7, sp, #0
 8000a8e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN blinkTask */
  /* Infinite loop */
  for (;;)
  {
    toggleLed4;
 8000a90:	f44f 7180 	mov.w	r1, #256	; 0x100
 8000a94:	4803      	ldr	r0, [pc, #12]	; (8000aa4 <blinkTask+0x1c>)
 8000a96:	f000 fc33 	bl	8001300 <HAL_GPIO_TogglePin>
    osDelay(1000);
 8000a9a:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8000a9e:	f001 fb7d 	bl	800219c <osDelay>
    toggleLed4;
 8000aa2:	e7f5      	b.n	8000a90 <blinkTask+0x8>
 8000aa4:	40010c00 	.word	0x40010c00

08000aa8 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000aa8:	b480      	push	{r7}
 8000aaa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8000aac:	bf00      	nop
 8000aae:	46bd      	mov	sp, r7
 8000ab0:	bc80      	pop	{r7}
 8000ab2:	4770      	bx	lr

08000ab4 <vUARTSend>:
#include "myLib.h"

#if defined(configHAL_UART)
void vUARTSend(UART_HandleTypeDef huart, uint8_t *String)
{
 8000ab4:	b084      	sub	sp, #16
 8000ab6:	b580      	push	{r7, lr}
 8000ab8:	af00      	add	r7, sp, #0
 8000aba:	f107 0c08 	add.w	ip, r7, #8
 8000abe:	e88c 000f 	stmia.w	ip, {r0, r1, r2, r3}
	HAL_UART_Transmit(&huart, (uint8_t *)String, strlen((char *)String), HAL_MAX_DELAY);
 8000ac2:	6cb8      	ldr	r0, [r7, #72]	; 0x48
 8000ac4:	f7ff fb44 	bl	8000150 <strlen>
 8000ac8:	4603      	mov	r3, r0
 8000aca:	b29a      	uxth	r2, r3
 8000acc:	f04f 33ff 	mov.w	r3, #4294967295
 8000ad0:	6cb9      	ldr	r1, [r7, #72]	; 0x48
 8000ad2:	f107 0008 	add.w	r0, r7, #8
 8000ad6:	f001 f894 	bl	8001c02 <HAL_UART_Transmit>
}
 8000ada:	bf00      	nop
 8000adc:	46bd      	mov	sp, r7
 8000ade:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 8000ae2:	b004      	add	sp, #16
 8000ae4:	4770      	bx	lr

08000ae6 <ucRandomNumber>:
	}
}
#endif /* configLL_UART */

uint32_t ucRandomNumber(uint32_t min, uint32_t max)
{
 8000ae6:	b580      	push	{r7, lr}
 8000ae8:	b082      	sub	sp, #8
 8000aea:	af00      	add	r7, sp, #0
 8000aec:	6078      	str	r0, [r7, #4]
 8000aee:	6039      	str	r1, [r7, #0]
	return (min + rand() % (max + 1 - min));
 8000af0:	f004 f81a 	bl	8004b28 <rand>
 8000af4:	4603      	mov	r3, r0
 8000af6:	461a      	mov	r2, r3
 8000af8:	6839      	ldr	r1, [r7, #0]
 8000afa:	687b      	ldr	r3, [r7, #4]
 8000afc:	1acb      	subs	r3, r1, r3
 8000afe:	3301      	adds	r3, #1
 8000b00:	fbb2 f1f3 	udiv	r1, r2, r3
 8000b04:	fb03 f301 	mul.w	r3, r3, r1
 8000b08:	1ad2      	subs	r2, r2, r3
 8000b0a:	687b      	ldr	r3, [r7, #4]
 8000b0c:	4413      	add	r3, r2
}
 8000b0e:	4618      	mov	r0, r3
 8000b10:	3708      	adds	r7, #8
 8000b12:	46bd      	mov	sp, r7
 8000b14:	bd80      	pop	{r7, pc}
	...

08000b18 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8000b18:	b480      	push	{r7}
 8000b1a:	b085      	sub	sp, #20
 8000b1c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_AFIO_CLK_ENABLE();
 8000b1e:	4b15      	ldr	r3, [pc, #84]	; (8000b74 <HAL_MspInit+0x5c>)
 8000b20:	699b      	ldr	r3, [r3, #24]
 8000b22:	4a14      	ldr	r2, [pc, #80]	; (8000b74 <HAL_MspInit+0x5c>)
 8000b24:	f043 0301 	orr.w	r3, r3, #1
 8000b28:	6193      	str	r3, [r2, #24]
 8000b2a:	4b12      	ldr	r3, [pc, #72]	; (8000b74 <HAL_MspInit+0x5c>)
 8000b2c:	699b      	ldr	r3, [r3, #24]
 8000b2e:	f003 0301 	and.w	r3, r3, #1
 8000b32:	60bb      	str	r3, [r7, #8]
 8000b34:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_PWR_CLK_ENABLE();
 8000b36:	4b0f      	ldr	r3, [pc, #60]	; (8000b74 <HAL_MspInit+0x5c>)
 8000b38:	69db      	ldr	r3, [r3, #28]
 8000b3a:	4a0e      	ldr	r2, [pc, #56]	; (8000b74 <HAL_MspInit+0x5c>)
 8000b3c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000b40:	61d3      	str	r3, [r2, #28]
 8000b42:	4b0c      	ldr	r3, [pc, #48]	; (8000b74 <HAL_MspInit+0x5c>)
 8000b44:	69db      	ldr	r3, [r3, #28]
 8000b46:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000b4a:	607b      	str	r3, [r7, #4]
 8000b4c:	687b      	ldr	r3, [r7, #4]

  /* System interrupt init*/

  /** NOJTAG: JTAG-DP Disabled and SW-DP Enabled
  */
  __HAL_AFIO_REMAP_SWJ_NOJTAG();
 8000b4e:	4b0a      	ldr	r3, [pc, #40]	; (8000b78 <HAL_MspInit+0x60>)
 8000b50:	685b      	ldr	r3, [r3, #4]
 8000b52:	60fb      	str	r3, [r7, #12]
 8000b54:	68fb      	ldr	r3, [r7, #12]
 8000b56:	f023 63e0 	bic.w	r3, r3, #117440512	; 0x7000000
 8000b5a:	60fb      	str	r3, [r7, #12]
 8000b5c:	68fb      	ldr	r3, [r7, #12]
 8000b5e:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8000b62:	60fb      	str	r3, [r7, #12]
 8000b64:	4a04      	ldr	r2, [pc, #16]	; (8000b78 <HAL_MspInit+0x60>)
 8000b66:	68fb      	ldr	r3, [r7, #12]
 8000b68:	6053      	str	r3, [r2, #4]

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8000b6a:	bf00      	nop
 8000b6c:	3714      	adds	r7, #20
 8000b6e:	46bd      	mov	sp, r7
 8000b70:	bc80      	pop	{r7}
 8000b72:	4770      	bx	lr
 8000b74:	40021000 	.word	0x40021000
 8000b78:	40010000 	.word	0x40010000

08000b7c <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8000b7c:	b580      	push	{r7, lr}
 8000b7e:	b088      	sub	sp, #32
 8000b80:	af00      	add	r7, sp, #0
 8000b82:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000b84:	f107 0310 	add.w	r3, r7, #16
 8000b88:	2200      	movs	r2, #0
 8000b8a:	601a      	str	r2, [r3, #0]
 8000b8c:	605a      	str	r2, [r3, #4]
 8000b8e:	609a      	str	r2, [r3, #8]
 8000b90:	60da      	str	r2, [r3, #12]
  if(huart->Instance==USART2)
 8000b92:	687b      	ldr	r3, [r7, #4]
 8000b94:	681b      	ldr	r3, [r3, #0]
 8000b96:	4a1b      	ldr	r2, [pc, #108]	; (8000c04 <HAL_UART_MspInit+0x88>)
 8000b98:	4293      	cmp	r3, r2
 8000b9a:	d12f      	bne.n	8000bfc <HAL_UART_MspInit+0x80>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8000b9c:	4b1a      	ldr	r3, [pc, #104]	; (8000c08 <HAL_UART_MspInit+0x8c>)
 8000b9e:	69db      	ldr	r3, [r3, #28]
 8000ba0:	4a19      	ldr	r2, [pc, #100]	; (8000c08 <HAL_UART_MspInit+0x8c>)
 8000ba2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000ba6:	61d3      	str	r3, [r2, #28]
 8000ba8:	4b17      	ldr	r3, [pc, #92]	; (8000c08 <HAL_UART_MspInit+0x8c>)
 8000baa:	69db      	ldr	r3, [r3, #28]
 8000bac:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000bb0:	60fb      	str	r3, [r7, #12]
 8000bb2:	68fb      	ldr	r3, [r7, #12]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8000bb4:	4b14      	ldr	r3, [pc, #80]	; (8000c08 <HAL_UART_MspInit+0x8c>)
 8000bb6:	699b      	ldr	r3, [r3, #24]
 8000bb8:	4a13      	ldr	r2, [pc, #76]	; (8000c08 <HAL_UART_MspInit+0x8c>)
 8000bba:	f043 0304 	orr.w	r3, r3, #4
 8000bbe:	6193      	str	r3, [r2, #24]
 8000bc0:	4b11      	ldr	r3, [pc, #68]	; (8000c08 <HAL_UART_MspInit+0x8c>)
 8000bc2:	699b      	ldr	r3, [r3, #24]
 8000bc4:	f003 0304 	and.w	r3, r3, #4
 8000bc8:	60bb      	str	r3, [r7, #8]
 8000bca:	68bb      	ldr	r3, [r7, #8]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2;
 8000bcc:	2304      	movs	r3, #4
 8000bce:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000bd0:	2302      	movs	r3, #2
 8000bd2:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8000bd4:	2303      	movs	r3, #3
 8000bd6:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000bd8:	f107 0310 	add.w	r3, r7, #16
 8000bdc:	4619      	mov	r1, r3
 8000bde:	480b      	ldr	r0, [pc, #44]	; (8000c0c <HAL_UART_MspInit+0x90>)
 8000be0:	f000 fa1c 	bl	800101c <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8000be4:	2308      	movs	r3, #8
 8000be6:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000be8:	2300      	movs	r3, #0
 8000bea:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000bec:	2300      	movs	r3, #0
 8000bee:	61bb      	str	r3, [r7, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000bf0:	f107 0310 	add.w	r3, r7, #16
 8000bf4:	4619      	mov	r1, r3
 8000bf6:	4805      	ldr	r0, [pc, #20]	; (8000c0c <HAL_UART_MspInit+0x90>)
 8000bf8:	f000 fa10 	bl	800101c <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 8000bfc:	bf00      	nop
 8000bfe:	3720      	adds	r7, #32
 8000c00:	46bd      	mov	sp, r7
 8000c02:	bd80      	pop	{r7, pc}
 8000c04:	40004400 	.word	0x40004400
 8000c08:	40021000 	.word	0x40021000
 8000c0c:	40010800 	.word	0x40010800

08000c10 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8000c10:	b480      	push	{r7}
 8000c12:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8000c14:	bf00      	nop
 8000c16:	46bd      	mov	sp, r7
 8000c18:	bc80      	pop	{r7}
 8000c1a:	4770      	bx	lr

08000c1c <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8000c1c:	b580      	push	{r7, lr}
 8000c1e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
  {
	  HAL_UART_Transmit(&huart2, (uint8_t*)"[HardFault_Handler]System Failed\r\n", strlen("[HardFault_Handler]System Failed\r\n"), 20);
 8000c20:	2314      	movs	r3, #20
 8000c22:	2222      	movs	r2, #34	; 0x22
 8000c24:	4902      	ldr	r1, [pc, #8]	; (8000c30 <HardFault_Handler+0x14>)
 8000c26:	4803      	ldr	r0, [pc, #12]	; (8000c34 <HardFault_Handler+0x18>)
 8000c28:	f000 ffeb 	bl	8001c02 <HAL_UART_Transmit>
  {
 8000c2c:	e7f8      	b.n	8000c20 <HardFault_Handler+0x4>
 8000c2e:	bf00      	nop
 8000c30:	080055cc 	.word	0x080055cc
 8000c34:	20002ecc 	.word	0x20002ecc

08000c38 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8000c38:	b480      	push	{r7}
 8000c3a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8000c3c:	e7fe      	b.n	8000c3c <MemManage_Handler+0x4>

08000c3e <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8000c3e:	b480      	push	{r7}
 8000c40:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8000c42:	e7fe      	b.n	8000c42 <BusFault_Handler+0x4>

08000c44 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8000c44:	b480      	push	{r7}
 8000c46:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8000c48:	e7fe      	b.n	8000c48 <UsageFault_Handler+0x4>

08000c4a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8000c4a:	b480      	push	{r7}
 8000c4c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8000c4e:	bf00      	nop
 8000c50:	46bd      	mov	sp, r7
 8000c52:	bc80      	pop	{r7}
 8000c54:	4770      	bx	lr

08000c56 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8000c56:	b580      	push	{r7, lr}
 8000c58:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8000c5a:	f000 f8df 	bl	8000e1c <HAL_IncTick>
#if (INCLUDE_xTaskGetSchedulerState == 1 )
  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED)
 8000c5e:	f002 ff89 	bl	8003b74 <xTaskGetSchedulerState>
 8000c62:	4603      	mov	r3, r0
 8000c64:	2b01      	cmp	r3, #1
 8000c66:	d001      	beq.n	8000c6c <SysTick_Handler+0x16>
  {
#endif /* INCLUDE_xTaskGetSchedulerState */
  xPortSysTickHandler();
 8000c68:	f003 fcce 	bl	8004608 <xPortSysTickHandler>
  }
#endif /* INCLUDE_xTaskGetSchedulerState */
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8000c6c:	bf00      	nop
 8000c6e:	bd80      	pop	{r7, pc}

08000c70 <_sbrk>:
 8000c70:	b580      	push	{r7, lr}
 8000c72:	b086      	sub	sp, #24
 8000c74:	af00      	add	r7, sp, #0
 8000c76:	6078      	str	r0, [r7, #4]
 8000c78:	4a14      	ldr	r2, [pc, #80]	; (8000ccc <_sbrk+0x5c>)
 8000c7a:	4b15      	ldr	r3, [pc, #84]	; (8000cd0 <_sbrk+0x60>)
 8000c7c:	1ad3      	subs	r3, r2, r3
 8000c7e:	617b      	str	r3, [r7, #20]
 8000c80:	697b      	ldr	r3, [r7, #20]
 8000c82:	613b      	str	r3, [r7, #16]
 8000c84:	4b13      	ldr	r3, [pc, #76]	; (8000cd4 <_sbrk+0x64>)
 8000c86:	681b      	ldr	r3, [r3, #0]
 8000c88:	2b00      	cmp	r3, #0
 8000c8a:	d102      	bne.n	8000c92 <_sbrk+0x22>
 8000c8c:	4b11      	ldr	r3, [pc, #68]	; (8000cd4 <_sbrk+0x64>)
 8000c8e:	4a12      	ldr	r2, [pc, #72]	; (8000cd8 <_sbrk+0x68>)
 8000c90:	601a      	str	r2, [r3, #0]
 8000c92:	4b10      	ldr	r3, [pc, #64]	; (8000cd4 <_sbrk+0x64>)
 8000c94:	681a      	ldr	r2, [r3, #0]
 8000c96:	687b      	ldr	r3, [r7, #4]
 8000c98:	4413      	add	r3, r2
 8000c9a:	693a      	ldr	r2, [r7, #16]
 8000c9c:	429a      	cmp	r2, r3
 8000c9e:	d207      	bcs.n	8000cb0 <_sbrk+0x40>
 8000ca0:	f003 ff04 	bl	8004aac <__errno>
 8000ca4:	4602      	mov	r2, r0
 8000ca6:	230c      	movs	r3, #12
 8000ca8:	6013      	str	r3, [r2, #0]
 8000caa:	f04f 33ff 	mov.w	r3, #4294967295
 8000cae:	e009      	b.n	8000cc4 <_sbrk+0x54>
 8000cb0:	4b08      	ldr	r3, [pc, #32]	; (8000cd4 <_sbrk+0x64>)
 8000cb2:	681b      	ldr	r3, [r3, #0]
 8000cb4:	60fb      	str	r3, [r7, #12]
 8000cb6:	4b07      	ldr	r3, [pc, #28]	; (8000cd4 <_sbrk+0x64>)
 8000cb8:	681a      	ldr	r2, [r3, #0]
 8000cba:	687b      	ldr	r3, [r7, #4]
 8000cbc:	4413      	add	r3, r2
 8000cbe:	4a05      	ldr	r2, [pc, #20]	; (8000cd4 <_sbrk+0x64>)
 8000cc0:	6013      	str	r3, [r2, #0]
 8000cc2:	68fb      	ldr	r3, [r7, #12]
 8000cc4:	4618      	mov	r0, r3
 8000cc6:	3718      	adds	r7, #24
 8000cc8:	46bd      	mov	sp, r7
 8000cca:	bd80      	pop	{r7, pc}
 8000ccc:	20005000 	.word	0x20005000
 8000cd0:	00000400 	.word	0x00000400
 8000cd4:	200000d0 	.word	0x200000d0
 8000cd8:	20002f58 	.word	0x20002f58

08000cdc <SystemInit>:
 8000cdc:	b480      	push	{r7}
 8000cde:	af00      	add	r7, sp, #0
 8000ce0:	4b15      	ldr	r3, [pc, #84]	; (8000d38 <SystemInit+0x5c>)
 8000ce2:	681b      	ldr	r3, [r3, #0]
 8000ce4:	4a14      	ldr	r2, [pc, #80]	; (8000d38 <SystemInit+0x5c>)
 8000ce6:	f043 0301 	orr.w	r3, r3, #1
 8000cea:	6013      	str	r3, [r2, #0]
 8000cec:	4b12      	ldr	r3, [pc, #72]	; (8000d38 <SystemInit+0x5c>)
 8000cee:	685a      	ldr	r2, [r3, #4]
 8000cf0:	4911      	ldr	r1, [pc, #68]	; (8000d38 <SystemInit+0x5c>)
 8000cf2:	4b12      	ldr	r3, [pc, #72]	; (8000d3c <SystemInit+0x60>)
 8000cf4:	4013      	ands	r3, r2
 8000cf6:	604b      	str	r3, [r1, #4]
 8000cf8:	4b0f      	ldr	r3, [pc, #60]	; (8000d38 <SystemInit+0x5c>)
 8000cfa:	681b      	ldr	r3, [r3, #0]
 8000cfc:	4a0e      	ldr	r2, [pc, #56]	; (8000d38 <SystemInit+0x5c>)
 8000cfe:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8000d02:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8000d06:	6013      	str	r3, [r2, #0]
 8000d08:	4b0b      	ldr	r3, [pc, #44]	; (8000d38 <SystemInit+0x5c>)
 8000d0a:	681b      	ldr	r3, [r3, #0]
 8000d0c:	4a0a      	ldr	r2, [pc, #40]	; (8000d38 <SystemInit+0x5c>)
 8000d0e:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8000d12:	6013      	str	r3, [r2, #0]
 8000d14:	4b08      	ldr	r3, [pc, #32]	; (8000d38 <SystemInit+0x5c>)
 8000d16:	685b      	ldr	r3, [r3, #4]
 8000d18:	4a07      	ldr	r2, [pc, #28]	; (8000d38 <SystemInit+0x5c>)
 8000d1a:	f423 03fe 	bic.w	r3, r3, #8323072	; 0x7f0000
 8000d1e:	6053      	str	r3, [r2, #4]
 8000d20:	4b05      	ldr	r3, [pc, #20]	; (8000d38 <SystemInit+0x5c>)
 8000d22:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 8000d26:	609a      	str	r2, [r3, #8]
 8000d28:	4b05      	ldr	r3, [pc, #20]	; (8000d40 <SystemInit+0x64>)
 8000d2a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000d2e:	609a      	str	r2, [r3, #8]
 8000d30:	bf00      	nop
 8000d32:	46bd      	mov	sp, r7
 8000d34:	bc80      	pop	{r7}
 8000d36:	4770      	bx	lr
 8000d38:	40021000 	.word	0x40021000
 8000d3c:	f8ff0000 	.word	0xf8ff0000
 8000d40:	e000ed00 	.word	0xe000ed00

08000d44 <Reset_Handler>:
 8000d44:	2100      	movs	r1, #0
 8000d46:	e003      	b.n	8000d50 <LoopCopyDataInit>

08000d48 <CopyDataInit>:
 8000d48:	4b0b      	ldr	r3, [pc, #44]	; (8000d78 <LoopFillZerobss+0x14>)
 8000d4a:	585b      	ldr	r3, [r3, r1]
 8000d4c:	5043      	str	r3, [r0, r1]
 8000d4e:	3104      	adds	r1, #4

08000d50 <LoopCopyDataInit>:
 8000d50:	480a      	ldr	r0, [pc, #40]	; (8000d7c <LoopFillZerobss+0x18>)
 8000d52:	4b0b      	ldr	r3, [pc, #44]	; (8000d80 <LoopFillZerobss+0x1c>)
 8000d54:	1842      	adds	r2, r0, r1
 8000d56:	429a      	cmp	r2, r3
 8000d58:	d3f6      	bcc.n	8000d48 <CopyDataInit>
 8000d5a:	4a0a      	ldr	r2, [pc, #40]	; (8000d84 <LoopFillZerobss+0x20>)
 8000d5c:	e002      	b.n	8000d64 <LoopFillZerobss>

08000d5e <FillZerobss>:
 8000d5e:	2300      	movs	r3, #0
 8000d60:	f842 3b04 	str.w	r3, [r2], #4

08000d64 <LoopFillZerobss>:
 8000d64:	4b08      	ldr	r3, [pc, #32]	; (8000d88 <LoopFillZerobss+0x24>)
 8000d66:	429a      	cmp	r2, r3
 8000d68:	d3f9      	bcc.n	8000d5e <FillZerobss>
 8000d6a:	f7ff ffb7 	bl	8000cdc <SystemInit>
 8000d6e:	f003 fea3 	bl	8004ab8 <__libc_init_array>
 8000d72:	f7ff f9f5 	bl	8000160 <main>
 8000d76:	4770      	bx	lr
 8000d78:	080056dc 	.word	0x080056dc
 8000d7c:	20000000 	.word	0x20000000
 8000d80:	200000ac 	.word	0x200000ac
 8000d84:	200000ac 	.word	0x200000ac
 8000d88:	20002f58 	.word	0x20002f58

08000d8c <ADC1_2_IRQHandler>:
 8000d8c:	e7fe      	b.n	8000d8c <ADC1_2_IRQHandler>
	...

08000d90 <HAL_Init>:
 8000d90:	b580      	push	{r7, lr}
 8000d92:	af00      	add	r7, sp, #0
 8000d94:	4b08      	ldr	r3, [pc, #32]	; (8000db8 <HAL_Init+0x28>)
 8000d96:	681b      	ldr	r3, [r3, #0]
 8000d98:	4a07      	ldr	r2, [pc, #28]	; (8000db8 <HAL_Init+0x28>)
 8000d9a:	f043 0310 	orr.w	r3, r3, #16
 8000d9e:	6013      	str	r3, [r2, #0]
 8000da0:	2003      	movs	r0, #3
 8000da2:	f000 f907 	bl	8000fb4 <HAL_NVIC_SetPriorityGrouping>
 8000da6:	2000      	movs	r0, #0
 8000da8:	f000 f808 	bl	8000dbc <HAL_InitTick>
 8000dac:	f7ff feb4 	bl	8000b18 <HAL_MspInit>
 8000db0:	2300      	movs	r3, #0
 8000db2:	4618      	mov	r0, r3
 8000db4:	bd80      	pop	{r7, pc}
 8000db6:	bf00      	nop
 8000db8:	40022000 	.word	0x40022000

08000dbc <HAL_InitTick>:
 8000dbc:	b580      	push	{r7, lr}
 8000dbe:	b082      	sub	sp, #8
 8000dc0:	af00      	add	r7, sp, #0
 8000dc2:	6078      	str	r0, [r7, #4]
 8000dc4:	4b12      	ldr	r3, [pc, #72]	; (8000e10 <HAL_InitTick+0x54>)
 8000dc6:	681a      	ldr	r2, [r3, #0]
 8000dc8:	4b12      	ldr	r3, [pc, #72]	; (8000e14 <HAL_InitTick+0x58>)
 8000dca:	781b      	ldrb	r3, [r3, #0]
 8000dcc:	4619      	mov	r1, r3
 8000dce:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8000dd2:	fbb3 f3f1 	udiv	r3, r3, r1
 8000dd6:	fbb2 f3f3 	udiv	r3, r2, r3
 8000dda:	4618      	mov	r0, r3
 8000ddc:	f000 f911 	bl	8001002 <HAL_SYSTICK_Config>
 8000de0:	4603      	mov	r3, r0
 8000de2:	2b00      	cmp	r3, #0
 8000de4:	d001      	beq.n	8000dea <HAL_InitTick+0x2e>
 8000de6:	2301      	movs	r3, #1
 8000de8:	e00e      	b.n	8000e08 <HAL_InitTick+0x4c>
 8000dea:	687b      	ldr	r3, [r7, #4]
 8000dec:	2b0f      	cmp	r3, #15
 8000dee:	d80a      	bhi.n	8000e06 <HAL_InitTick+0x4a>
 8000df0:	2200      	movs	r2, #0
 8000df2:	6879      	ldr	r1, [r7, #4]
 8000df4:	f04f 30ff 	mov.w	r0, #4294967295
 8000df8:	f000 f8e7 	bl	8000fca <HAL_NVIC_SetPriority>
 8000dfc:	4a06      	ldr	r2, [pc, #24]	; (8000e18 <HAL_InitTick+0x5c>)
 8000dfe:	687b      	ldr	r3, [r7, #4]
 8000e00:	6013      	str	r3, [r2, #0]
 8000e02:	2300      	movs	r3, #0
 8000e04:	e000      	b.n	8000e08 <HAL_InitTick+0x4c>
 8000e06:	2301      	movs	r3, #1
 8000e08:	4618      	mov	r0, r3
 8000e0a:	3708      	adds	r7, #8
 8000e0c:	46bd      	mov	sp, r7
 8000e0e:	bd80      	pop	{r7, pc}
 8000e10:	20000038 	.word	0x20000038
 8000e14:	20000040 	.word	0x20000040
 8000e18:	2000003c 	.word	0x2000003c

08000e1c <HAL_IncTick>:
 8000e1c:	b480      	push	{r7}
 8000e1e:	af00      	add	r7, sp, #0
 8000e20:	4b05      	ldr	r3, [pc, #20]	; (8000e38 <HAL_IncTick+0x1c>)
 8000e22:	781b      	ldrb	r3, [r3, #0]
 8000e24:	461a      	mov	r2, r3
 8000e26:	4b05      	ldr	r3, [pc, #20]	; (8000e3c <HAL_IncTick+0x20>)
 8000e28:	681b      	ldr	r3, [r3, #0]
 8000e2a:	4413      	add	r3, r2
 8000e2c:	4a03      	ldr	r2, [pc, #12]	; (8000e3c <HAL_IncTick+0x20>)
 8000e2e:	6013      	str	r3, [r2, #0]
 8000e30:	bf00      	nop
 8000e32:	46bd      	mov	sp, r7
 8000e34:	bc80      	pop	{r7}
 8000e36:	4770      	bx	lr
 8000e38:	20000040 	.word	0x20000040
 8000e3c:	20002f10 	.word	0x20002f10

08000e40 <HAL_GetTick>:
 8000e40:	b480      	push	{r7}
 8000e42:	af00      	add	r7, sp, #0
 8000e44:	4b02      	ldr	r3, [pc, #8]	; (8000e50 <HAL_GetTick+0x10>)
 8000e46:	681b      	ldr	r3, [r3, #0]
 8000e48:	4618      	mov	r0, r3
 8000e4a:	46bd      	mov	sp, r7
 8000e4c:	bc80      	pop	{r7}
 8000e4e:	4770      	bx	lr
 8000e50:	20002f10 	.word	0x20002f10

08000e54 <__NVIC_SetPriorityGrouping>:
 8000e54:	b480      	push	{r7}
 8000e56:	b085      	sub	sp, #20
 8000e58:	af00      	add	r7, sp, #0
 8000e5a:	6078      	str	r0, [r7, #4]
 8000e5c:	687b      	ldr	r3, [r7, #4]
 8000e5e:	f003 0307 	and.w	r3, r3, #7
 8000e62:	60fb      	str	r3, [r7, #12]
 8000e64:	4b0c      	ldr	r3, [pc, #48]	; (8000e98 <__NVIC_SetPriorityGrouping+0x44>)
 8000e66:	68db      	ldr	r3, [r3, #12]
 8000e68:	60bb      	str	r3, [r7, #8]
 8000e6a:	68ba      	ldr	r2, [r7, #8]
 8000e6c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8000e70:	4013      	ands	r3, r2
 8000e72:	60bb      	str	r3, [r7, #8]
 8000e74:	68fb      	ldr	r3, [r7, #12]
 8000e76:	021a      	lsls	r2, r3, #8
 8000e78:	68bb      	ldr	r3, [r7, #8]
 8000e7a:	4313      	orrs	r3, r2
 8000e7c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8000e80:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8000e84:	60bb      	str	r3, [r7, #8]
 8000e86:	4a04      	ldr	r2, [pc, #16]	; (8000e98 <__NVIC_SetPriorityGrouping+0x44>)
 8000e88:	68bb      	ldr	r3, [r7, #8]
 8000e8a:	60d3      	str	r3, [r2, #12]
 8000e8c:	bf00      	nop
 8000e8e:	3714      	adds	r7, #20
 8000e90:	46bd      	mov	sp, r7
 8000e92:	bc80      	pop	{r7}
 8000e94:	4770      	bx	lr
 8000e96:	bf00      	nop
 8000e98:	e000ed00 	.word	0xe000ed00

08000e9c <__NVIC_GetPriorityGrouping>:
 8000e9c:	b480      	push	{r7}
 8000e9e:	af00      	add	r7, sp, #0
 8000ea0:	4b04      	ldr	r3, [pc, #16]	; (8000eb4 <__NVIC_GetPriorityGrouping+0x18>)
 8000ea2:	68db      	ldr	r3, [r3, #12]
 8000ea4:	0a1b      	lsrs	r3, r3, #8
 8000ea6:	f003 0307 	and.w	r3, r3, #7
 8000eaa:	4618      	mov	r0, r3
 8000eac:	46bd      	mov	sp, r7
 8000eae:	bc80      	pop	{r7}
 8000eb0:	4770      	bx	lr
 8000eb2:	bf00      	nop
 8000eb4:	e000ed00 	.word	0xe000ed00

08000eb8 <__NVIC_SetPriority>:
 8000eb8:	b480      	push	{r7}
 8000eba:	b083      	sub	sp, #12
 8000ebc:	af00      	add	r7, sp, #0
 8000ebe:	4603      	mov	r3, r0
 8000ec0:	6039      	str	r1, [r7, #0]
 8000ec2:	71fb      	strb	r3, [r7, #7]
 8000ec4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000ec8:	2b00      	cmp	r3, #0
 8000eca:	db0a      	blt.n	8000ee2 <__NVIC_SetPriority+0x2a>
 8000ecc:	683b      	ldr	r3, [r7, #0]
 8000ece:	b2da      	uxtb	r2, r3
 8000ed0:	490c      	ldr	r1, [pc, #48]	; (8000f04 <__NVIC_SetPriority+0x4c>)
 8000ed2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000ed6:	0112      	lsls	r2, r2, #4
 8000ed8:	b2d2      	uxtb	r2, r2
 8000eda:	440b      	add	r3, r1
 8000edc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8000ee0:	e00a      	b.n	8000ef8 <__NVIC_SetPriority+0x40>
 8000ee2:	683b      	ldr	r3, [r7, #0]
 8000ee4:	b2da      	uxtb	r2, r3
 8000ee6:	4908      	ldr	r1, [pc, #32]	; (8000f08 <__NVIC_SetPriority+0x50>)
 8000ee8:	79fb      	ldrb	r3, [r7, #7]
 8000eea:	f003 030f 	and.w	r3, r3, #15
 8000eee:	3b04      	subs	r3, #4
 8000ef0:	0112      	lsls	r2, r2, #4
 8000ef2:	b2d2      	uxtb	r2, r2
 8000ef4:	440b      	add	r3, r1
 8000ef6:	761a      	strb	r2, [r3, #24]
 8000ef8:	bf00      	nop
 8000efa:	370c      	adds	r7, #12
 8000efc:	46bd      	mov	sp, r7
 8000efe:	bc80      	pop	{r7}
 8000f00:	4770      	bx	lr
 8000f02:	bf00      	nop
 8000f04:	e000e100 	.word	0xe000e100
 8000f08:	e000ed00 	.word	0xe000ed00

08000f0c <NVIC_EncodePriority>:
 8000f0c:	b480      	push	{r7}
 8000f0e:	b089      	sub	sp, #36	; 0x24
 8000f10:	af00      	add	r7, sp, #0
 8000f12:	60f8      	str	r0, [r7, #12]
 8000f14:	60b9      	str	r1, [r7, #8]
 8000f16:	607a      	str	r2, [r7, #4]
 8000f18:	68fb      	ldr	r3, [r7, #12]
 8000f1a:	f003 0307 	and.w	r3, r3, #7
 8000f1e:	61fb      	str	r3, [r7, #28]
 8000f20:	69fb      	ldr	r3, [r7, #28]
 8000f22:	f1c3 0307 	rsb	r3, r3, #7
 8000f26:	2b04      	cmp	r3, #4
 8000f28:	bf28      	it	cs
 8000f2a:	2304      	movcs	r3, #4
 8000f2c:	61bb      	str	r3, [r7, #24]
 8000f2e:	69fb      	ldr	r3, [r7, #28]
 8000f30:	3304      	adds	r3, #4
 8000f32:	2b06      	cmp	r3, #6
 8000f34:	d902      	bls.n	8000f3c <NVIC_EncodePriority+0x30>
 8000f36:	69fb      	ldr	r3, [r7, #28]
 8000f38:	3b03      	subs	r3, #3
 8000f3a:	e000      	b.n	8000f3e <NVIC_EncodePriority+0x32>
 8000f3c:	2300      	movs	r3, #0
 8000f3e:	617b      	str	r3, [r7, #20]
 8000f40:	f04f 32ff 	mov.w	r2, #4294967295
 8000f44:	69bb      	ldr	r3, [r7, #24]
 8000f46:	fa02 f303 	lsl.w	r3, r2, r3
 8000f4a:	43da      	mvns	r2, r3
 8000f4c:	68bb      	ldr	r3, [r7, #8]
 8000f4e:	401a      	ands	r2, r3
 8000f50:	697b      	ldr	r3, [r7, #20]
 8000f52:	409a      	lsls	r2, r3
 8000f54:	f04f 31ff 	mov.w	r1, #4294967295
 8000f58:	697b      	ldr	r3, [r7, #20]
 8000f5a:	fa01 f303 	lsl.w	r3, r1, r3
 8000f5e:	43d9      	mvns	r1, r3
 8000f60:	687b      	ldr	r3, [r7, #4]
 8000f62:	400b      	ands	r3, r1
 8000f64:	4313      	orrs	r3, r2
 8000f66:	4618      	mov	r0, r3
 8000f68:	3724      	adds	r7, #36	; 0x24
 8000f6a:	46bd      	mov	sp, r7
 8000f6c:	bc80      	pop	{r7}
 8000f6e:	4770      	bx	lr

08000f70 <SysTick_Config>:
 8000f70:	b580      	push	{r7, lr}
 8000f72:	b082      	sub	sp, #8
 8000f74:	af00      	add	r7, sp, #0
 8000f76:	6078      	str	r0, [r7, #4]
 8000f78:	687b      	ldr	r3, [r7, #4]
 8000f7a:	3b01      	subs	r3, #1
 8000f7c:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8000f80:	d301      	bcc.n	8000f86 <SysTick_Config+0x16>
 8000f82:	2301      	movs	r3, #1
 8000f84:	e00f      	b.n	8000fa6 <SysTick_Config+0x36>
 8000f86:	4a0a      	ldr	r2, [pc, #40]	; (8000fb0 <SysTick_Config+0x40>)
 8000f88:	687b      	ldr	r3, [r7, #4]
 8000f8a:	3b01      	subs	r3, #1
 8000f8c:	6053      	str	r3, [r2, #4]
 8000f8e:	210f      	movs	r1, #15
 8000f90:	f04f 30ff 	mov.w	r0, #4294967295
 8000f94:	f7ff ff90 	bl	8000eb8 <__NVIC_SetPriority>
 8000f98:	4b05      	ldr	r3, [pc, #20]	; (8000fb0 <SysTick_Config+0x40>)
 8000f9a:	2200      	movs	r2, #0
 8000f9c:	609a      	str	r2, [r3, #8]
 8000f9e:	4b04      	ldr	r3, [pc, #16]	; (8000fb0 <SysTick_Config+0x40>)
 8000fa0:	2207      	movs	r2, #7
 8000fa2:	601a      	str	r2, [r3, #0]
 8000fa4:	2300      	movs	r3, #0
 8000fa6:	4618      	mov	r0, r3
 8000fa8:	3708      	adds	r7, #8
 8000faa:	46bd      	mov	sp, r7
 8000fac:	bd80      	pop	{r7, pc}
 8000fae:	bf00      	nop
 8000fb0:	e000e010 	.word	0xe000e010

08000fb4 <HAL_NVIC_SetPriorityGrouping>:
 8000fb4:	b580      	push	{r7, lr}
 8000fb6:	b082      	sub	sp, #8
 8000fb8:	af00      	add	r7, sp, #0
 8000fba:	6078      	str	r0, [r7, #4]
 8000fbc:	6878      	ldr	r0, [r7, #4]
 8000fbe:	f7ff ff49 	bl	8000e54 <__NVIC_SetPriorityGrouping>
 8000fc2:	bf00      	nop
 8000fc4:	3708      	adds	r7, #8
 8000fc6:	46bd      	mov	sp, r7
 8000fc8:	bd80      	pop	{r7, pc}

08000fca <HAL_NVIC_SetPriority>:
 8000fca:	b580      	push	{r7, lr}
 8000fcc:	b086      	sub	sp, #24
 8000fce:	af00      	add	r7, sp, #0
 8000fd0:	4603      	mov	r3, r0
 8000fd2:	60b9      	str	r1, [r7, #8]
 8000fd4:	607a      	str	r2, [r7, #4]
 8000fd6:	73fb      	strb	r3, [r7, #15]
 8000fd8:	2300      	movs	r3, #0
 8000fda:	617b      	str	r3, [r7, #20]
 8000fdc:	f7ff ff5e 	bl	8000e9c <__NVIC_GetPriorityGrouping>
 8000fe0:	6178      	str	r0, [r7, #20]
 8000fe2:	687a      	ldr	r2, [r7, #4]
 8000fe4:	68b9      	ldr	r1, [r7, #8]
 8000fe6:	6978      	ldr	r0, [r7, #20]
 8000fe8:	f7ff ff90 	bl	8000f0c <NVIC_EncodePriority>
 8000fec:	4602      	mov	r2, r0
 8000fee:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8000ff2:	4611      	mov	r1, r2
 8000ff4:	4618      	mov	r0, r3
 8000ff6:	f7ff ff5f 	bl	8000eb8 <__NVIC_SetPriority>
 8000ffa:	bf00      	nop
 8000ffc:	3718      	adds	r7, #24
 8000ffe:	46bd      	mov	sp, r7
 8001000:	bd80      	pop	{r7, pc}

08001002 <HAL_SYSTICK_Config>:
 8001002:	b580      	push	{r7, lr}
 8001004:	b082      	sub	sp, #8
 8001006:	af00      	add	r7, sp, #0
 8001008:	6078      	str	r0, [r7, #4]
 800100a:	6878      	ldr	r0, [r7, #4]
 800100c:	f7ff ffb0 	bl	8000f70 <SysTick_Config>
 8001010:	4603      	mov	r3, r0
 8001012:	4618      	mov	r0, r3
 8001014:	3708      	adds	r7, #8
 8001016:	46bd      	mov	sp, r7
 8001018:	bd80      	pop	{r7, pc}
	...

0800101c <HAL_GPIO_Init>:
 800101c:	b480      	push	{r7}
 800101e:	b08b      	sub	sp, #44	; 0x2c
 8001020:	af00      	add	r7, sp, #0
 8001022:	6078      	str	r0, [r7, #4]
 8001024:	6039      	str	r1, [r7, #0]
 8001026:	2300      	movs	r3, #0
 8001028:	627b      	str	r3, [r7, #36]	; 0x24
 800102a:	2300      	movs	r3, #0
 800102c:	623b      	str	r3, [r7, #32]
 800102e:	e127      	b.n	8001280 <HAL_GPIO_Init+0x264>
 8001030:	2201      	movs	r2, #1
 8001032:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001034:	fa02 f303 	lsl.w	r3, r2, r3
 8001038:	61fb      	str	r3, [r7, #28]
 800103a:	683b      	ldr	r3, [r7, #0]
 800103c:	681b      	ldr	r3, [r3, #0]
 800103e:	69fa      	ldr	r2, [r7, #28]
 8001040:	4013      	ands	r3, r2
 8001042:	61bb      	str	r3, [r7, #24]
 8001044:	69ba      	ldr	r2, [r7, #24]
 8001046:	69fb      	ldr	r3, [r7, #28]
 8001048:	429a      	cmp	r2, r3
 800104a:	f040 8116 	bne.w	800127a <HAL_GPIO_Init+0x25e>
 800104e:	683b      	ldr	r3, [r7, #0]
 8001050:	685b      	ldr	r3, [r3, #4]
 8001052:	2b12      	cmp	r3, #18
 8001054:	d034      	beq.n	80010c0 <HAL_GPIO_Init+0xa4>
 8001056:	2b12      	cmp	r3, #18
 8001058:	d80d      	bhi.n	8001076 <HAL_GPIO_Init+0x5a>
 800105a:	2b02      	cmp	r3, #2
 800105c:	d02b      	beq.n	80010b6 <HAL_GPIO_Init+0x9a>
 800105e:	2b02      	cmp	r3, #2
 8001060:	d804      	bhi.n	800106c <HAL_GPIO_Init+0x50>
 8001062:	2b00      	cmp	r3, #0
 8001064:	d031      	beq.n	80010ca <HAL_GPIO_Init+0xae>
 8001066:	2b01      	cmp	r3, #1
 8001068:	d01c      	beq.n	80010a4 <HAL_GPIO_Init+0x88>
 800106a:	e048      	b.n	80010fe <HAL_GPIO_Init+0xe2>
 800106c:	2b03      	cmp	r3, #3
 800106e:	d043      	beq.n	80010f8 <HAL_GPIO_Init+0xdc>
 8001070:	2b11      	cmp	r3, #17
 8001072:	d01b      	beq.n	80010ac <HAL_GPIO_Init+0x90>
 8001074:	e043      	b.n	80010fe <HAL_GPIO_Init+0xe2>
 8001076:	4a89      	ldr	r2, [pc, #548]	; (800129c <HAL_GPIO_Init+0x280>)
 8001078:	4293      	cmp	r3, r2
 800107a:	d026      	beq.n	80010ca <HAL_GPIO_Init+0xae>
 800107c:	4a87      	ldr	r2, [pc, #540]	; (800129c <HAL_GPIO_Init+0x280>)
 800107e:	4293      	cmp	r3, r2
 8001080:	d806      	bhi.n	8001090 <HAL_GPIO_Init+0x74>
 8001082:	4a87      	ldr	r2, [pc, #540]	; (80012a0 <HAL_GPIO_Init+0x284>)
 8001084:	4293      	cmp	r3, r2
 8001086:	d020      	beq.n	80010ca <HAL_GPIO_Init+0xae>
 8001088:	4a86      	ldr	r2, [pc, #536]	; (80012a4 <HAL_GPIO_Init+0x288>)
 800108a:	4293      	cmp	r3, r2
 800108c:	d01d      	beq.n	80010ca <HAL_GPIO_Init+0xae>
 800108e:	e036      	b.n	80010fe <HAL_GPIO_Init+0xe2>
 8001090:	4a85      	ldr	r2, [pc, #532]	; (80012a8 <HAL_GPIO_Init+0x28c>)
 8001092:	4293      	cmp	r3, r2
 8001094:	d019      	beq.n	80010ca <HAL_GPIO_Init+0xae>
 8001096:	4a85      	ldr	r2, [pc, #532]	; (80012ac <HAL_GPIO_Init+0x290>)
 8001098:	4293      	cmp	r3, r2
 800109a:	d016      	beq.n	80010ca <HAL_GPIO_Init+0xae>
 800109c:	4a84      	ldr	r2, [pc, #528]	; (80012b0 <HAL_GPIO_Init+0x294>)
 800109e:	4293      	cmp	r3, r2
 80010a0:	d013      	beq.n	80010ca <HAL_GPIO_Init+0xae>
 80010a2:	e02c      	b.n	80010fe <HAL_GPIO_Init+0xe2>
 80010a4:	683b      	ldr	r3, [r7, #0]
 80010a6:	68db      	ldr	r3, [r3, #12]
 80010a8:	623b      	str	r3, [r7, #32]
 80010aa:	e028      	b.n	80010fe <HAL_GPIO_Init+0xe2>
 80010ac:	683b      	ldr	r3, [r7, #0]
 80010ae:	68db      	ldr	r3, [r3, #12]
 80010b0:	3304      	adds	r3, #4
 80010b2:	623b      	str	r3, [r7, #32]
 80010b4:	e023      	b.n	80010fe <HAL_GPIO_Init+0xe2>
 80010b6:	683b      	ldr	r3, [r7, #0]
 80010b8:	68db      	ldr	r3, [r3, #12]
 80010ba:	3308      	adds	r3, #8
 80010bc:	623b      	str	r3, [r7, #32]
 80010be:	e01e      	b.n	80010fe <HAL_GPIO_Init+0xe2>
 80010c0:	683b      	ldr	r3, [r7, #0]
 80010c2:	68db      	ldr	r3, [r3, #12]
 80010c4:	330c      	adds	r3, #12
 80010c6:	623b      	str	r3, [r7, #32]
 80010c8:	e019      	b.n	80010fe <HAL_GPIO_Init+0xe2>
 80010ca:	683b      	ldr	r3, [r7, #0]
 80010cc:	689b      	ldr	r3, [r3, #8]
 80010ce:	2b00      	cmp	r3, #0
 80010d0:	d102      	bne.n	80010d8 <HAL_GPIO_Init+0xbc>
 80010d2:	2304      	movs	r3, #4
 80010d4:	623b      	str	r3, [r7, #32]
 80010d6:	e012      	b.n	80010fe <HAL_GPIO_Init+0xe2>
 80010d8:	683b      	ldr	r3, [r7, #0]
 80010da:	689b      	ldr	r3, [r3, #8]
 80010dc:	2b01      	cmp	r3, #1
 80010de:	d105      	bne.n	80010ec <HAL_GPIO_Init+0xd0>
 80010e0:	2308      	movs	r3, #8
 80010e2:	623b      	str	r3, [r7, #32]
 80010e4:	687b      	ldr	r3, [r7, #4]
 80010e6:	69fa      	ldr	r2, [r7, #28]
 80010e8:	611a      	str	r2, [r3, #16]
 80010ea:	e008      	b.n	80010fe <HAL_GPIO_Init+0xe2>
 80010ec:	2308      	movs	r3, #8
 80010ee:	623b      	str	r3, [r7, #32]
 80010f0:	687b      	ldr	r3, [r7, #4]
 80010f2:	69fa      	ldr	r2, [r7, #28]
 80010f4:	615a      	str	r2, [r3, #20]
 80010f6:	e002      	b.n	80010fe <HAL_GPIO_Init+0xe2>
 80010f8:	2300      	movs	r3, #0
 80010fa:	623b      	str	r3, [r7, #32]
 80010fc:	bf00      	nop
 80010fe:	69bb      	ldr	r3, [r7, #24]
 8001100:	2bff      	cmp	r3, #255	; 0xff
 8001102:	d801      	bhi.n	8001108 <HAL_GPIO_Init+0xec>
 8001104:	687b      	ldr	r3, [r7, #4]
 8001106:	e001      	b.n	800110c <HAL_GPIO_Init+0xf0>
 8001108:	687b      	ldr	r3, [r7, #4]
 800110a:	3304      	adds	r3, #4
 800110c:	617b      	str	r3, [r7, #20]
 800110e:	69bb      	ldr	r3, [r7, #24]
 8001110:	2bff      	cmp	r3, #255	; 0xff
 8001112:	d802      	bhi.n	800111a <HAL_GPIO_Init+0xfe>
 8001114:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001116:	009b      	lsls	r3, r3, #2
 8001118:	e002      	b.n	8001120 <HAL_GPIO_Init+0x104>
 800111a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800111c:	3b08      	subs	r3, #8
 800111e:	009b      	lsls	r3, r3, #2
 8001120:	613b      	str	r3, [r7, #16]
 8001122:	697b      	ldr	r3, [r7, #20]
 8001124:	681a      	ldr	r2, [r3, #0]
 8001126:	210f      	movs	r1, #15
 8001128:	693b      	ldr	r3, [r7, #16]
 800112a:	fa01 f303 	lsl.w	r3, r1, r3
 800112e:	43db      	mvns	r3, r3
 8001130:	401a      	ands	r2, r3
 8001132:	6a39      	ldr	r1, [r7, #32]
 8001134:	693b      	ldr	r3, [r7, #16]
 8001136:	fa01 f303 	lsl.w	r3, r1, r3
 800113a:	431a      	orrs	r2, r3
 800113c:	697b      	ldr	r3, [r7, #20]
 800113e:	601a      	str	r2, [r3, #0]
 8001140:	683b      	ldr	r3, [r7, #0]
 8001142:	685b      	ldr	r3, [r3, #4]
 8001144:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001148:	2b00      	cmp	r3, #0
 800114a:	f000 8096 	beq.w	800127a <HAL_GPIO_Init+0x25e>
 800114e:	4b59      	ldr	r3, [pc, #356]	; (80012b4 <HAL_GPIO_Init+0x298>)
 8001150:	699b      	ldr	r3, [r3, #24]
 8001152:	4a58      	ldr	r2, [pc, #352]	; (80012b4 <HAL_GPIO_Init+0x298>)
 8001154:	f043 0301 	orr.w	r3, r3, #1
 8001158:	6193      	str	r3, [r2, #24]
 800115a:	4b56      	ldr	r3, [pc, #344]	; (80012b4 <HAL_GPIO_Init+0x298>)
 800115c:	699b      	ldr	r3, [r3, #24]
 800115e:	f003 0301 	and.w	r3, r3, #1
 8001162:	60bb      	str	r3, [r7, #8]
 8001164:	68bb      	ldr	r3, [r7, #8]
 8001166:	4a54      	ldr	r2, [pc, #336]	; (80012b8 <HAL_GPIO_Init+0x29c>)
 8001168:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800116a:	089b      	lsrs	r3, r3, #2
 800116c:	3302      	adds	r3, #2
 800116e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8001172:	60fb      	str	r3, [r7, #12]
 8001174:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001176:	f003 0303 	and.w	r3, r3, #3
 800117a:	009b      	lsls	r3, r3, #2
 800117c:	220f      	movs	r2, #15
 800117e:	fa02 f303 	lsl.w	r3, r2, r3
 8001182:	43db      	mvns	r3, r3
 8001184:	68fa      	ldr	r2, [r7, #12]
 8001186:	4013      	ands	r3, r2
 8001188:	60fb      	str	r3, [r7, #12]
 800118a:	687b      	ldr	r3, [r7, #4]
 800118c:	4a4b      	ldr	r2, [pc, #300]	; (80012bc <HAL_GPIO_Init+0x2a0>)
 800118e:	4293      	cmp	r3, r2
 8001190:	d013      	beq.n	80011ba <HAL_GPIO_Init+0x19e>
 8001192:	687b      	ldr	r3, [r7, #4]
 8001194:	4a4a      	ldr	r2, [pc, #296]	; (80012c0 <HAL_GPIO_Init+0x2a4>)
 8001196:	4293      	cmp	r3, r2
 8001198:	d00d      	beq.n	80011b6 <HAL_GPIO_Init+0x19a>
 800119a:	687b      	ldr	r3, [r7, #4]
 800119c:	4a49      	ldr	r2, [pc, #292]	; (80012c4 <HAL_GPIO_Init+0x2a8>)
 800119e:	4293      	cmp	r3, r2
 80011a0:	d007      	beq.n	80011b2 <HAL_GPIO_Init+0x196>
 80011a2:	687b      	ldr	r3, [r7, #4]
 80011a4:	4a48      	ldr	r2, [pc, #288]	; (80012c8 <HAL_GPIO_Init+0x2ac>)
 80011a6:	4293      	cmp	r3, r2
 80011a8:	d101      	bne.n	80011ae <HAL_GPIO_Init+0x192>
 80011aa:	2303      	movs	r3, #3
 80011ac:	e006      	b.n	80011bc <HAL_GPIO_Init+0x1a0>
 80011ae:	2304      	movs	r3, #4
 80011b0:	e004      	b.n	80011bc <HAL_GPIO_Init+0x1a0>
 80011b2:	2302      	movs	r3, #2
 80011b4:	e002      	b.n	80011bc <HAL_GPIO_Init+0x1a0>
 80011b6:	2301      	movs	r3, #1
 80011b8:	e000      	b.n	80011bc <HAL_GPIO_Init+0x1a0>
 80011ba:	2300      	movs	r3, #0
 80011bc:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80011be:	f002 0203 	and.w	r2, r2, #3
 80011c2:	0092      	lsls	r2, r2, #2
 80011c4:	4093      	lsls	r3, r2
 80011c6:	68fa      	ldr	r2, [r7, #12]
 80011c8:	4313      	orrs	r3, r2
 80011ca:	60fb      	str	r3, [r7, #12]
 80011cc:	493a      	ldr	r1, [pc, #232]	; (80012b8 <HAL_GPIO_Init+0x29c>)
 80011ce:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80011d0:	089b      	lsrs	r3, r3, #2
 80011d2:	3302      	adds	r3, #2
 80011d4:	68fa      	ldr	r2, [r7, #12]
 80011d6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80011da:	683b      	ldr	r3, [r7, #0]
 80011dc:	685b      	ldr	r3, [r3, #4]
 80011de:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80011e2:	2b00      	cmp	r3, #0
 80011e4:	d006      	beq.n	80011f4 <HAL_GPIO_Init+0x1d8>
 80011e6:	4b39      	ldr	r3, [pc, #228]	; (80012cc <HAL_GPIO_Init+0x2b0>)
 80011e8:	681a      	ldr	r2, [r3, #0]
 80011ea:	4938      	ldr	r1, [pc, #224]	; (80012cc <HAL_GPIO_Init+0x2b0>)
 80011ec:	69bb      	ldr	r3, [r7, #24]
 80011ee:	4313      	orrs	r3, r2
 80011f0:	600b      	str	r3, [r1, #0]
 80011f2:	e006      	b.n	8001202 <HAL_GPIO_Init+0x1e6>
 80011f4:	4b35      	ldr	r3, [pc, #212]	; (80012cc <HAL_GPIO_Init+0x2b0>)
 80011f6:	681a      	ldr	r2, [r3, #0]
 80011f8:	69bb      	ldr	r3, [r7, #24]
 80011fa:	43db      	mvns	r3, r3
 80011fc:	4933      	ldr	r1, [pc, #204]	; (80012cc <HAL_GPIO_Init+0x2b0>)
 80011fe:	4013      	ands	r3, r2
 8001200:	600b      	str	r3, [r1, #0]
 8001202:	683b      	ldr	r3, [r7, #0]
 8001204:	685b      	ldr	r3, [r3, #4]
 8001206:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800120a:	2b00      	cmp	r3, #0
 800120c:	d006      	beq.n	800121c <HAL_GPIO_Init+0x200>
 800120e:	4b2f      	ldr	r3, [pc, #188]	; (80012cc <HAL_GPIO_Init+0x2b0>)
 8001210:	685a      	ldr	r2, [r3, #4]
 8001212:	492e      	ldr	r1, [pc, #184]	; (80012cc <HAL_GPIO_Init+0x2b0>)
 8001214:	69bb      	ldr	r3, [r7, #24]
 8001216:	4313      	orrs	r3, r2
 8001218:	604b      	str	r3, [r1, #4]
 800121a:	e006      	b.n	800122a <HAL_GPIO_Init+0x20e>
 800121c:	4b2b      	ldr	r3, [pc, #172]	; (80012cc <HAL_GPIO_Init+0x2b0>)
 800121e:	685a      	ldr	r2, [r3, #4]
 8001220:	69bb      	ldr	r3, [r7, #24]
 8001222:	43db      	mvns	r3, r3
 8001224:	4929      	ldr	r1, [pc, #164]	; (80012cc <HAL_GPIO_Init+0x2b0>)
 8001226:	4013      	ands	r3, r2
 8001228:	604b      	str	r3, [r1, #4]
 800122a:	683b      	ldr	r3, [r7, #0]
 800122c:	685b      	ldr	r3, [r3, #4]
 800122e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8001232:	2b00      	cmp	r3, #0
 8001234:	d006      	beq.n	8001244 <HAL_GPIO_Init+0x228>
 8001236:	4b25      	ldr	r3, [pc, #148]	; (80012cc <HAL_GPIO_Init+0x2b0>)
 8001238:	689a      	ldr	r2, [r3, #8]
 800123a:	4924      	ldr	r1, [pc, #144]	; (80012cc <HAL_GPIO_Init+0x2b0>)
 800123c:	69bb      	ldr	r3, [r7, #24]
 800123e:	4313      	orrs	r3, r2
 8001240:	608b      	str	r3, [r1, #8]
 8001242:	e006      	b.n	8001252 <HAL_GPIO_Init+0x236>
 8001244:	4b21      	ldr	r3, [pc, #132]	; (80012cc <HAL_GPIO_Init+0x2b0>)
 8001246:	689a      	ldr	r2, [r3, #8]
 8001248:	69bb      	ldr	r3, [r7, #24]
 800124a:	43db      	mvns	r3, r3
 800124c:	491f      	ldr	r1, [pc, #124]	; (80012cc <HAL_GPIO_Init+0x2b0>)
 800124e:	4013      	ands	r3, r2
 8001250:	608b      	str	r3, [r1, #8]
 8001252:	683b      	ldr	r3, [r7, #0]
 8001254:	685b      	ldr	r3, [r3, #4]
 8001256:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800125a:	2b00      	cmp	r3, #0
 800125c:	d006      	beq.n	800126c <HAL_GPIO_Init+0x250>
 800125e:	4b1b      	ldr	r3, [pc, #108]	; (80012cc <HAL_GPIO_Init+0x2b0>)
 8001260:	68da      	ldr	r2, [r3, #12]
 8001262:	491a      	ldr	r1, [pc, #104]	; (80012cc <HAL_GPIO_Init+0x2b0>)
 8001264:	69bb      	ldr	r3, [r7, #24]
 8001266:	4313      	orrs	r3, r2
 8001268:	60cb      	str	r3, [r1, #12]
 800126a:	e006      	b.n	800127a <HAL_GPIO_Init+0x25e>
 800126c:	4b17      	ldr	r3, [pc, #92]	; (80012cc <HAL_GPIO_Init+0x2b0>)
 800126e:	68da      	ldr	r2, [r3, #12]
 8001270:	69bb      	ldr	r3, [r7, #24]
 8001272:	43db      	mvns	r3, r3
 8001274:	4915      	ldr	r1, [pc, #84]	; (80012cc <HAL_GPIO_Init+0x2b0>)
 8001276:	4013      	ands	r3, r2
 8001278:	60cb      	str	r3, [r1, #12]
 800127a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800127c:	3301      	adds	r3, #1
 800127e:	627b      	str	r3, [r7, #36]	; 0x24
 8001280:	683b      	ldr	r3, [r7, #0]
 8001282:	681a      	ldr	r2, [r3, #0]
 8001284:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001286:	fa22 f303 	lsr.w	r3, r2, r3
 800128a:	2b00      	cmp	r3, #0
 800128c:	f47f aed0 	bne.w	8001030 <HAL_GPIO_Init+0x14>
 8001290:	bf00      	nop
 8001292:	372c      	adds	r7, #44	; 0x2c
 8001294:	46bd      	mov	sp, r7
 8001296:	bc80      	pop	{r7}
 8001298:	4770      	bx	lr
 800129a:	bf00      	nop
 800129c:	10210000 	.word	0x10210000
 80012a0:	10110000 	.word	0x10110000
 80012a4:	10120000 	.word	0x10120000
 80012a8:	10310000 	.word	0x10310000
 80012ac:	10320000 	.word	0x10320000
 80012b0:	10220000 	.word	0x10220000
 80012b4:	40021000 	.word	0x40021000
 80012b8:	40010000 	.word	0x40010000
 80012bc:	40010800 	.word	0x40010800
 80012c0:	40010c00 	.word	0x40010c00
 80012c4:	40011000 	.word	0x40011000
 80012c8:	40011400 	.word	0x40011400
 80012cc:	40010400 	.word	0x40010400

080012d0 <HAL_GPIO_WritePin>:
 80012d0:	b480      	push	{r7}
 80012d2:	b083      	sub	sp, #12
 80012d4:	af00      	add	r7, sp, #0
 80012d6:	6078      	str	r0, [r7, #4]
 80012d8:	460b      	mov	r3, r1
 80012da:	807b      	strh	r3, [r7, #2]
 80012dc:	4613      	mov	r3, r2
 80012de:	707b      	strb	r3, [r7, #1]
 80012e0:	787b      	ldrb	r3, [r7, #1]
 80012e2:	2b00      	cmp	r3, #0
 80012e4:	d003      	beq.n	80012ee <HAL_GPIO_WritePin+0x1e>
 80012e6:	887a      	ldrh	r2, [r7, #2]
 80012e8:	687b      	ldr	r3, [r7, #4]
 80012ea:	611a      	str	r2, [r3, #16]
 80012ec:	e003      	b.n	80012f6 <HAL_GPIO_WritePin+0x26>
 80012ee:	887b      	ldrh	r3, [r7, #2]
 80012f0:	041a      	lsls	r2, r3, #16
 80012f2:	687b      	ldr	r3, [r7, #4]
 80012f4:	611a      	str	r2, [r3, #16]
 80012f6:	bf00      	nop
 80012f8:	370c      	adds	r7, #12
 80012fa:	46bd      	mov	sp, r7
 80012fc:	bc80      	pop	{r7}
 80012fe:	4770      	bx	lr

08001300 <HAL_GPIO_TogglePin>:
 8001300:	b480      	push	{r7}
 8001302:	b083      	sub	sp, #12
 8001304:	af00      	add	r7, sp, #0
 8001306:	6078      	str	r0, [r7, #4]
 8001308:	460b      	mov	r3, r1
 800130a:	807b      	strh	r3, [r7, #2]
 800130c:	687b      	ldr	r3, [r7, #4]
 800130e:	68da      	ldr	r2, [r3, #12]
 8001310:	887b      	ldrh	r3, [r7, #2]
 8001312:	4013      	ands	r3, r2
 8001314:	2b00      	cmp	r3, #0
 8001316:	d003      	beq.n	8001320 <HAL_GPIO_TogglePin+0x20>
 8001318:	887a      	ldrh	r2, [r7, #2]
 800131a:	687b      	ldr	r3, [r7, #4]
 800131c:	615a      	str	r2, [r3, #20]
 800131e:	e002      	b.n	8001326 <HAL_GPIO_TogglePin+0x26>
 8001320:	887a      	ldrh	r2, [r7, #2]
 8001322:	687b      	ldr	r3, [r7, #4]
 8001324:	611a      	str	r2, [r3, #16]
 8001326:	bf00      	nop
 8001328:	370c      	adds	r7, #12
 800132a:	46bd      	mov	sp, r7
 800132c:	bc80      	pop	{r7}
 800132e:	4770      	bx	lr

08001330 <HAL_RCC_OscConfig>:
 8001330:	b580      	push	{r7, lr}
 8001332:	b086      	sub	sp, #24
 8001334:	af00      	add	r7, sp, #0
 8001336:	6078      	str	r0, [r7, #4]
 8001338:	687b      	ldr	r3, [r7, #4]
 800133a:	2b00      	cmp	r3, #0
 800133c:	d101      	bne.n	8001342 <HAL_RCC_OscConfig+0x12>
 800133e:	2301      	movs	r3, #1
 8001340:	e26c      	b.n	800181c <HAL_RCC_OscConfig+0x4ec>
 8001342:	687b      	ldr	r3, [r7, #4]
 8001344:	681b      	ldr	r3, [r3, #0]
 8001346:	f003 0301 	and.w	r3, r3, #1
 800134a:	2b00      	cmp	r3, #0
 800134c:	f000 8087 	beq.w	800145e <HAL_RCC_OscConfig+0x12e>
 8001350:	4b92      	ldr	r3, [pc, #584]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 8001352:	685b      	ldr	r3, [r3, #4]
 8001354:	f003 030c 	and.w	r3, r3, #12
 8001358:	2b04      	cmp	r3, #4
 800135a:	d00c      	beq.n	8001376 <HAL_RCC_OscConfig+0x46>
 800135c:	4b8f      	ldr	r3, [pc, #572]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 800135e:	685b      	ldr	r3, [r3, #4]
 8001360:	f003 030c 	and.w	r3, r3, #12
 8001364:	2b08      	cmp	r3, #8
 8001366:	d112      	bne.n	800138e <HAL_RCC_OscConfig+0x5e>
 8001368:	4b8c      	ldr	r3, [pc, #560]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 800136a:	685b      	ldr	r3, [r3, #4]
 800136c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001370:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001374:	d10b      	bne.n	800138e <HAL_RCC_OscConfig+0x5e>
 8001376:	4b89      	ldr	r3, [pc, #548]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 8001378:	681b      	ldr	r3, [r3, #0]
 800137a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800137e:	2b00      	cmp	r3, #0
 8001380:	d06c      	beq.n	800145c <HAL_RCC_OscConfig+0x12c>
 8001382:	687b      	ldr	r3, [r7, #4]
 8001384:	685b      	ldr	r3, [r3, #4]
 8001386:	2b00      	cmp	r3, #0
 8001388:	d168      	bne.n	800145c <HAL_RCC_OscConfig+0x12c>
 800138a:	2301      	movs	r3, #1
 800138c:	e246      	b.n	800181c <HAL_RCC_OscConfig+0x4ec>
 800138e:	687b      	ldr	r3, [r7, #4]
 8001390:	685b      	ldr	r3, [r3, #4]
 8001392:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001396:	d106      	bne.n	80013a6 <HAL_RCC_OscConfig+0x76>
 8001398:	4b80      	ldr	r3, [pc, #512]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 800139a:	681b      	ldr	r3, [r3, #0]
 800139c:	4a7f      	ldr	r2, [pc, #508]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 800139e:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80013a2:	6013      	str	r3, [r2, #0]
 80013a4:	e02e      	b.n	8001404 <HAL_RCC_OscConfig+0xd4>
 80013a6:	687b      	ldr	r3, [r7, #4]
 80013a8:	685b      	ldr	r3, [r3, #4]
 80013aa:	2b00      	cmp	r3, #0
 80013ac:	d10c      	bne.n	80013c8 <HAL_RCC_OscConfig+0x98>
 80013ae:	4b7b      	ldr	r3, [pc, #492]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 80013b0:	681b      	ldr	r3, [r3, #0]
 80013b2:	4a7a      	ldr	r2, [pc, #488]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 80013b4:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80013b8:	6013      	str	r3, [r2, #0]
 80013ba:	4b78      	ldr	r3, [pc, #480]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 80013bc:	681b      	ldr	r3, [r3, #0]
 80013be:	4a77      	ldr	r2, [pc, #476]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 80013c0:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80013c4:	6013      	str	r3, [r2, #0]
 80013c6:	e01d      	b.n	8001404 <HAL_RCC_OscConfig+0xd4>
 80013c8:	687b      	ldr	r3, [r7, #4]
 80013ca:	685b      	ldr	r3, [r3, #4]
 80013cc:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80013d0:	d10c      	bne.n	80013ec <HAL_RCC_OscConfig+0xbc>
 80013d2:	4b72      	ldr	r3, [pc, #456]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 80013d4:	681b      	ldr	r3, [r3, #0]
 80013d6:	4a71      	ldr	r2, [pc, #452]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 80013d8:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80013dc:	6013      	str	r3, [r2, #0]
 80013de:	4b6f      	ldr	r3, [pc, #444]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 80013e0:	681b      	ldr	r3, [r3, #0]
 80013e2:	4a6e      	ldr	r2, [pc, #440]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 80013e4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80013e8:	6013      	str	r3, [r2, #0]
 80013ea:	e00b      	b.n	8001404 <HAL_RCC_OscConfig+0xd4>
 80013ec:	4b6b      	ldr	r3, [pc, #428]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 80013ee:	681b      	ldr	r3, [r3, #0]
 80013f0:	4a6a      	ldr	r2, [pc, #424]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 80013f2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80013f6:	6013      	str	r3, [r2, #0]
 80013f8:	4b68      	ldr	r3, [pc, #416]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 80013fa:	681b      	ldr	r3, [r3, #0]
 80013fc:	4a67      	ldr	r2, [pc, #412]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 80013fe:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8001402:	6013      	str	r3, [r2, #0]
 8001404:	687b      	ldr	r3, [r7, #4]
 8001406:	685b      	ldr	r3, [r3, #4]
 8001408:	2b00      	cmp	r3, #0
 800140a:	d013      	beq.n	8001434 <HAL_RCC_OscConfig+0x104>
 800140c:	f7ff fd18 	bl	8000e40 <HAL_GetTick>
 8001410:	6138      	str	r0, [r7, #16]
 8001412:	e008      	b.n	8001426 <HAL_RCC_OscConfig+0xf6>
 8001414:	f7ff fd14 	bl	8000e40 <HAL_GetTick>
 8001418:	4602      	mov	r2, r0
 800141a:	693b      	ldr	r3, [r7, #16]
 800141c:	1ad3      	subs	r3, r2, r3
 800141e:	2b64      	cmp	r3, #100	; 0x64
 8001420:	d901      	bls.n	8001426 <HAL_RCC_OscConfig+0xf6>
 8001422:	2303      	movs	r3, #3
 8001424:	e1fa      	b.n	800181c <HAL_RCC_OscConfig+0x4ec>
 8001426:	4b5d      	ldr	r3, [pc, #372]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 8001428:	681b      	ldr	r3, [r3, #0]
 800142a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800142e:	2b00      	cmp	r3, #0
 8001430:	d0f0      	beq.n	8001414 <HAL_RCC_OscConfig+0xe4>
 8001432:	e014      	b.n	800145e <HAL_RCC_OscConfig+0x12e>
 8001434:	f7ff fd04 	bl	8000e40 <HAL_GetTick>
 8001438:	6138      	str	r0, [r7, #16]
 800143a:	e008      	b.n	800144e <HAL_RCC_OscConfig+0x11e>
 800143c:	f7ff fd00 	bl	8000e40 <HAL_GetTick>
 8001440:	4602      	mov	r2, r0
 8001442:	693b      	ldr	r3, [r7, #16]
 8001444:	1ad3      	subs	r3, r2, r3
 8001446:	2b64      	cmp	r3, #100	; 0x64
 8001448:	d901      	bls.n	800144e <HAL_RCC_OscConfig+0x11e>
 800144a:	2303      	movs	r3, #3
 800144c:	e1e6      	b.n	800181c <HAL_RCC_OscConfig+0x4ec>
 800144e:	4b53      	ldr	r3, [pc, #332]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 8001450:	681b      	ldr	r3, [r3, #0]
 8001452:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8001456:	2b00      	cmp	r3, #0
 8001458:	d1f0      	bne.n	800143c <HAL_RCC_OscConfig+0x10c>
 800145a:	e000      	b.n	800145e <HAL_RCC_OscConfig+0x12e>
 800145c:	bf00      	nop
 800145e:	687b      	ldr	r3, [r7, #4]
 8001460:	681b      	ldr	r3, [r3, #0]
 8001462:	f003 0302 	and.w	r3, r3, #2
 8001466:	2b00      	cmp	r3, #0
 8001468:	d063      	beq.n	8001532 <HAL_RCC_OscConfig+0x202>
 800146a:	4b4c      	ldr	r3, [pc, #304]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 800146c:	685b      	ldr	r3, [r3, #4]
 800146e:	f003 030c 	and.w	r3, r3, #12
 8001472:	2b00      	cmp	r3, #0
 8001474:	d00b      	beq.n	800148e <HAL_RCC_OscConfig+0x15e>
 8001476:	4b49      	ldr	r3, [pc, #292]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 8001478:	685b      	ldr	r3, [r3, #4]
 800147a:	f003 030c 	and.w	r3, r3, #12
 800147e:	2b08      	cmp	r3, #8
 8001480:	d11c      	bne.n	80014bc <HAL_RCC_OscConfig+0x18c>
 8001482:	4b46      	ldr	r3, [pc, #280]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 8001484:	685b      	ldr	r3, [r3, #4]
 8001486:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800148a:	2b00      	cmp	r3, #0
 800148c:	d116      	bne.n	80014bc <HAL_RCC_OscConfig+0x18c>
 800148e:	4b43      	ldr	r3, [pc, #268]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 8001490:	681b      	ldr	r3, [r3, #0]
 8001492:	f003 0302 	and.w	r3, r3, #2
 8001496:	2b00      	cmp	r3, #0
 8001498:	d005      	beq.n	80014a6 <HAL_RCC_OscConfig+0x176>
 800149a:	687b      	ldr	r3, [r7, #4]
 800149c:	691b      	ldr	r3, [r3, #16]
 800149e:	2b01      	cmp	r3, #1
 80014a0:	d001      	beq.n	80014a6 <HAL_RCC_OscConfig+0x176>
 80014a2:	2301      	movs	r3, #1
 80014a4:	e1ba      	b.n	800181c <HAL_RCC_OscConfig+0x4ec>
 80014a6:	4b3d      	ldr	r3, [pc, #244]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 80014a8:	681b      	ldr	r3, [r3, #0]
 80014aa:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80014ae:	687b      	ldr	r3, [r7, #4]
 80014b0:	695b      	ldr	r3, [r3, #20]
 80014b2:	00db      	lsls	r3, r3, #3
 80014b4:	4939      	ldr	r1, [pc, #228]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 80014b6:	4313      	orrs	r3, r2
 80014b8:	600b      	str	r3, [r1, #0]
 80014ba:	e03a      	b.n	8001532 <HAL_RCC_OscConfig+0x202>
 80014bc:	687b      	ldr	r3, [r7, #4]
 80014be:	691b      	ldr	r3, [r3, #16]
 80014c0:	2b00      	cmp	r3, #0
 80014c2:	d020      	beq.n	8001506 <HAL_RCC_OscConfig+0x1d6>
 80014c4:	4b36      	ldr	r3, [pc, #216]	; (80015a0 <HAL_RCC_OscConfig+0x270>)
 80014c6:	2201      	movs	r2, #1
 80014c8:	601a      	str	r2, [r3, #0]
 80014ca:	f7ff fcb9 	bl	8000e40 <HAL_GetTick>
 80014ce:	6138      	str	r0, [r7, #16]
 80014d0:	e008      	b.n	80014e4 <HAL_RCC_OscConfig+0x1b4>
 80014d2:	f7ff fcb5 	bl	8000e40 <HAL_GetTick>
 80014d6:	4602      	mov	r2, r0
 80014d8:	693b      	ldr	r3, [r7, #16]
 80014da:	1ad3      	subs	r3, r2, r3
 80014dc:	2b02      	cmp	r3, #2
 80014de:	d901      	bls.n	80014e4 <HAL_RCC_OscConfig+0x1b4>
 80014e0:	2303      	movs	r3, #3
 80014e2:	e19b      	b.n	800181c <HAL_RCC_OscConfig+0x4ec>
 80014e4:	4b2d      	ldr	r3, [pc, #180]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 80014e6:	681b      	ldr	r3, [r3, #0]
 80014e8:	f003 0302 	and.w	r3, r3, #2
 80014ec:	2b00      	cmp	r3, #0
 80014ee:	d0f0      	beq.n	80014d2 <HAL_RCC_OscConfig+0x1a2>
 80014f0:	4b2a      	ldr	r3, [pc, #168]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 80014f2:	681b      	ldr	r3, [r3, #0]
 80014f4:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80014f8:	687b      	ldr	r3, [r7, #4]
 80014fa:	695b      	ldr	r3, [r3, #20]
 80014fc:	00db      	lsls	r3, r3, #3
 80014fe:	4927      	ldr	r1, [pc, #156]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 8001500:	4313      	orrs	r3, r2
 8001502:	600b      	str	r3, [r1, #0]
 8001504:	e015      	b.n	8001532 <HAL_RCC_OscConfig+0x202>
 8001506:	4b26      	ldr	r3, [pc, #152]	; (80015a0 <HAL_RCC_OscConfig+0x270>)
 8001508:	2200      	movs	r2, #0
 800150a:	601a      	str	r2, [r3, #0]
 800150c:	f7ff fc98 	bl	8000e40 <HAL_GetTick>
 8001510:	6138      	str	r0, [r7, #16]
 8001512:	e008      	b.n	8001526 <HAL_RCC_OscConfig+0x1f6>
 8001514:	f7ff fc94 	bl	8000e40 <HAL_GetTick>
 8001518:	4602      	mov	r2, r0
 800151a:	693b      	ldr	r3, [r7, #16]
 800151c:	1ad3      	subs	r3, r2, r3
 800151e:	2b02      	cmp	r3, #2
 8001520:	d901      	bls.n	8001526 <HAL_RCC_OscConfig+0x1f6>
 8001522:	2303      	movs	r3, #3
 8001524:	e17a      	b.n	800181c <HAL_RCC_OscConfig+0x4ec>
 8001526:	4b1d      	ldr	r3, [pc, #116]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 8001528:	681b      	ldr	r3, [r3, #0]
 800152a:	f003 0302 	and.w	r3, r3, #2
 800152e:	2b00      	cmp	r3, #0
 8001530:	d1f0      	bne.n	8001514 <HAL_RCC_OscConfig+0x1e4>
 8001532:	687b      	ldr	r3, [r7, #4]
 8001534:	681b      	ldr	r3, [r3, #0]
 8001536:	f003 0308 	and.w	r3, r3, #8
 800153a:	2b00      	cmp	r3, #0
 800153c:	d03a      	beq.n	80015b4 <HAL_RCC_OscConfig+0x284>
 800153e:	687b      	ldr	r3, [r7, #4]
 8001540:	699b      	ldr	r3, [r3, #24]
 8001542:	2b00      	cmp	r3, #0
 8001544:	d019      	beq.n	800157a <HAL_RCC_OscConfig+0x24a>
 8001546:	4b17      	ldr	r3, [pc, #92]	; (80015a4 <HAL_RCC_OscConfig+0x274>)
 8001548:	2201      	movs	r2, #1
 800154a:	601a      	str	r2, [r3, #0]
 800154c:	f7ff fc78 	bl	8000e40 <HAL_GetTick>
 8001550:	6138      	str	r0, [r7, #16]
 8001552:	e008      	b.n	8001566 <HAL_RCC_OscConfig+0x236>
 8001554:	f7ff fc74 	bl	8000e40 <HAL_GetTick>
 8001558:	4602      	mov	r2, r0
 800155a:	693b      	ldr	r3, [r7, #16]
 800155c:	1ad3      	subs	r3, r2, r3
 800155e:	2b02      	cmp	r3, #2
 8001560:	d901      	bls.n	8001566 <HAL_RCC_OscConfig+0x236>
 8001562:	2303      	movs	r3, #3
 8001564:	e15a      	b.n	800181c <HAL_RCC_OscConfig+0x4ec>
 8001566:	4b0d      	ldr	r3, [pc, #52]	; (800159c <HAL_RCC_OscConfig+0x26c>)
 8001568:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800156a:	f003 0302 	and.w	r3, r3, #2
 800156e:	2b00      	cmp	r3, #0
 8001570:	d0f0      	beq.n	8001554 <HAL_RCC_OscConfig+0x224>
 8001572:	2001      	movs	r0, #1
 8001574:	f000 fada 	bl	8001b2c <RCC_Delay>
 8001578:	e01c      	b.n	80015b4 <HAL_RCC_OscConfig+0x284>
 800157a:	4b0a      	ldr	r3, [pc, #40]	; (80015a4 <HAL_RCC_OscConfig+0x274>)
 800157c:	2200      	movs	r2, #0
 800157e:	601a      	str	r2, [r3, #0]
 8001580:	f7ff fc5e 	bl	8000e40 <HAL_GetTick>
 8001584:	6138      	str	r0, [r7, #16]
 8001586:	e00f      	b.n	80015a8 <HAL_RCC_OscConfig+0x278>
 8001588:	f7ff fc5a 	bl	8000e40 <HAL_GetTick>
 800158c:	4602      	mov	r2, r0
 800158e:	693b      	ldr	r3, [r7, #16]
 8001590:	1ad3      	subs	r3, r2, r3
 8001592:	2b02      	cmp	r3, #2
 8001594:	d908      	bls.n	80015a8 <HAL_RCC_OscConfig+0x278>
 8001596:	2303      	movs	r3, #3
 8001598:	e140      	b.n	800181c <HAL_RCC_OscConfig+0x4ec>
 800159a:	bf00      	nop
 800159c:	40021000 	.word	0x40021000
 80015a0:	42420000 	.word	0x42420000
 80015a4:	42420480 	.word	0x42420480
 80015a8:	4b9e      	ldr	r3, [pc, #632]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 80015aa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80015ac:	f003 0302 	and.w	r3, r3, #2
 80015b0:	2b00      	cmp	r3, #0
 80015b2:	d1e9      	bne.n	8001588 <HAL_RCC_OscConfig+0x258>
 80015b4:	687b      	ldr	r3, [r7, #4]
 80015b6:	681b      	ldr	r3, [r3, #0]
 80015b8:	f003 0304 	and.w	r3, r3, #4
 80015bc:	2b00      	cmp	r3, #0
 80015be:	f000 80a6 	beq.w	800170e <HAL_RCC_OscConfig+0x3de>
 80015c2:	2300      	movs	r3, #0
 80015c4:	75fb      	strb	r3, [r7, #23]
 80015c6:	4b97      	ldr	r3, [pc, #604]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 80015c8:	69db      	ldr	r3, [r3, #28]
 80015ca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80015ce:	2b00      	cmp	r3, #0
 80015d0:	d10d      	bne.n	80015ee <HAL_RCC_OscConfig+0x2be>
 80015d2:	4b94      	ldr	r3, [pc, #592]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 80015d4:	69db      	ldr	r3, [r3, #28]
 80015d6:	4a93      	ldr	r2, [pc, #588]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 80015d8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80015dc:	61d3      	str	r3, [r2, #28]
 80015de:	4b91      	ldr	r3, [pc, #580]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 80015e0:	69db      	ldr	r3, [r3, #28]
 80015e2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80015e6:	60bb      	str	r3, [r7, #8]
 80015e8:	68bb      	ldr	r3, [r7, #8]
 80015ea:	2301      	movs	r3, #1
 80015ec:	75fb      	strb	r3, [r7, #23]
 80015ee:	4b8e      	ldr	r3, [pc, #568]	; (8001828 <HAL_RCC_OscConfig+0x4f8>)
 80015f0:	681b      	ldr	r3, [r3, #0]
 80015f2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80015f6:	2b00      	cmp	r3, #0
 80015f8:	d118      	bne.n	800162c <HAL_RCC_OscConfig+0x2fc>
 80015fa:	4b8b      	ldr	r3, [pc, #556]	; (8001828 <HAL_RCC_OscConfig+0x4f8>)
 80015fc:	681b      	ldr	r3, [r3, #0]
 80015fe:	4a8a      	ldr	r2, [pc, #552]	; (8001828 <HAL_RCC_OscConfig+0x4f8>)
 8001600:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001604:	6013      	str	r3, [r2, #0]
 8001606:	f7ff fc1b 	bl	8000e40 <HAL_GetTick>
 800160a:	6138      	str	r0, [r7, #16]
 800160c:	e008      	b.n	8001620 <HAL_RCC_OscConfig+0x2f0>
 800160e:	f7ff fc17 	bl	8000e40 <HAL_GetTick>
 8001612:	4602      	mov	r2, r0
 8001614:	693b      	ldr	r3, [r7, #16]
 8001616:	1ad3      	subs	r3, r2, r3
 8001618:	2b64      	cmp	r3, #100	; 0x64
 800161a:	d901      	bls.n	8001620 <HAL_RCC_OscConfig+0x2f0>
 800161c:	2303      	movs	r3, #3
 800161e:	e0fd      	b.n	800181c <HAL_RCC_OscConfig+0x4ec>
 8001620:	4b81      	ldr	r3, [pc, #516]	; (8001828 <HAL_RCC_OscConfig+0x4f8>)
 8001622:	681b      	ldr	r3, [r3, #0]
 8001624:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001628:	2b00      	cmp	r3, #0
 800162a:	d0f0      	beq.n	800160e <HAL_RCC_OscConfig+0x2de>
 800162c:	687b      	ldr	r3, [r7, #4]
 800162e:	68db      	ldr	r3, [r3, #12]
 8001630:	2b01      	cmp	r3, #1
 8001632:	d106      	bne.n	8001642 <HAL_RCC_OscConfig+0x312>
 8001634:	4b7b      	ldr	r3, [pc, #492]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 8001636:	6a1b      	ldr	r3, [r3, #32]
 8001638:	4a7a      	ldr	r2, [pc, #488]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 800163a:	f043 0301 	orr.w	r3, r3, #1
 800163e:	6213      	str	r3, [r2, #32]
 8001640:	e02d      	b.n	800169e <HAL_RCC_OscConfig+0x36e>
 8001642:	687b      	ldr	r3, [r7, #4]
 8001644:	68db      	ldr	r3, [r3, #12]
 8001646:	2b00      	cmp	r3, #0
 8001648:	d10c      	bne.n	8001664 <HAL_RCC_OscConfig+0x334>
 800164a:	4b76      	ldr	r3, [pc, #472]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 800164c:	6a1b      	ldr	r3, [r3, #32]
 800164e:	4a75      	ldr	r2, [pc, #468]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 8001650:	f023 0301 	bic.w	r3, r3, #1
 8001654:	6213      	str	r3, [r2, #32]
 8001656:	4b73      	ldr	r3, [pc, #460]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 8001658:	6a1b      	ldr	r3, [r3, #32]
 800165a:	4a72      	ldr	r2, [pc, #456]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 800165c:	f023 0304 	bic.w	r3, r3, #4
 8001660:	6213      	str	r3, [r2, #32]
 8001662:	e01c      	b.n	800169e <HAL_RCC_OscConfig+0x36e>
 8001664:	687b      	ldr	r3, [r7, #4]
 8001666:	68db      	ldr	r3, [r3, #12]
 8001668:	2b05      	cmp	r3, #5
 800166a:	d10c      	bne.n	8001686 <HAL_RCC_OscConfig+0x356>
 800166c:	4b6d      	ldr	r3, [pc, #436]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 800166e:	6a1b      	ldr	r3, [r3, #32]
 8001670:	4a6c      	ldr	r2, [pc, #432]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 8001672:	f043 0304 	orr.w	r3, r3, #4
 8001676:	6213      	str	r3, [r2, #32]
 8001678:	4b6a      	ldr	r3, [pc, #424]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 800167a:	6a1b      	ldr	r3, [r3, #32]
 800167c:	4a69      	ldr	r2, [pc, #420]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 800167e:	f043 0301 	orr.w	r3, r3, #1
 8001682:	6213      	str	r3, [r2, #32]
 8001684:	e00b      	b.n	800169e <HAL_RCC_OscConfig+0x36e>
 8001686:	4b67      	ldr	r3, [pc, #412]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 8001688:	6a1b      	ldr	r3, [r3, #32]
 800168a:	4a66      	ldr	r2, [pc, #408]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 800168c:	f023 0301 	bic.w	r3, r3, #1
 8001690:	6213      	str	r3, [r2, #32]
 8001692:	4b64      	ldr	r3, [pc, #400]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 8001694:	6a1b      	ldr	r3, [r3, #32]
 8001696:	4a63      	ldr	r2, [pc, #396]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 8001698:	f023 0304 	bic.w	r3, r3, #4
 800169c:	6213      	str	r3, [r2, #32]
 800169e:	687b      	ldr	r3, [r7, #4]
 80016a0:	68db      	ldr	r3, [r3, #12]
 80016a2:	2b00      	cmp	r3, #0
 80016a4:	d015      	beq.n	80016d2 <HAL_RCC_OscConfig+0x3a2>
 80016a6:	f7ff fbcb 	bl	8000e40 <HAL_GetTick>
 80016aa:	6138      	str	r0, [r7, #16]
 80016ac:	e00a      	b.n	80016c4 <HAL_RCC_OscConfig+0x394>
 80016ae:	f7ff fbc7 	bl	8000e40 <HAL_GetTick>
 80016b2:	4602      	mov	r2, r0
 80016b4:	693b      	ldr	r3, [r7, #16]
 80016b6:	1ad3      	subs	r3, r2, r3
 80016b8:	f241 3288 	movw	r2, #5000	; 0x1388
 80016bc:	4293      	cmp	r3, r2
 80016be:	d901      	bls.n	80016c4 <HAL_RCC_OscConfig+0x394>
 80016c0:	2303      	movs	r3, #3
 80016c2:	e0ab      	b.n	800181c <HAL_RCC_OscConfig+0x4ec>
 80016c4:	4b57      	ldr	r3, [pc, #348]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 80016c6:	6a1b      	ldr	r3, [r3, #32]
 80016c8:	f003 0302 	and.w	r3, r3, #2
 80016cc:	2b00      	cmp	r3, #0
 80016ce:	d0ee      	beq.n	80016ae <HAL_RCC_OscConfig+0x37e>
 80016d0:	e014      	b.n	80016fc <HAL_RCC_OscConfig+0x3cc>
 80016d2:	f7ff fbb5 	bl	8000e40 <HAL_GetTick>
 80016d6:	6138      	str	r0, [r7, #16]
 80016d8:	e00a      	b.n	80016f0 <HAL_RCC_OscConfig+0x3c0>
 80016da:	f7ff fbb1 	bl	8000e40 <HAL_GetTick>
 80016de:	4602      	mov	r2, r0
 80016e0:	693b      	ldr	r3, [r7, #16]
 80016e2:	1ad3      	subs	r3, r2, r3
 80016e4:	f241 3288 	movw	r2, #5000	; 0x1388
 80016e8:	4293      	cmp	r3, r2
 80016ea:	d901      	bls.n	80016f0 <HAL_RCC_OscConfig+0x3c0>
 80016ec:	2303      	movs	r3, #3
 80016ee:	e095      	b.n	800181c <HAL_RCC_OscConfig+0x4ec>
 80016f0:	4b4c      	ldr	r3, [pc, #304]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 80016f2:	6a1b      	ldr	r3, [r3, #32]
 80016f4:	f003 0302 	and.w	r3, r3, #2
 80016f8:	2b00      	cmp	r3, #0
 80016fa:	d1ee      	bne.n	80016da <HAL_RCC_OscConfig+0x3aa>
 80016fc:	7dfb      	ldrb	r3, [r7, #23]
 80016fe:	2b01      	cmp	r3, #1
 8001700:	d105      	bne.n	800170e <HAL_RCC_OscConfig+0x3de>
 8001702:	4b48      	ldr	r3, [pc, #288]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 8001704:	69db      	ldr	r3, [r3, #28]
 8001706:	4a47      	ldr	r2, [pc, #284]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 8001708:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800170c:	61d3      	str	r3, [r2, #28]
 800170e:	687b      	ldr	r3, [r7, #4]
 8001710:	69db      	ldr	r3, [r3, #28]
 8001712:	2b00      	cmp	r3, #0
 8001714:	f000 8081 	beq.w	800181a <HAL_RCC_OscConfig+0x4ea>
 8001718:	4b42      	ldr	r3, [pc, #264]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 800171a:	685b      	ldr	r3, [r3, #4]
 800171c:	f003 030c 	and.w	r3, r3, #12
 8001720:	2b08      	cmp	r3, #8
 8001722:	d061      	beq.n	80017e8 <HAL_RCC_OscConfig+0x4b8>
 8001724:	687b      	ldr	r3, [r7, #4]
 8001726:	69db      	ldr	r3, [r3, #28]
 8001728:	2b02      	cmp	r3, #2
 800172a:	d146      	bne.n	80017ba <HAL_RCC_OscConfig+0x48a>
 800172c:	4b3f      	ldr	r3, [pc, #252]	; (800182c <HAL_RCC_OscConfig+0x4fc>)
 800172e:	2200      	movs	r2, #0
 8001730:	601a      	str	r2, [r3, #0]
 8001732:	f7ff fb85 	bl	8000e40 <HAL_GetTick>
 8001736:	6138      	str	r0, [r7, #16]
 8001738:	e008      	b.n	800174c <HAL_RCC_OscConfig+0x41c>
 800173a:	f7ff fb81 	bl	8000e40 <HAL_GetTick>
 800173e:	4602      	mov	r2, r0
 8001740:	693b      	ldr	r3, [r7, #16]
 8001742:	1ad3      	subs	r3, r2, r3
 8001744:	2b02      	cmp	r3, #2
 8001746:	d901      	bls.n	800174c <HAL_RCC_OscConfig+0x41c>
 8001748:	2303      	movs	r3, #3
 800174a:	e067      	b.n	800181c <HAL_RCC_OscConfig+0x4ec>
 800174c:	4b35      	ldr	r3, [pc, #212]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 800174e:	681b      	ldr	r3, [r3, #0]
 8001750:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8001754:	2b00      	cmp	r3, #0
 8001756:	d1f0      	bne.n	800173a <HAL_RCC_OscConfig+0x40a>
 8001758:	687b      	ldr	r3, [r7, #4]
 800175a:	6a1b      	ldr	r3, [r3, #32]
 800175c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8001760:	d108      	bne.n	8001774 <HAL_RCC_OscConfig+0x444>
 8001762:	4b30      	ldr	r3, [pc, #192]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 8001764:	685b      	ldr	r3, [r3, #4]
 8001766:	f423 3200 	bic.w	r2, r3, #131072	; 0x20000
 800176a:	687b      	ldr	r3, [r7, #4]
 800176c:	689b      	ldr	r3, [r3, #8]
 800176e:	492d      	ldr	r1, [pc, #180]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 8001770:	4313      	orrs	r3, r2
 8001772:	604b      	str	r3, [r1, #4]
 8001774:	4b2b      	ldr	r3, [pc, #172]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 8001776:	685b      	ldr	r3, [r3, #4]
 8001778:	f423 1274 	bic.w	r2, r3, #3997696	; 0x3d0000
 800177c:	687b      	ldr	r3, [r7, #4]
 800177e:	6a19      	ldr	r1, [r3, #32]
 8001780:	687b      	ldr	r3, [r7, #4]
 8001782:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001784:	430b      	orrs	r3, r1
 8001786:	4927      	ldr	r1, [pc, #156]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 8001788:	4313      	orrs	r3, r2
 800178a:	604b      	str	r3, [r1, #4]
 800178c:	4b27      	ldr	r3, [pc, #156]	; (800182c <HAL_RCC_OscConfig+0x4fc>)
 800178e:	2201      	movs	r2, #1
 8001790:	601a      	str	r2, [r3, #0]
 8001792:	f7ff fb55 	bl	8000e40 <HAL_GetTick>
 8001796:	6138      	str	r0, [r7, #16]
 8001798:	e008      	b.n	80017ac <HAL_RCC_OscConfig+0x47c>
 800179a:	f7ff fb51 	bl	8000e40 <HAL_GetTick>
 800179e:	4602      	mov	r2, r0
 80017a0:	693b      	ldr	r3, [r7, #16]
 80017a2:	1ad3      	subs	r3, r2, r3
 80017a4:	2b02      	cmp	r3, #2
 80017a6:	d901      	bls.n	80017ac <HAL_RCC_OscConfig+0x47c>
 80017a8:	2303      	movs	r3, #3
 80017aa:	e037      	b.n	800181c <HAL_RCC_OscConfig+0x4ec>
 80017ac:	4b1d      	ldr	r3, [pc, #116]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 80017ae:	681b      	ldr	r3, [r3, #0]
 80017b0:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80017b4:	2b00      	cmp	r3, #0
 80017b6:	d0f0      	beq.n	800179a <HAL_RCC_OscConfig+0x46a>
 80017b8:	e02f      	b.n	800181a <HAL_RCC_OscConfig+0x4ea>
 80017ba:	4b1c      	ldr	r3, [pc, #112]	; (800182c <HAL_RCC_OscConfig+0x4fc>)
 80017bc:	2200      	movs	r2, #0
 80017be:	601a      	str	r2, [r3, #0]
 80017c0:	f7ff fb3e 	bl	8000e40 <HAL_GetTick>
 80017c4:	6138      	str	r0, [r7, #16]
 80017c6:	e008      	b.n	80017da <HAL_RCC_OscConfig+0x4aa>
 80017c8:	f7ff fb3a 	bl	8000e40 <HAL_GetTick>
 80017cc:	4602      	mov	r2, r0
 80017ce:	693b      	ldr	r3, [r7, #16]
 80017d0:	1ad3      	subs	r3, r2, r3
 80017d2:	2b02      	cmp	r3, #2
 80017d4:	d901      	bls.n	80017da <HAL_RCC_OscConfig+0x4aa>
 80017d6:	2303      	movs	r3, #3
 80017d8:	e020      	b.n	800181c <HAL_RCC_OscConfig+0x4ec>
 80017da:	4b12      	ldr	r3, [pc, #72]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 80017dc:	681b      	ldr	r3, [r3, #0]
 80017de:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80017e2:	2b00      	cmp	r3, #0
 80017e4:	d1f0      	bne.n	80017c8 <HAL_RCC_OscConfig+0x498>
 80017e6:	e018      	b.n	800181a <HAL_RCC_OscConfig+0x4ea>
 80017e8:	687b      	ldr	r3, [r7, #4]
 80017ea:	69db      	ldr	r3, [r3, #28]
 80017ec:	2b01      	cmp	r3, #1
 80017ee:	d101      	bne.n	80017f4 <HAL_RCC_OscConfig+0x4c4>
 80017f0:	2301      	movs	r3, #1
 80017f2:	e013      	b.n	800181c <HAL_RCC_OscConfig+0x4ec>
 80017f4:	4b0b      	ldr	r3, [pc, #44]	; (8001824 <HAL_RCC_OscConfig+0x4f4>)
 80017f6:	685b      	ldr	r3, [r3, #4]
 80017f8:	60fb      	str	r3, [r7, #12]
 80017fa:	68fb      	ldr	r3, [r7, #12]
 80017fc:	f403 3280 	and.w	r2, r3, #65536	; 0x10000
 8001800:	687b      	ldr	r3, [r7, #4]
 8001802:	6a1b      	ldr	r3, [r3, #32]
 8001804:	429a      	cmp	r2, r3
 8001806:	d106      	bne.n	8001816 <HAL_RCC_OscConfig+0x4e6>
 8001808:	68fb      	ldr	r3, [r7, #12]
 800180a:	f403 1270 	and.w	r2, r3, #3932160	; 0x3c0000
 800180e:	687b      	ldr	r3, [r7, #4]
 8001810:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001812:	429a      	cmp	r2, r3
 8001814:	d001      	beq.n	800181a <HAL_RCC_OscConfig+0x4ea>
 8001816:	2301      	movs	r3, #1
 8001818:	e000      	b.n	800181c <HAL_RCC_OscConfig+0x4ec>
 800181a:	2300      	movs	r3, #0
 800181c:	4618      	mov	r0, r3
 800181e:	3718      	adds	r7, #24
 8001820:	46bd      	mov	sp, r7
 8001822:	bd80      	pop	{r7, pc}
 8001824:	40021000 	.word	0x40021000
 8001828:	40007000 	.word	0x40007000
 800182c:	42420060 	.word	0x42420060

08001830 <HAL_RCC_ClockConfig>:
 8001830:	b580      	push	{r7, lr}
 8001832:	b084      	sub	sp, #16
 8001834:	af00      	add	r7, sp, #0
 8001836:	6078      	str	r0, [r7, #4]
 8001838:	6039      	str	r1, [r7, #0]
 800183a:	687b      	ldr	r3, [r7, #4]
 800183c:	2b00      	cmp	r3, #0
 800183e:	d101      	bne.n	8001844 <HAL_RCC_ClockConfig+0x14>
 8001840:	2301      	movs	r3, #1
 8001842:	e0d0      	b.n	80019e6 <HAL_RCC_ClockConfig+0x1b6>
 8001844:	4b6a      	ldr	r3, [pc, #424]	; (80019f0 <HAL_RCC_ClockConfig+0x1c0>)
 8001846:	681b      	ldr	r3, [r3, #0]
 8001848:	f003 0307 	and.w	r3, r3, #7
 800184c:	683a      	ldr	r2, [r7, #0]
 800184e:	429a      	cmp	r2, r3
 8001850:	d910      	bls.n	8001874 <HAL_RCC_ClockConfig+0x44>
 8001852:	4b67      	ldr	r3, [pc, #412]	; (80019f0 <HAL_RCC_ClockConfig+0x1c0>)
 8001854:	681b      	ldr	r3, [r3, #0]
 8001856:	f023 0207 	bic.w	r2, r3, #7
 800185a:	4965      	ldr	r1, [pc, #404]	; (80019f0 <HAL_RCC_ClockConfig+0x1c0>)
 800185c:	683b      	ldr	r3, [r7, #0]
 800185e:	4313      	orrs	r3, r2
 8001860:	600b      	str	r3, [r1, #0]
 8001862:	4b63      	ldr	r3, [pc, #396]	; (80019f0 <HAL_RCC_ClockConfig+0x1c0>)
 8001864:	681b      	ldr	r3, [r3, #0]
 8001866:	f003 0307 	and.w	r3, r3, #7
 800186a:	683a      	ldr	r2, [r7, #0]
 800186c:	429a      	cmp	r2, r3
 800186e:	d001      	beq.n	8001874 <HAL_RCC_ClockConfig+0x44>
 8001870:	2301      	movs	r3, #1
 8001872:	e0b8      	b.n	80019e6 <HAL_RCC_ClockConfig+0x1b6>
 8001874:	687b      	ldr	r3, [r7, #4]
 8001876:	681b      	ldr	r3, [r3, #0]
 8001878:	f003 0302 	and.w	r3, r3, #2
 800187c:	2b00      	cmp	r3, #0
 800187e:	d020      	beq.n	80018c2 <HAL_RCC_ClockConfig+0x92>
 8001880:	687b      	ldr	r3, [r7, #4]
 8001882:	681b      	ldr	r3, [r3, #0]
 8001884:	f003 0304 	and.w	r3, r3, #4
 8001888:	2b00      	cmp	r3, #0
 800188a:	d005      	beq.n	8001898 <HAL_RCC_ClockConfig+0x68>
 800188c:	4b59      	ldr	r3, [pc, #356]	; (80019f4 <HAL_RCC_ClockConfig+0x1c4>)
 800188e:	685b      	ldr	r3, [r3, #4]
 8001890:	4a58      	ldr	r2, [pc, #352]	; (80019f4 <HAL_RCC_ClockConfig+0x1c4>)
 8001892:	f443 63e0 	orr.w	r3, r3, #1792	; 0x700
 8001896:	6053      	str	r3, [r2, #4]
 8001898:	687b      	ldr	r3, [r7, #4]
 800189a:	681b      	ldr	r3, [r3, #0]
 800189c:	f003 0308 	and.w	r3, r3, #8
 80018a0:	2b00      	cmp	r3, #0
 80018a2:	d005      	beq.n	80018b0 <HAL_RCC_ClockConfig+0x80>
 80018a4:	4b53      	ldr	r3, [pc, #332]	; (80019f4 <HAL_RCC_ClockConfig+0x1c4>)
 80018a6:	685b      	ldr	r3, [r3, #4]
 80018a8:	4a52      	ldr	r2, [pc, #328]	; (80019f4 <HAL_RCC_ClockConfig+0x1c4>)
 80018aa:	f443 5360 	orr.w	r3, r3, #14336	; 0x3800
 80018ae:	6053      	str	r3, [r2, #4]
 80018b0:	4b50      	ldr	r3, [pc, #320]	; (80019f4 <HAL_RCC_ClockConfig+0x1c4>)
 80018b2:	685b      	ldr	r3, [r3, #4]
 80018b4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80018b8:	687b      	ldr	r3, [r7, #4]
 80018ba:	689b      	ldr	r3, [r3, #8]
 80018bc:	494d      	ldr	r1, [pc, #308]	; (80019f4 <HAL_RCC_ClockConfig+0x1c4>)
 80018be:	4313      	orrs	r3, r2
 80018c0:	604b      	str	r3, [r1, #4]
 80018c2:	687b      	ldr	r3, [r7, #4]
 80018c4:	681b      	ldr	r3, [r3, #0]
 80018c6:	f003 0301 	and.w	r3, r3, #1
 80018ca:	2b00      	cmp	r3, #0
 80018cc:	d040      	beq.n	8001950 <HAL_RCC_ClockConfig+0x120>
 80018ce:	687b      	ldr	r3, [r7, #4]
 80018d0:	685b      	ldr	r3, [r3, #4]
 80018d2:	2b01      	cmp	r3, #1
 80018d4:	d107      	bne.n	80018e6 <HAL_RCC_ClockConfig+0xb6>
 80018d6:	4b47      	ldr	r3, [pc, #284]	; (80019f4 <HAL_RCC_ClockConfig+0x1c4>)
 80018d8:	681b      	ldr	r3, [r3, #0]
 80018da:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80018de:	2b00      	cmp	r3, #0
 80018e0:	d115      	bne.n	800190e <HAL_RCC_ClockConfig+0xde>
 80018e2:	2301      	movs	r3, #1
 80018e4:	e07f      	b.n	80019e6 <HAL_RCC_ClockConfig+0x1b6>
 80018e6:	687b      	ldr	r3, [r7, #4]
 80018e8:	685b      	ldr	r3, [r3, #4]
 80018ea:	2b02      	cmp	r3, #2
 80018ec:	d107      	bne.n	80018fe <HAL_RCC_ClockConfig+0xce>
 80018ee:	4b41      	ldr	r3, [pc, #260]	; (80019f4 <HAL_RCC_ClockConfig+0x1c4>)
 80018f0:	681b      	ldr	r3, [r3, #0]
 80018f2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80018f6:	2b00      	cmp	r3, #0
 80018f8:	d109      	bne.n	800190e <HAL_RCC_ClockConfig+0xde>
 80018fa:	2301      	movs	r3, #1
 80018fc:	e073      	b.n	80019e6 <HAL_RCC_ClockConfig+0x1b6>
 80018fe:	4b3d      	ldr	r3, [pc, #244]	; (80019f4 <HAL_RCC_ClockConfig+0x1c4>)
 8001900:	681b      	ldr	r3, [r3, #0]
 8001902:	f003 0302 	and.w	r3, r3, #2
 8001906:	2b00      	cmp	r3, #0
 8001908:	d101      	bne.n	800190e <HAL_RCC_ClockConfig+0xde>
 800190a:	2301      	movs	r3, #1
 800190c:	e06b      	b.n	80019e6 <HAL_RCC_ClockConfig+0x1b6>
 800190e:	4b39      	ldr	r3, [pc, #228]	; (80019f4 <HAL_RCC_ClockConfig+0x1c4>)
 8001910:	685b      	ldr	r3, [r3, #4]
 8001912:	f023 0203 	bic.w	r2, r3, #3
 8001916:	687b      	ldr	r3, [r7, #4]
 8001918:	685b      	ldr	r3, [r3, #4]
 800191a:	4936      	ldr	r1, [pc, #216]	; (80019f4 <HAL_RCC_ClockConfig+0x1c4>)
 800191c:	4313      	orrs	r3, r2
 800191e:	604b      	str	r3, [r1, #4]
 8001920:	f7ff fa8e 	bl	8000e40 <HAL_GetTick>
 8001924:	60f8      	str	r0, [r7, #12]
 8001926:	e00a      	b.n	800193e <HAL_RCC_ClockConfig+0x10e>
 8001928:	f7ff fa8a 	bl	8000e40 <HAL_GetTick>
 800192c:	4602      	mov	r2, r0
 800192e:	68fb      	ldr	r3, [r7, #12]
 8001930:	1ad3      	subs	r3, r2, r3
 8001932:	f241 3288 	movw	r2, #5000	; 0x1388
 8001936:	4293      	cmp	r3, r2
 8001938:	d901      	bls.n	800193e <HAL_RCC_ClockConfig+0x10e>
 800193a:	2303      	movs	r3, #3
 800193c:	e053      	b.n	80019e6 <HAL_RCC_ClockConfig+0x1b6>
 800193e:	4b2d      	ldr	r3, [pc, #180]	; (80019f4 <HAL_RCC_ClockConfig+0x1c4>)
 8001940:	685b      	ldr	r3, [r3, #4]
 8001942:	f003 020c 	and.w	r2, r3, #12
 8001946:	687b      	ldr	r3, [r7, #4]
 8001948:	685b      	ldr	r3, [r3, #4]
 800194a:	009b      	lsls	r3, r3, #2
 800194c:	429a      	cmp	r2, r3
 800194e:	d1eb      	bne.n	8001928 <HAL_RCC_ClockConfig+0xf8>
 8001950:	4b27      	ldr	r3, [pc, #156]	; (80019f0 <HAL_RCC_ClockConfig+0x1c0>)
 8001952:	681b      	ldr	r3, [r3, #0]
 8001954:	f003 0307 	and.w	r3, r3, #7
 8001958:	683a      	ldr	r2, [r7, #0]
 800195a:	429a      	cmp	r2, r3
 800195c:	d210      	bcs.n	8001980 <HAL_RCC_ClockConfig+0x150>
 800195e:	4b24      	ldr	r3, [pc, #144]	; (80019f0 <HAL_RCC_ClockConfig+0x1c0>)
 8001960:	681b      	ldr	r3, [r3, #0]
 8001962:	f023 0207 	bic.w	r2, r3, #7
 8001966:	4922      	ldr	r1, [pc, #136]	; (80019f0 <HAL_RCC_ClockConfig+0x1c0>)
 8001968:	683b      	ldr	r3, [r7, #0]
 800196a:	4313      	orrs	r3, r2
 800196c:	600b      	str	r3, [r1, #0]
 800196e:	4b20      	ldr	r3, [pc, #128]	; (80019f0 <HAL_RCC_ClockConfig+0x1c0>)
 8001970:	681b      	ldr	r3, [r3, #0]
 8001972:	f003 0307 	and.w	r3, r3, #7
 8001976:	683a      	ldr	r2, [r7, #0]
 8001978:	429a      	cmp	r2, r3
 800197a:	d001      	beq.n	8001980 <HAL_RCC_ClockConfig+0x150>
 800197c:	2301      	movs	r3, #1
 800197e:	e032      	b.n	80019e6 <HAL_RCC_ClockConfig+0x1b6>
 8001980:	687b      	ldr	r3, [r7, #4]
 8001982:	681b      	ldr	r3, [r3, #0]
 8001984:	f003 0304 	and.w	r3, r3, #4
 8001988:	2b00      	cmp	r3, #0
 800198a:	d008      	beq.n	800199e <HAL_RCC_ClockConfig+0x16e>
 800198c:	4b19      	ldr	r3, [pc, #100]	; (80019f4 <HAL_RCC_ClockConfig+0x1c4>)
 800198e:	685b      	ldr	r3, [r3, #4]
 8001990:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8001994:	687b      	ldr	r3, [r7, #4]
 8001996:	68db      	ldr	r3, [r3, #12]
 8001998:	4916      	ldr	r1, [pc, #88]	; (80019f4 <HAL_RCC_ClockConfig+0x1c4>)
 800199a:	4313      	orrs	r3, r2
 800199c:	604b      	str	r3, [r1, #4]
 800199e:	687b      	ldr	r3, [r7, #4]
 80019a0:	681b      	ldr	r3, [r3, #0]
 80019a2:	f003 0308 	and.w	r3, r3, #8
 80019a6:	2b00      	cmp	r3, #0
 80019a8:	d009      	beq.n	80019be <HAL_RCC_ClockConfig+0x18e>
 80019aa:	4b12      	ldr	r3, [pc, #72]	; (80019f4 <HAL_RCC_ClockConfig+0x1c4>)
 80019ac:	685b      	ldr	r3, [r3, #4]
 80019ae:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 80019b2:	687b      	ldr	r3, [r7, #4]
 80019b4:	691b      	ldr	r3, [r3, #16]
 80019b6:	00db      	lsls	r3, r3, #3
 80019b8:	490e      	ldr	r1, [pc, #56]	; (80019f4 <HAL_RCC_ClockConfig+0x1c4>)
 80019ba:	4313      	orrs	r3, r2
 80019bc:	604b      	str	r3, [r1, #4]
 80019be:	f000 f821 	bl	8001a04 <HAL_RCC_GetSysClockFreq>
 80019c2:	4601      	mov	r1, r0
 80019c4:	4b0b      	ldr	r3, [pc, #44]	; (80019f4 <HAL_RCC_ClockConfig+0x1c4>)
 80019c6:	685b      	ldr	r3, [r3, #4]
 80019c8:	091b      	lsrs	r3, r3, #4
 80019ca:	f003 030f 	and.w	r3, r3, #15
 80019ce:	4a0a      	ldr	r2, [pc, #40]	; (80019f8 <HAL_RCC_ClockConfig+0x1c8>)
 80019d0:	5cd3      	ldrb	r3, [r2, r3]
 80019d2:	fa21 f303 	lsr.w	r3, r1, r3
 80019d6:	4a09      	ldr	r2, [pc, #36]	; (80019fc <HAL_RCC_ClockConfig+0x1cc>)
 80019d8:	6013      	str	r3, [r2, #0]
 80019da:	4b09      	ldr	r3, [pc, #36]	; (8001a00 <HAL_RCC_ClockConfig+0x1d0>)
 80019dc:	681b      	ldr	r3, [r3, #0]
 80019de:	4618      	mov	r0, r3
 80019e0:	f7ff f9ec 	bl	8000dbc <HAL_InitTick>
 80019e4:	2300      	movs	r3, #0
 80019e6:	4618      	mov	r0, r3
 80019e8:	3710      	adds	r7, #16
 80019ea:	46bd      	mov	sp, r7
 80019ec:	bd80      	pop	{r7, pc}
 80019ee:	bf00      	nop
 80019f0:	40022000 	.word	0x40022000
 80019f4:	40021000 	.word	0x40021000
 80019f8:	08005688 	.word	0x08005688
 80019fc:	20000038 	.word	0x20000038
 8001a00:	2000003c 	.word	0x2000003c

08001a04 <HAL_RCC_GetSysClockFreq>:
 8001a04:	b490      	push	{r4, r7}
 8001a06:	b08a      	sub	sp, #40	; 0x28
 8001a08:	af00      	add	r7, sp, #0
 8001a0a:	4b2a      	ldr	r3, [pc, #168]	; (8001ab4 <HAL_RCC_GetSysClockFreq+0xb0>)
 8001a0c:	1d3c      	adds	r4, r7, #4
 8001a0e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8001a10:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8001a14:	4b28      	ldr	r3, [pc, #160]	; (8001ab8 <HAL_RCC_GetSysClockFreq+0xb4>)
 8001a16:	881b      	ldrh	r3, [r3, #0]
 8001a18:	803b      	strh	r3, [r7, #0]
 8001a1a:	2300      	movs	r3, #0
 8001a1c:	61fb      	str	r3, [r7, #28]
 8001a1e:	2300      	movs	r3, #0
 8001a20:	61bb      	str	r3, [r7, #24]
 8001a22:	2300      	movs	r3, #0
 8001a24:	627b      	str	r3, [r7, #36]	; 0x24
 8001a26:	2300      	movs	r3, #0
 8001a28:	617b      	str	r3, [r7, #20]
 8001a2a:	2300      	movs	r3, #0
 8001a2c:	623b      	str	r3, [r7, #32]
 8001a2e:	4b23      	ldr	r3, [pc, #140]	; (8001abc <HAL_RCC_GetSysClockFreq+0xb8>)
 8001a30:	685b      	ldr	r3, [r3, #4]
 8001a32:	61fb      	str	r3, [r7, #28]
 8001a34:	69fb      	ldr	r3, [r7, #28]
 8001a36:	f003 030c 	and.w	r3, r3, #12
 8001a3a:	2b04      	cmp	r3, #4
 8001a3c:	d002      	beq.n	8001a44 <HAL_RCC_GetSysClockFreq+0x40>
 8001a3e:	2b08      	cmp	r3, #8
 8001a40:	d003      	beq.n	8001a4a <HAL_RCC_GetSysClockFreq+0x46>
 8001a42:	e02d      	b.n	8001aa0 <HAL_RCC_GetSysClockFreq+0x9c>
 8001a44:	4b1e      	ldr	r3, [pc, #120]	; (8001ac0 <HAL_RCC_GetSysClockFreq+0xbc>)
 8001a46:	623b      	str	r3, [r7, #32]
 8001a48:	e02d      	b.n	8001aa6 <HAL_RCC_GetSysClockFreq+0xa2>
 8001a4a:	69fb      	ldr	r3, [r7, #28]
 8001a4c:	0c9b      	lsrs	r3, r3, #18
 8001a4e:	f003 030f 	and.w	r3, r3, #15
 8001a52:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001a56:	4413      	add	r3, r2
 8001a58:	f813 3c24 	ldrb.w	r3, [r3, #-36]
 8001a5c:	617b      	str	r3, [r7, #20]
 8001a5e:	69fb      	ldr	r3, [r7, #28]
 8001a60:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8001a64:	2b00      	cmp	r3, #0
 8001a66:	d013      	beq.n	8001a90 <HAL_RCC_GetSysClockFreq+0x8c>
 8001a68:	4b14      	ldr	r3, [pc, #80]	; (8001abc <HAL_RCC_GetSysClockFreq+0xb8>)
 8001a6a:	685b      	ldr	r3, [r3, #4]
 8001a6c:	0c5b      	lsrs	r3, r3, #17
 8001a6e:	f003 0301 	and.w	r3, r3, #1
 8001a72:	f107 0228 	add.w	r2, r7, #40	; 0x28
 8001a76:	4413      	add	r3, r2
 8001a78:	f813 3c28 	ldrb.w	r3, [r3, #-40]
 8001a7c:	61bb      	str	r3, [r7, #24]
 8001a7e:	697b      	ldr	r3, [r7, #20]
 8001a80:	4a0f      	ldr	r2, [pc, #60]	; (8001ac0 <HAL_RCC_GetSysClockFreq+0xbc>)
 8001a82:	fb02 f203 	mul.w	r2, r2, r3
 8001a86:	69bb      	ldr	r3, [r7, #24]
 8001a88:	fbb2 f3f3 	udiv	r3, r2, r3
 8001a8c:	627b      	str	r3, [r7, #36]	; 0x24
 8001a8e:	e004      	b.n	8001a9a <HAL_RCC_GetSysClockFreq+0x96>
 8001a90:	697b      	ldr	r3, [r7, #20]
 8001a92:	4a0c      	ldr	r2, [pc, #48]	; (8001ac4 <HAL_RCC_GetSysClockFreq+0xc0>)
 8001a94:	fb02 f303 	mul.w	r3, r2, r3
 8001a98:	627b      	str	r3, [r7, #36]	; 0x24
 8001a9a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8001a9c:	623b      	str	r3, [r7, #32]
 8001a9e:	e002      	b.n	8001aa6 <HAL_RCC_GetSysClockFreq+0xa2>
 8001aa0:	4b07      	ldr	r3, [pc, #28]	; (8001ac0 <HAL_RCC_GetSysClockFreq+0xbc>)
 8001aa2:	623b      	str	r3, [r7, #32]
 8001aa4:	bf00      	nop
 8001aa6:	6a3b      	ldr	r3, [r7, #32]
 8001aa8:	4618      	mov	r0, r3
 8001aaa:	3728      	adds	r7, #40	; 0x28
 8001aac:	46bd      	mov	sp, r7
 8001aae:	bc90      	pop	{r4, r7}
 8001ab0:	4770      	bx	lr
 8001ab2:	bf00      	nop
 8001ab4:	080055f0 	.word	0x080055f0
 8001ab8:	08005600 	.word	0x08005600
 8001abc:	40021000 	.word	0x40021000
 8001ac0:	007a1200 	.word	0x007a1200
 8001ac4:	003d0900 	.word	0x003d0900

08001ac8 <HAL_RCC_GetHCLKFreq>:
 8001ac8:	b480      	push	{r7}
 8001aca:	af00      	add	r7, sp, #0
 8001acc:	4b02      	ldr	r3, [pc, #8]	; (8001ad8 <HAL_RCC_GetHCLKFreq+0x10>)
 8001ace:	681b      	ldr	r3, [r3, #0]
 8001ad0:	4618      	mov	r0, r3
 8001ad2:	46bd      	mov	sp, r7
 8001ad4:	bc80      	pop	{r7}
 8001ad6:	4770      	bx	lr
 8001ad8:	20000038 	.word	0x20000038

08001adc <HAL_RCC_GetPCLK1Freq>:
 8001adc:	b580      	push	{r7, lr}
 8001ade:	af00      	add	r7, sp, #0
 8001ae0:	f7ff fff2 	bl	8001ac8 <HAL_RCC_GetHCLKFreq>
 8001ae4:	4601      	mov	r1, r0
 8001ae6:	4b05      	ldr	r3, [pc, #20]	; (8001afc <HAL_RCC_GetPCLK1Freq+0x20>)
 8001ae8:	685b      	ldr	r3, [r3, #4]
 8001aea:	0a1b      	lsrs	r3, r3, #8
 8001aec:	f003 0307 	and.w	r3, r3, #7
 8001af0:	4a03      	ldr	r2, [pc, #12]	; (8001b00 <HAL_RCC_GetPCLK1Freq+0x24>)
 8001af2:	5cd3      	ldrb	r3, [r2, r3]
 8001af4:	fa21 f303 	lsr.w	r3, r1, r3
 8001af8:	4618      	mov	r0, r3
 8001afa:	bd80      	pop	{r7, pc}
 8001afc:	40021000 	.word	0x40021000
 8001b00:	08005698 	.word	0x08005698

08001b04 <HAL_RCC_GetPCLK2Freq>:
 8001b04:	b580      	push	{r7, lr}
 8001b06:	af00      	add	r7, sp, #0
 8001b08:	f7ff ffde 	bl	8001ac8 <HAL_RCC_GetHCLKFreq>
 8001b0c:	4601      	mov	r1, r0
 8001b0e:	4b05      	ldr	r3, [pc, #20]	; (8001b24 <HAL_RCC_GetPCLK2Freq+0x20>)
 8001b10:	685b      	ldr	r3, [r3, #4]
 8001b12:	0adb      	lsrs	r3, r3, #11
 8001b14:	f003 0307 	and.w	r3, r3, #7
 8001b18:	4a03      	ldr	r2, [pc, #12]	; (8001b28 <HAL_RCC_GetPCLK2Freq+0x24>)
 8001b1a:	5cd3      	ldrb	r3, [r2, r3]
 8001b1c:	fa21 f303 	lsr.w	r3, r1, r3
 8001b20:	4618      	mov	r0, r3
 8001b22:	bd80      	pop	{r7, pc}
 8001b24:	40021000 	.word	0x40021000
 8001b28:	08005698 	.word	0x08005698

08001b2c <RCC_Delay>:
 8001b2c:	b480      	push	{r7}
 8001b2e:	b085      	sub	sp, #20
 8001b30:	af00      	add	r7, sp, #0
 8001b32:	6078      	str	r0, [r7, #4]
 8001b34:	4b0a      	ldr	r3, [pc, #40]	; (8001b60 <RCC_Delay+0x34>)
 8001b36:	681b      	ldr	r3, [r3, #0]
 8001b38:	4a0a      	ldr	r2, [pc, #40]	; (8001b64 <RCC_Delay+0x38>)
 8001b3a:	fba2 2303 	umull	r2, r3, r2, r3
 8001b3e:	0a5b      	lsrs	r3, r3, #9
 8001b40:	687a      	ldr	r2, [r7, #4]
 8001b42:	fb02 f303 	mul.w	r3, r2, r3
 8001b46:	60fb      	str	r3, [r7, #12]
 8001b48:	bf00      	nop
 8001b4a:	68fb      	ldr	r3, [r7, #12]
 8001b4c:	1e5a      	subs	r2, r3, #1
 8001b4e:	60fa      	str	r2, [r7, #12]
 8001b50:	2b00      	cmp	r3, #0
 8001b52:	d1f9      	bne.n	8001b48 <RCC_Delay+0x1c>
 8001b54:	bf00      	nop
 8001b56:	3714      	adds	r7, #20
 8001b58:	46bd      	mov	sp, r7
 8001b5a:	bc80      	pop	{r7}
 8001b5c:	4770      	bx	lr
 8001b5e:	bf00      	nop
 8001b60:	20000038 	.word	0x20000038
 8001b64:	10624dd3 	.word	0x10624dd3

08001b68 <HAL_UART_Init>:
 8001b68:	b580      	push	{r7, lr}
 8001b6a:	b082      	sub	sp, #8
 8001b6c:	af00      	add	r7, sp, #0
 8001b6e:	6078      	str	r0, [r7, #4]
 8001b70:	687b      	ldr	r3, [r7, #4]
 8001b72:	2b00      	cmp	r3, #0
 8001b74:	d101      	bne.n	8001b7a <HAL_UART_Init+0x12>
 8001b76:	2301      	movs	r3, #1
 8001b78:	e03f      	b.n	8001bfa <HAL_UART_Init+0x92>
 8001b7a:	687b      	ldr	r3, [r7, #4]
 8001b7c:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8001b80:	b2db      	uxtb	r3, r3
 8001b82:	2b00      	cmp	r3, #0
 8001b84:	d106      	bne.n	8001b94 <HAL_UART_Init+0x2c>
 8001b86:	687b      	ldr	r3, [r7, #4]
 8001b88:	2200      	movs	r2, #0
 8001b8a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8001b8e:	6878      	ldr	r0, [r7, #4]
 8001b90:	f7fe fff4 	bl	8000b7c <HAL_UART_MspInit>
 8001b94:	687b      	ldr	r3, [r7, #4]
 8001b96:	2224      	movs	r2, #36	; 0x24
 8001b98:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8001b9c:	687b      	ldr	r3, [r7, #4]
 8001b9e:	681b      	ldr	r3, [r3, #0]
 8001ba0:	68da      	ldr	r2, [r3, #12]
 8001ba2:	687b      	ldr	r3, [r7, #4]
 8001ba4:	681b      	ldr	r3, [r3, #0]
 8001ba6:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8001baa:	60da      	str	r2, [r3, #12]
 8001bac:	6878      	ldr	r0, [r7, #4]
 8001bae:	f000 f90b 	bl	8001dc8 <UART_SetConfig>
 8001bb2:	687b      	ldr	r3, [r7, #4]
 8001bb4:	681b      	ldr	r3, [r3, #0]
 8001bb6:	691a      	ldr	r2, [r3, #16]
 8001bb8:	687b      	ldr	r3, [r7, #4]
 8001bba:	681b      	ldr	r3, [r3, #0]
 8001bbc:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8001bc0:	611a      	str	r2, [r3, #16]
 8001bc2:	687b      	ldr	r3, [r7, #4]
 8001bc4:	681b      	ldr	r3, [r3, #0]
 8001bc6:	695a      	ldr	r2, [r3, #20]
 8001bc8:	687b      	ldr	r3, [r7, #4]
 8001bca:	681b      	ldr	r3, [r3, #0]
 8001bcc:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8001bd0:	615a      	str	r2, [r3, #20]
 8001bd2:	687b      	ldr	r3, [r7, #4]
 8001bd4:	681b      	ldr	r3, [r3, #0]
 8001bd6:	68da      	ldr	r2, [r3, #12]
 8001bd8:	687b      	ldr	r3, [r7, #4]
 8001bda:	681b      	ldr	r3, [r3, #0]
 8001bdc:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8001be0:	60da      	str	r2, [r3, #12]
 8001be2:	687b      	ldr	r3, [r7, #4]
 8001be4:	2200      	movs	r2, #0
 8001be6:	63da      	str	r2, [r3, #60]	; 0x3c
 8001be8:	687b      	ldr	r3, [r7, #4]
 8001bea:	2220      	movs	r2, #32
 8001bec:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8001bf0:	687b      	ldr	r3, [r7, #4]
 8001bf2:	2220      	movs	r2, #32
 8001bf4:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8001bf8:	2300      	movs	r3, #0
 8001bfa:	4618      	mov	r0, r3
 8001bfc:	3708      	adds	r7, #8
 8001bfe:	46bd      	mov	sp, r7
 8001c00:	bd80      	pop	{r7, pc}

08001c02 <HAL_UART_Transmit>:
 8001c02:	b580      	push	{r7, lr}
 8001c04:	b088      	sub	sp, #32
 8001c06:	af02      	add	r7, sp, #8
 8001c08:	60f8      	str	r0, [r7, #12]
 8001c0a:	60b9      	str	r1, [r7, #8]
 8001c0c:	603b      	str	r3, [r7, #0]
 8001c0e:	4613      	mov	r3, r2
 8001c10:	80fb      	strh	r3, [r7, #6]
 8001c12:	2300      	movs	r3, #0
 8001c14:	617b      	str	r3, [r7, #20]
 8001c16:	68fb      	ldr	r3, [r7, #12]
 8001c18:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8001c1c:	b2db      	uxtb	r3, r3
 8001c1e:	2b20      	cmp	r3, #32
 8001c20:	f040 8083 	bne.w	8001d2a <HAL_UART_Transmit+0x128>
 8001c24:	68bb      	ldr	r3, [r7, #8]
 8001c26:	2b00      	cmp	r3, #0
 8001c28:	d002      	beq.n	8001c30 <HAL_UART_Transmit+0x2e>
 8001c2a:	88fb      	ldrh	r3, [r7, #6]
 8001c2c:	2b00      	cmp	r3, #0
 8001c2e:	d101      	bne.n	8001c34 <HAL_UART_Transmit+0x32>
 8001c30:	2301      	movs	r3, #1
 8001c32:	e07b      	b.n	8001d2c <HAL_UART_Transmit+0x12a>
 8001c34:	68fb      	ldr	r3, [r7, #12]
 8001c36:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8001c3a:	2b01      	cmp	r3, #1
 8001c3c:	d101      	bne.n	8001c42 <HAL_UART_Transmit+0x40>
 8001c3e:	2302      	movs	r3, #2
 8001c40:	e074      	b.n	8001d2c <HAL_UART_Transmit+0x12a>
 8001c42:	68fb      	ldr	r3, [r7, #12]
 8001c44:	2201      	movs	r2, #1
 8001c46:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8001c4a:	68fb      	ldr	r3, [r7, #12]
 8001c4c:	2200      	movs	r2, #0
 8001c4e:	63da      	str	r2, [r3, #60]	; 0x3c
 8001c50:	68fb      	ldr	r3, [r7, #12]
 8001c52:	2221      	movs	r2, #33	; 0x21
 8001c54:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8001c58:	f7ff f8f2 	bl	8000e40 <HAL_GetTick>
 8001c5c:	6178      	str	r0, [r7, #20]
 8001c5e:	68fb      	ldr	r3, [r7, #12]
 8001c60:	88fa      	ldrh	r2, [r7, #6]
 8001c62:	849a      	strh	r2, [r3, #36]	; 0x24
 8001c64:	68fb      	ldr	r3, [r7, #12]
 8001c66:	88fa      	ldrh	r2, [r7, #6]
 8001c68:	84da      	strh	r2, [r3, #38]	; 0x26
 8001c6a:	e042      	b.n	8001cf2 <HAL_UART_Transmit+0xf0>
 8001c6c:	68fb      	ldr	r3, [r7, #12]
 8001c6e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8001c70:	b29b      	uxth	r3, r3
 8001c72:	3b01      	subs	r3, #1
 8001c74:	b29a      	uxth	r2, r3
 8001c76:	68fb      	ldr	r3, [r7, #12]
 8001c78:	84da      	strh	r2, [r3, #38]	; 0x26
 8001c7a:	68fb      	ldr	r3, [r7, #12]
 8001c7c:	689b      	ldr	r3, [r3, #8]
 8001c7e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001c82:	d122      	bne.n	8001cca <HAL_UART_Transmit+0xc8>
 8001c84:	683b      	ldr	r3, [r7, #0]
 8001c86:	9300      	str	r3, [sp, #0]
 8001c88:	697b      	ldr	r3, [r7, #20]
 8001c8a:	2200      	movs	r2, #0
 8001c8c:	2180      	movs	r1, #128	; 0x80
 8001c8e:	68f8      	ldr	r0, [r7, #12]
 8001c90:	f000 f850 	bl	8001d34 <UART_WaitOnFlagUntilTimeout>
 8001c94:	4603      	mov	r3, r0
 8001c96:	2b00      	cmp	r3, #0
 8001c98:	d001      	beq.n	8001c9e <HAL_UART_Transmit+0x9c>
 8001c9a:	2303      	movs	r3, #3
 8001c9c:	e046      	b.n	8001d2c <HAL_UART_Transmit+0x12a>
 8001c9e:	68bb      	ldr	r3, [r7, #8]
 8001ca0:	613b      	str	r3, [r7, #16]
 8001ca2:	693b      	ldr	r3, [r7, #16]
 8001ca4:	881b      	ldrh	r3, [r3, #0]
 8001ca6:	461a      	mov	r2, r3
 8001ca8:	68fb      	ldr	r3, [r7, #12]
 8001caa:	681b      	ldr	r3, [r3, #0]
 8001cac:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001cb0:	605a      	str	r2, [r3, #4]
 8001cb2:	68fb      	ldr	r3, [r7, #12]
 8001cb4:	691b      	ldr	r3, [r3, #16]
 8001cb6:	2b00      	cmp	r3, #0
 8001cb8:	d103      	bne.n	8001cc2 <HAL_UART_Transmit+0xc0>
 8001cba:	68bb      	ldr	r3, [r7, #8]
 8001cbc:	3302      	adds	r3, #2
 8001cbe:	60bb      	str	r3, [r7, #8]
 8001cc0:	e017      	b.n	8001cf2 <HAL_UART_Transmit+0xf0>
 8001cc2:	68bb      	ldr	r3, [r7, #8]
 8001cc4:	3301      	adds	r3, #1
 8001cc6:	60bb      	str	r3, [r7, #8]
 8001cc8:	e013      	b.n	8001cf2 <HAL_UART_Transmit+0xf0>
 8001cca:	683b      	ldr	r3, [r7, #0]
 8001ccc:	9300      	str	r3, [sp, #0]
 8001cce:	697b      	ldr	r3, [r7, #20]
 8001cd0:	2200      	movs	r2, #0
 8001cd2:	2180      	movs	r1, #128	; 0x80
 8001cd4:	68f8      	ldr	r0, [r7, #12]
 8001cd6:	f000 f82d 	bl	8001d34 <UART_WaitOnFlagUntilTimeout>
 8001cda:	4603      	mov	r3, r0
 8001cdc:	2b00      	cmp	r3, #0
 8001cde:	d001      	beq.n	8001ce4 <HAL_UART_Transmit+0xe2>
 8001ce0:	2303      	movs	r3, #3
 8001ce2:	e023      	b.n	8001d2c <HAL_UART_Transmit+0x12a>
 8001ce4:	68bb      	ldr	r3, [r7, #8]
 8001ce6:	1c5a      	adds	r2, r3, #1
 8001ce8:	60ba      	str	r2, [r7, #8]
 8001cea:	781a      	ldrb	r2, [r3, #0]
 8001cec:	68fb      	ldr	r3, [r7, #12]
 8001cee:	681b      	ldr	r3, [r3, #0]
 8001cf0:	605a      	str	r2, [r3, #4]
 8001cf2:	68fb      	ldr	r3, [r7, #12]
 8001cf4:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8001cf6:	b29b      	uxth	r3, r3
 8001cf8:	2b00      	cmp	r3, #0
 8001cfa:	d1b7      	bne.n	8001c6c <HAL_UART_Transmit+0x6a>
 8001cfc:	683b      	ldr	r3, [r7, #0]
 8001cfe:	9300      	str	r3, [sp, #0]
 8001d00:	697b      	ldr	r3, [r7, #20]
 8001d02:	2200      	movs	r2, #0
 8001d04:	2140      	movs	r1, #64	; 0x40
 8001d06:	68f8      	ldr	r0, [r7, #12]
 8001d08:	f000 f814 	bl	8001d34 <UART_WaitOnFlagUntilTimeout>
 8001d0c:	4603      	mov	r3, r0
 8001d0e:	2b00      	cmp	r3, #0
 8001d10:	d001      	beq.n	8001d16 <HAL_UART_Transmit+0x114>
 8001d12:	2303      	movs	r3, #3
 8001d14:	e00a      	b.n	8001d2c <HAL_UART_Transmit+0x12a>
 8001d16:	68fb      	ldr	r3, [r7, #12]
 8001d18:	2220      	movs	r2, #32
 8001d1a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8001d1e:	68fb      	ldr	r3, [r7, #12]
 8001d20:	2200      	movs	r2, #0
 8001d22:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8001d26:	2300      	movs	r3, #0
 8001d28:	e000      	b.n	8001d2c <HAL_UART_Transmit+0x12a>
 8001d2a:	2302      	movs	r3, #2
 8001d2c:	4618      	mov	r0, r3
 8001d2e:	3718      	adds	r7, #24
 8001d30:	46bd      	mov	sp, r7
 8001d32:	bd80      	pop	{r7, pc}

08001d34 <UART_WaitOnFlagUntilTimeout>:
 8001d34:	b580      	push	{r7, lr}
 8001d36:	b084      	sub	sp, #16
 8001d38:	af00      	add	r7, sp, #0
 8001d3a:	60f8      	str	r0, [r7, #12]
 8001d3c:	60b9      	str	r1, [r7, #8]
 8001d3e:	603b      	str	r3, [r7, #0]
 8001d40:	4613      	mov	r3, r2
 8001d42:	71fb      	strb	r3, [r7, #7]
 8001d44:	e02c      	b.n	8001da0 <UART_WaitOnFlagUntilTimeout+0x6c>
 8001d46:	69bb      	ldr	r3, [r7, #24]
 8001d48:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001d4c:	d028      	beq.n	8001da0 <UART_WaitOnFlagUntilTimeout+0x6c>
 8001d4e:	69bb      	ldr	r3, [r7, #24]
 8001d50:	2b00      	cmp	r3, #0
 8001d52:	d007      	beq.n	8001d64 <UART_WaitOnFlagUntilTimeout+0x30>
 8001d54:	f7ff f874 	bl	8000e40 <HAL_GetTick>
 8001d58:	4602      	mov	r2, r0
 8001d5a:	683b      	ldr	r3, [r7, #0]
 8001d5c:	1ad3      	subs	r3, r2, r3
 8001d5e:	69ba      	ldr	r2, [r7, #24]
 8001d60:	429a      	cmp	r2, r3
 8001d62:	d21d      	bcs.n	8001da0 <UART_WaitOnFlagUntilTimeout+0x6c>
 8001d64:	68fb      	ldr	r3, [r7, #12]
 8001d66:	681b      	ldr	r3, [r3, #0]
 8001d68:	68da      	ldr	r2, [r3, #12]
 8001d6a:	68fb      	ldr	r3, [r7, #12]
 8001d6c:	681b      	ldr	r3, [r3, #0]
 8001d6e:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8001d72:	60da      	str	r2, [r3, #12]
 8001d74:	68fb      	ldr	r3, [r7, #12]
 8001d76:	681b      	ldr	r3, [r3, #0]
 8001d78:	695a      	ldr	r2, [r3, #20]
 8001d7a:	68fb      	ldr	r3, [r7, #12]
 8001d7c:	681b      	ldr	r3, [r3, #0]
 8001d7e:	f022 0201 	bic.w	r2, r2, #1
 8001d82:	615a      	str	r2, [r3, #20]
 8001d84:	68fb      	ldr	r3, [r7, #12]
 8001d86:	2220      	movs	r2, #32
 8001d88:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
 8001d8c:	68fb      	ldr	r3, [r7, #12]
 8001d8e:	2220      	movs	r2, #32
 8001d90:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a
 8001d94:	68fb      	ldr	r3, [r7, #12]
 8001d96:	2200      	movs	r2, #0
 8001d98:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8001d9c:	2303      	movs	r3, #3
 8001d9e:	e00f      	b.n	8001dc0 <UART_WaitOnFlagUntilTimeout+0x8c>
 8001da0:	68fb      	ldr	r3, [r7, #12]
 8001da2:	681b      	ldr	r3, [r3, #0]
 8001da4:	681a      	ldr	r2, [r3, #0]
 8001da6:	68bb      	ldr	r3, [r7, #8]
 8001da8:	4013      	ands	r3, r2
 8001daa:	68ba      	ldr	r2, [r7, #8]
 8001dac:	429a      	cmp	r2, r3
 8001dae:	bf0c      	ite	eq
 8001db0:	2301      	moveq	r3, #1
 8001db2:	2300      	movne	r3, #0
 8001db4:	b2db      	uxtb	r3, r3
 8001db6:	461a      	mov	r2, r3
 8001db8:	79fb      	ldrb	r3, [r7, #7]
 8001dba:	429a      	cmp	r2, r3
 8001dbc:	d0c3      	beq.n	8001d46 <UART_WaitOnFlagUntilTimeout+0x12>
 8001dbe:	2300      	movs	r3, #0
 8001dc0:	4618      	mov	r0, r3
 8001dc2:	3710      	adds	r7, #16
 8001dc4:	46bd      	mov	sp, r7
 8001dc6:	bd80      	pop	{r7, pc}

08001dc8 <UART_SetConfig>:
 8001dc8:	b580      	push	{r7, lr}
 8001dca:	b084      	sub	sp, #16
 8001dcc:	af00      	add	r7, sp, #0
 8001dce:	6078      	str	r0, [r7, #4]
 8001dd0:	687b      	ldr	r3, [r7, #4]
 8001dd2:	681b      	ldr	r3, [r3, #0]
 8001dd4:	691b      	ldr	r3, [r3, #16]
 8001dd6:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8001dda:	687b      	ldr	r3, [r7, #4]
 8001ddc:	68da      	ldr	r2, [r3, #12]
 8001dde:	687b      	ldr	r3, [r7, #4]
 8001de0:	681b      	ldr	r3, [r3, #0]
 8001de2:	430a      	orrs	r2, r1
 8001de4:	611a      	str	r2, [r3, #16]
 8001de6:	687b      	ldr	r3, [r7, #4]
 8001de8:	689a      	ldr	r2, [r3, #8]
 8001dea:	687b      	ldr	r3, [r7, #4]
 8001dec:	691b      	ldr	r3, [r3, #16]
 8001dee:	431a      	orrs	r2, r3
 8001df0:	687b      	ldr	r3, [r7, #4]
 8001df2:	695b      	ldr	r3, [r3, #20]
 8001df4:	4313      	orrs	r3, r2
 8001df6:	60fb      	str	r3, [r7, #12]
 8001df8:	687b      	ldr	r3, [r7, #4]
 8001dfa:	681b      	ldr	r3, [r3, #0]
 8001dfc:	68db      	ldr	r3, [r3, #12]
 8001dfe:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8001e02:	f023 030c 	bic.w	r3, r3, #12
 8001e06:	687a      	ldr	r2, [r7, #4]
 8001e08:	6812      	ldr	r2, [r2, #0]
 8001e0a:	68f9      	ldr	r1, [r7, #12]
 8001e0c:	430b      	orrs	r3, r1
 8001e0e:	60d3      	str	r3, [r2, #12]
 8001e10:	687b      	ldr	r3, [r7, #4]
 8001e12:	681b      	ldr	r3, [r3, #0]
 8001e14:	695b      	ldr	r3, [r3, #20]
 8001e16:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8001e1a:	687b      	ldr	r3, [r7, #4]
 8001e1c:	699a      	ldr	r2, [r3, #24]
 8001e1e:	687b      	ldr	r3, [r7, #4]
 8001e20:	681b      	ldr	r3, [r3, #0]
 8001e22:	430a      	orrs	r2, r1
 8001e24:	615a      	str	r2, [r3, #20]
 8001e26:	687b      	ldr	r3, [r7, #4]
 8001e28:	681b      	ldr	r3, [r3, #0]
 8001e2a:	4a52      	ldr	r2, [pc, #328]	; (8001f74 <UART_SetConfig+0x1ac>)
 8001e2c:	4293      	cmp	r3, r2
 8001e2e:	d14e      	bne.n	8001ece <UART_SetConfig+0x106>
 8001e30:	f7ff fe68 	bl	8001b04 <HAL_RCC_GetPCLK2Freq>
 8001e34:	60b8      	str	r0, [r7, #8]
 8001e36:	68ba      	ldr	r2, [r7, #8]
 8001e38:	4613      	mov	r3, r2
 8001e3a:	009b      	lsls	r3, r3, #2
 8001e3c:	4413      	add	r3, r2
 8001e3e:	009a      	lsls	r2, r3, #2
 8001e40:	441a      	add	r2, r3
 8001e42:	687b      	ldr	r3, [r7, #4]
 8001e44:	685b      	ldr	r3, [r3, #4]
 8001e46:	009b      	lsls	r3, r3, #2
 8001e48:	fbb2 f3f3 	udiv	r3, r2, r3
 8001e4c:	4a4a      	ldr	r2, [pc, #296]	; (8001f78 <UART_SetConfig+0x1b0>)
 8001e4e:	fba2 2303 	umull	r2, r3, r2, r3
 8001e52:	095b      	lsrs	r3, r3, #5
 8001e54:	0119      	lsls	r1, r3, #4
 8001e56:	68ba      	ldr	r2, [r7, #8]
 8001e58:	4613      	mov	r3, r2
 8001e5a:	009b      	lsls	r3, r3, #2
 8001e5c:	4413      	add	r3, r2
 8001e5e:	009a      	lsls	r2, r3, #2
 8001e60:	441a      	add	r2, r3
 8001e62:	687b      	ldr	r3, [r7, #4]
 8001e64:	685b      	ldr	r3, [r3, #4]
 8001e66:	009b      	lsls	r3, r3, #2
 8001e68:	fbb2 f2f3 	udiv	r2, r2, r3
 8001e6c:	4b42      	ldr	r3, [pc, #264]	; (8001f78 <UART_SetConfig+0x1b0>)
 8001e6e:	fba3 0302 	umull	r0, r3, r3, r2
 8001e72:	095b      	lsrs	r3, r3, #5
 8001e74:	2064      	movs	r0, #100	; 0x64
 8001e76:	fb00 f303 	mul.w	r3, r0, r3
 8001e7a:	1ad3      	subs	r3, r2, r3
 8001e7c:	011b      	lsls	r3, r3, #4
 8001e7e:	3332      	adds	r3, #50	; 0x32
 8001e80:	4a3d      	ldr	r2, [pc, #244]	; (8001f78 <UART_SetConfig+0x1b0>)
 8001e82:	fba2 2303 	umull	r2, r3, r2, r3
 8001e86:	095b      	lsrs	r3, r3, #5
 8001e88:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8001e8c:	4419      	add	r1, r3
 8001e8e:	68ba      	ldr	r2, [r7, #8]
 8001e90:	4613      	mov	r3, r2
 8001e92:	009b      	lsls	r3, r3, #2
 8001e94:	4413      	add	r3, r2
 8001e96:	009a      	lsls	r2, r3, #2
 8001e98:	441a      	add	r2, r3
 8001e9a:	687b      	ldr	r3, [r7, #4]
 8001e9c:	685b      	ldr	r3, [r3, #4]
 8001e9e:	009b      	lsls	r3, r3, #2
 8001ea0:	fbb2 f2f3 	udiv	r2, r2, r3
 8001ea4:	4b34      	ldr	r3, [pc, #208]	; (8001f78 <UART_SetConfig+0x1b0>)
 8001ea6:	fba3 0302 	umull	r0, r3, r3, r2
 8001eaa:	095b      	lsrs	r3, r3, #5
 8001eac:	2064      	movs	r0, #100	; 0x64
 8001eae:	fb00 f303 	mul.w	r3, r0, r3
 8001eb2:	1ad3      	subs	r3, r2, r3
 8001eb4:	011b      	lsls	r3, r3, #4
 8001eb6:	3332      	adds	r3, #50	; 0x32
 8001eb8:	4a2f      	ldr	r2, [pc, #188]	; (8001f78 <UART_SetConfig+0x1b0>)
 8001eba:	fba2 2303 	umull	r2, r3, r2, r3
 8001ebe:	095b      	lsrs	r3, r3, #5
 8001ec0:	f003 020f 	and.w	r2, r3, #15
 8001ec4:	687b      	ldr	r3, [r7, #4]
 8001ec6:	681b      	ldr	r3, [r3, #0]
 8001ec8:	440a      	add	r2, r1
 8001eca:	609a      	str	r2, [r3, #8]
 8001ecc:	e04d      	b.n	8001f6a <UART_SetConfig+0x1a2>
 8001ece:	f7ff fe05 	bl	8001adc <HAL_RCC_GetPCLK1Freq>
 8001ed2:	60b8      	str	r0, [r7, #8]
 8001ed4:	68ba      	ldr	r2, [r7, #8]
 8001ed6:	4613      	mov	r3, r2
 8001ed8:	009b      	lsls	r3, r3, #2
 8001eda:	4413      	add	r3, r2
 8001edc:	009a      	lsls	r2, r3, #2
 8001ede:	441a      	add	r2, r3
 8001ee0:	687b      	ldr	r3, [r7, #4]
 8001ee2:	685b      	ldr	r3, [r3, #4]
 8001ee4:	009b      	lsls	r3, r3, #2
 8001ee6:	fbb2 f3f3 	udiv	r3, r2, r3
 8001eea:	4a23      	ldr	r2, [pc, #140]	; (8001f78 <UART_SetConfig+0x1b0>)
 8001eec:	fba2 2303 	umull	r2, r3, r2, r3
 8001ef0:	095b      	lsrs	r3, r3, #5
 8001ef2:	0119      	lsls	r1, r3, #4
 8001ef4:	68ba      	ldr	r2, [r7, #8]
 8001ef6:	4613      	mov	r3, r2
 8001ef8:	009b      	lsls	r3, r3, #2
 8001efa:	4413      	add	r3, r2
 8001efc:	009a      	lsls	r2, r3, #2
 8001efe:	441a      	add	r2, r3
 8001f00:	687b      	ldr	r3, [r7, #4]
 8001f02:	685b      	ldr	r3, [r3, #4]
 8001f04:	009b      	lsls	r3, r3, #2
 8001f06:	fbb2 f2f3 	udiv	r2, r2, r3
 8001f0a:	4b1b      	ldr	r3, [pc, #108]	; (8001f78 <UART_SetConfig+0x1b0>)
 8001f0c:	fba3 0302 	umull	r0, r3, r3, r2
 8001f10:	095b      	lsrs	r3, r3, #5
 8001f12:	2064      	movs	r0, #100	; 0x64
 8001f14:	fb00 f303 	mul.w	r3, r0, r3
 8001f18:	1ad3      	subs	r3, r2, r3
 8001f1a:	011b      	lsls	r3, r3, #4
 8001f1c:	3332      	adds	r3, #50	; 0x32
 8001f1e:	4a16      	ldr	r2, [pc, #88]	; (8001f78 <UART_SetConfig+0x1b0>)
 8001f20:	fba2 2303 	umull	r2, r3, r2, r3
 8001f24:	095b      	lsrs	r3, r3, #5
 8001f26:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8001f2a:	4419      	add	r1, r3
 8001f2c:	68ba      	ldr	r2, [r7, #8]
 8001f2e:	4613      	mov	r3, r2
 8001f30:	009b      	lsls	r3, r3, #2
 8001f32:	4413      	add	r3, r2
 8001f34:	009a      	lsls	r2, r3, #2
 8001f36:	441a      	add	r2, r3
 8001f38:	687b      	ldr	r3, [r7, #4]
 8001f3a:	685b      	ldr	r3, [r3, #4]
 8001f3c:	009b      	lsls	r3, r3, #2
 8001f3e:	fbb2 f2f3 	udiv	r2, r2, r3
 8001f42:	4b0d      	ldr	r3, [pc, #52]	; (8001f78 <UART_SetConfig+0x1b0>)
 8001f44:	fba3 0302 	umull	r0, r3, r3, r2
 8001f48:	095b      	lsrs	r3, r3, #5
 8001f4a:	2064      	movs	r0, #100	; 0x64
 8001f4c:	fb00 f303 	mul.w	r3, r0, r3
 8001f50:	1ad3      	subs	r3, r2, r3
 8001f52:	011b      	lsls	r3, r3, #4
 8001f54:	3332      	adds	r3, #50	; 0x32
 8001f56:	4a08      	ldr	r2, [pc, #32]	; (8001f78 <UART_SetConfig+0x1b0>)
 8001f58:	fba2 2303 	umull	r2, r3, r2, r3
 8001f5c:	095b      	lsrs	r3, r3, #5
 8001f5e:	f003 020f 	and.w	r2, r3, #15
 8001f62:	687b      	ldr	r3, [r7, #4]
 8001f64:	681b      	ldr	r3, [r3, #0]
 8001f66:	440a      	add	r2, r1
 8001f68:	609a      	str	r2, [r3, #8]
 8001f6a:	bf00      	nop
 8001f6c:	3710      	adds	r7, #16
 8001f6e:	46bd      	mov	sp, r7
 8001f70:	bd80      	pop	{r7, pc}
 8001f72:	bf00      	nop
 8001f74:	40013800 	.word	0x40013800
 8001f78:	51eb851f 	.word	0x51eb851f

08001f7c <osKernelInitialize>:
 8001f7c:	b480      	push	{r7}
 8001f7e:	b085      	sub	sp, #20
 8001f80:	af00      	add	r7, sp, #0
 8001f82:	f3ef 8305 	mrs	r3, IPSR
 8001f86:	60bb      	str	r3, [r7, #8]
 8001f88:	68bb      	ldr	r3, [r7, #8]
 8001f8a:	2b00      	cmp	r3, #0
 8001f8c:	d10f      	bne.n	8001fae <osKernelInitialize+0x32>
 8001f8e:	f3ef 8310 	mrs	r3, PRIMASK
 8001f92:	607b      	str	r3, [r7, #4]
 8001f94:	687b      	ldr	r3, [r7, #4]
 8001f96:	2b00      	cmp	r3, #0
 8001f98:	d109      	bne.n	8001fae <osKernelInitialize+0x32>
 8001f9a:	4b10      	ldr	r3, [pc, #64]	; (8001fdc <osKernelInitialize+0x60>)
 8001f9c:	681b      	ldr	r3, [r3, #0]
 8001f9e:	2b02      	cmp	r3, #2
 8001fa0:	d109      	bne.n	8001fb6 <osKernelInitialize+0x3a>
 8001fa2:	f3ef 8311 	mrs	r3, BASEPRI
 8001fa6:	603b      	str	r3, [r7, #0]
 8001fa8:	683b      	ldr	r3, [r7, #0]
 8001faa:	2b00      	cmp	r3, #0
 8001fac:	d003      	beq.n	8001fb6 <osKernelInitialize+0x3a>
 8001fae:	f06f 0305 	mvn.w	r3, #5
 8001fb2:	60fb      	str	r3, [r7, #12]
 8001fb4:	e00c      	b.n	8001fd0 <osKernelInitialize+0x54>
 8001fb6:	4b09      	ldr	r3, [pc, #36]	; (8001fdc <osKernelInitialize+0x60>)
 8001fb8:	681b      	ldr	r3, [r3, #0]
 8001fba:	2b00      	cmp	r3, #0
 8001fbc:	d105      	bne.n	8001fca <osKernelInitialize+0x4e>
 8001fbe:	4b07      	ldr	r3, [pc, #28]	; (8001fdc <osKernelInitialize+0x60>)
 8001fc0:	2201      	movs	r2, #1
 8001fc2:	601a      	str	r2, [r3, #0]
 8001fc4:	2300      	movs	r3, #0
 8001fc6:	60fb      	str	r3, [r7, #12]
 8001fc8:	e002      	b.n	8001fd0 <osKernelInitialize+0x54>
 8001fca:	f04f 33ff 	mov.w	r3, #4294967295
 8001fce:	60fb      	str	r3, [r7, #12]
 8001fd0:	68fb      	ldr	r3, [r7, #12]
 8001fd2:	4618      	mov	r0, r3
 8001fd4:	3714      	adds	r7, #20
 8001fd6:	46bd      	mov	sp, r7
 8001fd8:	bc80      	pop	{r7}
 8001fda:	4770      	bx	lr
 8001fdc:	200000d4 	.word	0x200000d4

08001fe0 <osKernelStart>:
 8001fe0:	b580      	push	{r7, lr}
 8001fe2:	b084      	sub	sp, #16
 8001fe4:	af00      	add	r7, sp, #0
 8001fe6:	f3ef 8305 	mrs	r3, IPSR
 8001fea:	60bb      	str	r3, [r7, #8]
 8001fec:	68bb      	ldr	r3, [r7, #8]
 8001fee:	2b00      	cmp	r3, #0
 8001ff0:	d10f      	bne.n	8002012 <osKernelStart+0x32>
 8001ff2:	f3ef 8310 	mrs	r3, PRIMASK
 8001ff6:	607b      	str	r3, [r7, #4]
 8001ff8:	687b      	ldr	r3, [r7, #4]
 8001ffa:	2b00      	cmp	r3, #0
 8001ffc:	d109      	bne.n	8002012 <osKernelStart+0x32>
 8001ffe:	4b11      	ldr	r3, [pc, #68]	; (8002044 <osKernelStart+0x64>)
 8002000:	681b      	ldr	r3, [r3, #0]
 8002002:	2b02      	cmp	r3, #2
 8002004:	d109      	bne.n	800201a <osKernelStart+0x3a>
 8002006:	f3ef 8311 	mrs	r3, BASEPRI
 800200a:	603b      	str	r3, [r7, #0]
 800200c:	683b      	ldr	r3, [r7, #0]
 800200e:	2b00      	cmp	r3, #0
 8002010:	d003      	beq.n	800201a <osKernelStart+0x3a>
 8002012:	f06f 0305 	mvn.w	r3, #5
 8002016:	60fb      	str	r3, [r7, #12]
 8002018:	e00e      	b.n	8002038 <osKernelStart+0x58>
 800201a:	4b0a      	ldr	r3, [pc, #40]	; (8002044 <osKernelStart+0x64>)
 800201c:	681b      	ldr	r3, [r3, #0]
 800201e:	2b01      	cmp	r3, #1
 8002020:	d107      	bne.n	8002032 <osKernelStart+0x52>
 8002022:	4b08      	ldr	r3, [pc, #32]	; (8002044 <osKernelStart+0x64>)
 8002024:	2202      	movs	r2, #2
 8002026:	601a      	str	r2, [r3, #0]
 8002028:	f001 f944 	bl	80032b4 <vTaskStartScheduler>
 800202c:	2300      	movs	r3, #0
 800202e:	60fb      	str	r3, [r7, #12]
 8002030:	e002      	b.n	8002038 <osKernelStart+0x58>
 8002032:	f04f 33ff 	mov.w	r3, #4294967295
 8002036:	60fb      	str	r3, [r7, #12]
 8002038:	68fb      	ldr	r3, [r7, #12]
 800203a:	4618      	mov	r0, r3
 800203c:	3710      	adds	r7, #16
 800203e:	46bd      	mov	sp, r7
 8002040:	bd80      	pop	{r7, pc}
 8002042:	bf00      	nop
 8002044:	200000d4 	.word	0x200000d4

08002048 <osThreadNew>:
 8002048:	b580      	push	{r7, lr}
 800204a:	b092      	sub	sp, #72	; 0x48
 800204c:	af04      	add	r7, sp, #16
 800204e:	60f8      	str	r0, [r7, #12]
 8002050:	60b9      	str	r1, [r7, #8]
 8002052:	607a      	str	r2, [r7, #4]
 8002054:	2300      	movs	r3, #0
 8002056:	617b      	str	r3, [r7, #20]
 8002058:	f3ef 8305 	mrs	r3, IPSR
 800205c:	627b      	str	r3, [r7, #36]	; 0x24
 800205e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002060:	2b00      	cmp	r3, #0
 8002062:	f040 8094 	bne.w	800218e <osThreadNew+0x146>
 8002066:	f3ef 8310 	mrs	r3, PRIMASK
 800206a:	623b      	str	r3, [r7, #32]
 800206c:	6a3b      	ldr	r3, [r7, #32]
 800206e:	2b00      	cmp	r3, #0
 8002070:	f040 808d 	bne.w	800218e <osThreadNew+0x146>
 8002074:	4b48      	ldr	r3, [pc, #288]	; (8002198 <osThreadNew+0x150>)
 8002076:	681b      	ldr	r3, [r3, #0]
 8002078:	2b02      	cmp	r3, #2
 800207a:	d106      	bne.n	800208a <osThreadNew+0x42>
 800207c:	f3ef 8311 	mrs	r3, BASEPRI
 8002080:	61fb      	str	r3, [r7, #28]
 8002082:	69fb      	ldr	r3, [r7, #28]
 8002084:	2b00      	cmp	r3, #0
 8002086:	f040 8082 	bne.w	800218e <osThreadNew+0x146>
 800208a:	68fb      	ldr	r3, [r7, #12]
 800208c:	2b00      	cmp	r3, #0
 800208e:	d07e      	beq.n	800218e <osThreadNew+0x146>
 8002090:	2380      	movs	r3, #128	; 0x80
 8002092:	633b      	str	r3, [r7, #48]	; 0x30
 8002094:	2318      	movs	r3, #24
 8002096:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002098:	2300      	movs	r3, #0
 800209a:	76fb      	strb	r3, [r7, #27]
 800209c:	f107 031b 	add.w	r3, r7, #27
 80020a0:	637b      	str	r3, [r7, #52]	; 0x34
 80020a2:	f04f 33ff 	mov.w	r3, #4294967295
 80020a6:	62bb      	str	r3, [r7, #40]	; 0x28
 80020a8:	687b      	ldr	r3, [r7, #4]
 80020aa:	2b00      	cmp	r3, #0
 80020ac:	d045      	beq.n	800213a <osThreadNew+0xf2>
 80020ae:	687b      	ldr	r3, [r7, #4]
 80020b0:	681b      	ldr	r3, [r3, #0]
 80020b2:	2b00      	cmp	r3, #0
 80020b4:	d002      	beq.n	80020bc <osThreadNew+0x74>
 80020b6:	687b      	ldr	r3, [r7, #4]
 80020b8:	681b      	ldr	r3, [r3, #0]
 80020ba:	637b      	str	r3, [r7, #52]	; 0x34
 80020bc:	687b      	ldr	r3, [r7, #4]
 80020be:	699b      	ldr	r3, [r3, #24]
 80020c0:	2b00      	cmp	r3, #0
 80020c2:	d002      	beq.n	80020ca <osThreadNew+0x82>
 80020c4:	687b      	ldr	r3, [r7, #4]
 80020c6:	699b      	ldr	r3, [r3, #24]
 80020c8:	62fb      	str	r3, [r7, #44]	; 0x2c
 80020ca:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80020cc:	2b00      	cmp	r3, #0
 80020ce:	d008      	beq.n	80020e2 <osThreadNew+0x9a>
 80020d0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80020d2:	2b38      	cmp	r3, #56	; 0x38
 80020d4:	d805      	bhi.n	80020e2 <osThreadNew+0x9a>
 80020d6:	687b      	ldr	r3, [r7, #4]
 80020d8:	685b      	ldr	r3, [r3, #4]
 80020da:	f003 0301 	and.w	r3, r3, #1
 80020de:	2b00      	cmp	r3, #0
 80020e0:	d001      	beq.n	80020e6 <osThreadNew+0x9e>
 80020e2:	2300      	movs	r3, #0
 80020e4:	e054      	b.n	8002190 <osThreadNew+0x148>
 80020e6:	687b      	ldr	r3, [r7, #4]
 80020e8:	695b      	ldr	r3, [r3, #20]
 80020ea:	2b00      	cmp	r3, #0
 80020ec:	d003      	beq.n	80020f6 <osThreadNew+0xae>
 80020ee:	687b      	ldr	r3, [r7, #4]
 80020f0:	695b      	ldr	r3, [r3, #20]
 80020f2:	089b      	lsrs	r3, r3, #2
 80020f4:	633b      	str	r3, [r7, #48]	; 0x30
 80020f6:	687b      	ldr	r3, [r7, #4]
 80020f8:	689b      	ldr	r3, [r3, #8]
 80020fa:	2b00      	cmp	r3, #0
 80020fc:	d00e      	beq.n	800211c <osThreadNew+0xd4>
 80020fe:	687b      	ldr	r3, [r7, #4]
 8002100:	68db      	ldr	r3, [r3, #12]
 8002102:	2b5b      	cmp	r3, #91	; 0x5b
 8002104:	d90a      	bls.n	800211c <osThreadNew+0xd4>
 8002106:	687b      	ldr	r3, [r7, #4]
 8002108:	691b      	ldr	r3, [r3, #16]
 800210a:	2b00      	cmp	r3, #0
 800210c:	d006      	beq.n	800211c <osThreadNew+0xd4>
 800210e:	687b      	ldr	r3, [r7, #4]
 8002110:	695b      	ldr	r3, [r3, #20]
 8002112:	2b00      	cmp	r3, #0
 8002114:	d002      	beq.n	800211c <osThreadNew+0xd4>
 8002116:	2301      	movs	r3, #1
 8002118:	62bb      	str	r3, [r7, #40]	; 0x28
 800211a:	e010      	b.n	800213e <osThreadNew+0xf6>
 800211c:	687b      	ldr	r3, [r7, #4]
 800211e:	689b      	ldr	r3, [r3, #8]
 8002120:	2b00      	cmp	r3, #0
 8002122:	d10c      	bne.n	800213e <osThreadNew+0xf6>
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	68db      	ldr	r3, [r3, #12]
 8002128:	2b00      	cmp	r3, #0
 800212a:	d108      	bne.n	800213e <osThreadNew+0xf6>
 800212c:	687b      	ldr	r3, [r7, #4]
 800212e:	691b      	ldr	r3, [r3, #16]
 8002130:	2b00      	cmp	r3, #0
 8002132:	d104      	bne.n	800213e <osThreadNew+0xf6>
 8002134:	2300      	movs	r3, #0
 8002136:	62bb      	str	r3, [r7, #40]	; 0x28
 8002138:	e001      	b.n	800213e <osThreadNew+0xf6>
 800213a:	2300      	movs	r3, #0
 800213c:	62bb      	str	r3, [r7, #40]	; 0x28
 800213e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002140:	2b01      	cmp	r3, #1
 8002142:	d110      	bne.n	8002166 <osThreadNew+0x11e>
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	691b      	ldr	r3, [r3, #16]
 8002148:	687a      	ldr	r2, [r7, #4]
 800214a:	6892      	ldr	r2, [r2, #8]
 800214c:	9202      	str	r2, [sp, #8]
 800214e:	9301      	str	r3, [sp, #4]
 8002150:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002152:	9300      	str	r3, [sp, #0]
 8002154:	68bb      	ldr	r3, [r7, #8]
 8002156:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8002158:	6b79      	ldr	r1, [r7, #52]	; 0x34
 800215a:	68f8      	ldr	r0, [r7, #12]
 800215c:	f000 fee2 	bl	8002f24 <xTaskCreateStatic>
 8002160:	4603      	mov	r3, r0
 8002162:	617b      	str	r3, [r7, #20]
 8002164:	e013      	b.n	800218e <osThreadNew+0x146>
 8002166:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002168:	2b00      	cmp	r3, #0
 800216a:	d110      	bne.n	800218e <osThreadNew+0x146>
 800216c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800216e:	b29a      	uxth	r2, r3
 8002170:	f107 0314 	add.w	r3, r7, #20
 8002174:	9301      	str	r3, [sp, #4]
 8002176:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002178:	9300      	str	r3, [sp, #0]
 800217a:	68bb      	ldr	r3, [r7, #8]
 800217c:	6b79      	ldr	r1, [r7, #52]	; 0x34
 800217e:	68f8      	ldr	r0, [r7, #12]
 8002180:	f000 ff29 	bl	8002fd6 <xTaskCreate>
 8002184:	4603      	mov	r3, r0
 8002186:	2b01      	cmp	r3, #1
 8002188:	d001      	beq.n	800218e <osThreadNew+0x146>
 800218a:	2300      	movs	r3, #0
 800218c:	617b      	str	r3, [r7, #20]
 800218e:	697b      	ldr	r3, [r7, #20]
 8002190:	4618      	mov	r0, r3
 8002192:	3738      	adds	r7, #56	; 0x38
 8002194:	46bd      	mov	sp, r7
 8002196:	bd80      	pop	{r7, pc}
 8002198:	200000d4 	.word	0x200000d4

0800219c <osDelay>:
 800219c:	b580      	push	{r7, lr}
 800219e:	b086      	sub	sp, #24
 80021a0:	af00      	add	r7, sp, #0
 80021a2:	6078      	str	r0, [r7, #4]
 80021a4:	f3ef 8305 	mrs	r3, IPSR
 80021a8:	613b      	str	r3, [r7, #16]
 80021aa:	693b      	ldr	r3, [r7, #16]
 80021ac:	2b00      	cmp	r3, #0
 80021ae:	d10f      	bne.n	80021d0 <osDelay+0x34>
 80021b0:	f3ef 8310 	mrs	r3, PRIMASK
 80021b4:	60fb      	str	r3, [r7, #12]
 80021b6:	68fb      	ldr	r3, [r7, #12]
 80021b8:	2b00      	cmp	r3, #0
 80021ba:	d109      	bne.n	80021d0 <osDelay+0x34>
 80021bc:	4b0d      	ldr	r3, [pc, #52]	; (80021f4 <osDelay+0x58>)
 80021be:	681b      	ldr	r3, [r3, #0]
 80021c0:	2b02      	cmp	r3, #2
 80021c2:	d109      	bne.n	80021d8 <osDelay+0x3c>
 80021c4:	f3ef 8311 	mrs	r3, BASEPRI
 80021c8:	60bb      	str	r3, [r7, #8]
 80021ca:	68bb      	ldr	r3, [r7, #8]
 80021cc:	2b00      	cmp	r3, #0
 80021ce:	d003      	beq.n	80021d8 <osDelay+0x3c>
 80021d0:	f06f 0305 	mvn.w	r3, #5
 80021d4:	617b      	str	r3, [r7, #20]
 80021d6:	e007      	b.n	80021e8 <osDelay+0x4c>
 80021d8:	2300      	movs	r3, #0
 80021da:	617b      	str	r3, [r7, #20]
 80021dc:	687b      	ldr	r3, [r7, #4]
 80021de:	2b00      	cmp	r3, #0
 80021e0:	d002      	beq.n	80021e8 <osDelay+0x4c>
 80021e2:	6878      	ldr	r0, [r7, #4]
 80021e4:	f001 f832 	bl	800324c <vTaskDelay>
 80021e8:	697b      	ldr	r3, [r7, #20]
 80021ea:	4618      	mov	r0, r3
 80021ec:	3718      	adds	r7, #24
 80021ee:	46bd      	mov	sp, r7
 80021f0:	bd80      	pop	{r7, pc}
 80021f2:	bf00      	nop
 80021f4:	200000d4 	.word	0x200000d4

080021f8 <osMessageQueueNew>:
 80021f8:	b580      	push	{r7, lr}
 80021fa:	b08c      	sub	sp, #48	; 0x30
 80021fc:	af02      	add	r7, sp, #8
 80021fe:	60f8      	str	r0, [r7, #12]
 8002200:	60b9      	str	r1, [r7, #8]
 8002202:	607a      	str	r2, [r7, #4]
 8002204:	2300      	movs	r3, #0
 8002206:	627b      	str	r3, [r7, #36]	; 0x24
 8002208:	f3ef 8305 	mrs	r3, IPSR
 800220c:	61bb      	str	r3, [r7, #24]
 800220e:	69bb      	ldr	r3, [r7, #24]
 8002210:	2b00      	cmp	r3, #0
 8002212:	d170      	bne.n	80022f6 <osMessageQueueNew+0xfe>
 8002214:	f3ef 8310 	mrs	r3, PRIMASK
 8002218:	617b      	str	r3, [r7, #20]
 800221a:	697b      	ldr	r3, [r7, #20]
 800221c:	2b00      	cmp	r3, #0
 800221e:	d16a      	bne.n	80022f6 <osMessageQueueNew+0xfe>
 8002220:	4b37      	ldr	r3, [pc, #220]	; (8002300 <osMessageQueueNew+0x108>)
 8002222:	681b      	ldr	r3, [r3, #0]
 8002224:	2b02      	cmp	r3, #2
 8002226:	d105      	bne.n	8002234 <osMessageQueueNew+0x3c>
 8002228:	f3ef 8311 	mrs	r3, BASEPRI
 800222c:	613b      	str	r3, [r7, #16]
 800222e:	693b      	ldr	r3, [r7, #16]
 8002230:	2b00      	cmp	r3, #0
 8002232:	d160      	bne.n	80022f6 <osMessageQueueNew+0xfe>
 8002234:	68fb      	ldr	r3, [r7, #12]
 8002236:	2b00      	cmp	r3, #0
 8002238:	d05d      	beq.n	80022f6 <osMessageQueueNew+0xfe>
 800223a:	68bb      	ldr	r3, [r7, #8]
 800223c:	2b00      	cmp	r3, #0
 800223e:	d05a      	beq.n	80022f6 <osMessageQueueNew+0xfe>
 8002240:	f04f 33ff 	mov.w	r3, #4294967295
 8002244:	623b      	str	r3, [r7, #32]
 8002246:	687b      	ldr	r3, [r7, #4]
 8002248:	2b00      	cmp	r3, #0
 800224a:	d029      	beq.n	80022a0 <osMessageQueueNew+0xa8>
 800224c:	687b      	ldr	r3, [r7, #4]
 800224e:	689b      	ldr	r3, [r3, #8]
 8002250:	2b00      	cmp	r3, #0
 8002252:	d012      	beq.n	800227a <osMessageQueueNew+0x82>
 8002254:	687b      	ldr	r3, [r7, #4]
 8002256:	68db      	ldr	r3, [r3, #12]
 8002258:	2b4f      	cmp	r3, #79	; 0x4f
 800225a:	d90e      	bls.n	800227a <osMessageQueueNew+0x82>
 800225c:	687b      	ldr	r3, [r7, #4]
 800225e:	691b      	ldr	r3, [r3, #16]
 8002260:	2b00      	cmp	r3, #0
 8002262:	d00a      	beq.n	800227a <osMessageQueueNew+0x82>
 8002264:	687b      	ldr	r3, [r7, #4]
 8002266:	695a      	ldr	r2, [r3, #20]
 8002268:	68fb      	ldr	r3, [r7, #12]
 800226a:	68b9      	ldr	r1, [r7, #8]
 800226c:	fb01 f303 	mul.w	r3, r1, r3
 8002270:	429a      	cmp	r2, r3
 8002272:	d302      	bcc.n	800227a <osMessageQueueNew+0x82>
 8002274:	2301      	movs	r3, #1
 8002276:	623b      	str	r3, [r7, #32]
 8002278:	e014      	b.n	80022a4 <osMessageQueueNew+0xac>
 800227a:	687b      	ldr	r3, [r7, #4]
 800227c:	689b      	ldr	r3, [r3, #8]
 800227e:	2b00      	cmp	r3, #0
 8002280:	d110      	bne.n	80022a4 <osMessageQueueNew+0xac>
 8002282:	687b      	ldr	r3, [r7, #4]
 8002284:	68db      	ldr	r3, [r3, #12]
 8002286:	2b00      	cmp	r3, #0
 8002288:	d10c      	bne.n	80022a4 <osMessageQueueNew+0xac>
 800228a:	687b      	ldr	r3, [r7, #4]
 800228c:	691b      	ldr	r3, [r3, #16]
 800228e:	2b00      	cmp	r3, #0
 8002290:	d108      	bne.n	80022a4 <osMessageQueueNew+0xac>
 8002292:	687b      	ldr	r3, [r7, #4]
 8002294:	695b      	ldr	r3, [r3, #20]
 8002296:	2b00      	cmp	r3, #0
 8002298:	d104      	bne.n	80022a4 <osMessageQueueNew+0xac>
 800229a:	2300      	movs	r3, #0
 800229c:	623b      	str	r3, [r7, #32]
 800229e:	e001      	b.n	80022a4 <osMessageQueueNew+0xac>
 80022a0:	2300      	movs	r3, #0
 80022a2:	623b      	str	r3, [r7, #32]
 80022a4:	6a3b      	ldr	r3, [r7, #32]
 80022a6:	2b01      	cmp	r3, #1
 80022a8:	d10c      	bne.n	80022c4 <osMessageQueueNew+0xcc>
 80022aa:	687b      	ldr	r3, [r7, #4]
 80022ac:	691a      	ldr	r2, [r3, #16]
 80022ae:	687b      	ldr	r3, [r7, #4]
 80022b0:	6899      	ldr	r1, [r3, #8]
 80022b2:	2300      	movs	r3, #0
 80022b4:	9300      	str	r3, [sp, #0]
 80022b6:	460b      	mov	r3, r1
 80022b8:	68b9      	ldr	r1, [r7, #8]
 80022ba:	68f8      	ldr	r0, [r7, #12]
 80022bc:	f000 f96c 	bl	8002598 <xQueueGenericCreateStatic>
 80022c0:	6278      	str	r0, [r7, #36]	; 0x24
 80022c2:	e008      	b.n	80022d6 <osMessageQueueNew+0xde>
 80022c4:	6a3b      	ldr	r3, [r7, #32]
 80022c6:	2b00      	cmp	r3, #0
 80022c8:	d105      	bne.n	80022d6 <osMessageQueueNew+0xde>
 80022ca:	2200      	movs	r2, #0
 80022cc:	68b9      	ldr	r1, [r7, #8]
 80022ce:	68f8      	ldr	r0, [r7, #12]
 80022d0:	f000 f9d4 	bl	800267c <xQueueGenericCreate>
 80022d4:	6278      	str	r0, [r7, #36]	; 0x24
 80022d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80022d8:	2b00      	cmp	r3, #0
 80022da:	d00c      	beq.n	80022f6 <osMessageQueueNew+0xfe>
 80022dc:	687b      	ldr	r3, [r7, #4]
 80022de:	2b00      	cmp	r3, #0
 80022e0:	d003      	beq.n	80022ea <osMessageQueueNew+0xf2>
 80022e2:	687b      	ldr	r3, [r7, #4]
 80022e4:	681b      	ldr	r3, [r3, #0]
 80022e6:	61fb      	str	r3, [r7, #28]
 80022e8:	e001      	b.n	80022ee <osMessageQueueNew+0xf6>
 80022ea:	2300      	movs	r3, #0
 80022ec:	61fb      	str	r3, [r7, #28]
 80022ee:	69f9      	ldr	r1, [r7, #28]
 80022f0:	6a78      	ldr	r0, [r7, #36]	; 0x24
 80022f2:	f000 fdbb 	bl	8002e6c <vQueueAddToRegistry>
 80022f6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80022f8:	4618      	mov	r0, r3
 80022fa:	3728      	adds	r7, #40	; 0x28
 80022fc:	46bd      	mov	sp, r7
 80022fe:	bd80      	pop	{r7, pc}
 8002300:	200000d4 	.word	0x200000d4

08002304 <vApplicationGetIdleTaskMemory>:
 8002304:	b480      	push	{r7}
 8002306:	b085      	sub	sp, #20
 8002308:	af00      	add	r7, sp, #0
 800230a:	60f8      	str	r0, [r7, #12]
 800230c:	60b9      	str	r1, [r7, #8]
 800230e:	607a      	str	r2, [r7, #4]
 8002310:	68fb      	ldr	r3, [r7, #12]
 8002312:	4a06      	ldr	r2, [pc, #24]	; (800232c <vApplicationGetIdleTaskMemory+0x28>)
 8002314:	601a      	str	r2, [r3, #0]
 8002316:	68bb      	ldr	r3, [r7, #8]
 8002318:	4a05      	ldr	r2, [pc, #20]	; (8002330 <vApplicationGetIdleTaskMemory+0x2c>)
 800231a:	601a      	str	r2, [r3, #0]
 800231c:	687b      	ldr	r3, [r7, #4]
 800231e:	2280      	movs	r2, #128	; 0x80
 8002320:	601a      	str	r2, [r3, #0]
 8002322:	bf00      	nop
 8002324:	3714      	adds	r7, #20
 8002326:	46bd      	mov	sp, r7
 8002328:	bc80      	pop	{r7}
 800232a:	4770      	bx	lr
 800232c:	200000d8 	.word	0x200000d8
 8002330:	20000134 	.word	0x20000134

08002334 <vApplicationGetTimerTaskMemory>:
 8002334:	b480      	push	{r7}
 8002336:	b085      	sub	sp, #20
 8002338:	af00      	add	r7, sp, #0
 800233a:	60f8      	str	r0, [r7, #12]
 800233c:	60b9      	str	r1, [r7, #8]
 800233e:	607a      	str	r2, [r7, #4]
 8002340:	68fb      	ldr	r3, [r7, #12]
 8002342:	4a07      	ldr	r2, [pc, #28]	; (8002360 <vApplicationGetTimerTaskMemory+0x2c>)
 8002344:	601a      	str	r2, [r3, #0]
 8002346:	68bb      	ldr	r3, [r7, #8]
 8002348:	4a06      	ldr	r2, [pc, #24]	; (8002364 <vApplicationGetTimerTaskMemory+0x30>)
 800234a:	601a      	str	r2, [r3, #0]
 800234c:	687b      	ldr	r3, [r7, #4]
 800234e:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002352:	601a      	str	r2, [r3, #0]
 8002354:	bf00      	nop
 8002356:	3714      	adds	r7, #20
 8002358:	46bd      	mov	sp, r7
 800235a:	bc80      	pop	{r7}
 800235c:	4770      	bx	lr
 800235e:	bf00      	nop
 8002360:	20000334 	.word	0x20000334
 8002364:	20000390 	.word	0x20000390

08002368 <vListInitialise>:
 8002368:	b480      	push	{r7}
 800236a:	b083      	sub	sp, #12
 800236c:	af00      	add	r7, sp, #0
 800236e:	6078      	str	r0, [r7, #4]
 8002370:	687b      	ldr	r3, [r7, #4]
 8002372:	f103 0208 	add.w	r2, r3, #8
 8002376:	687b      	ldr	r3, [r7, #4]
 8002378:	605a      	str	r2, [r3, #4]
 800237a:	687b      	ldr	r3, [r7, #4]
 800237c:	f04f 32ff 	mov.w	r2, #4294967295
 8002380:	609a      	str	r2, [r3, #8]
 8002382:	687b      	ldr	r3, [r7, #4]
 8002384:	f103 0208 	add.w	r2, r3, #8
 8002388:	687b      	ldr	r3, [r7, #4]
 800238a:	60da      	str	r2, [r3, #12]
 800238c:	687b      	ldr	r3, [r7, #4]
 800238e:	f103 0208 	add.w	r2, r3, #8
 8002392:	687b      	ldr	r3, [r7, #4]
 8002394:	611a      	str	r2, [r3, #16]
 8002396:	687b      	ldr	r3, [r7, #4]
 8002398:	2200      	movs	r2, #0
 800239a:	601a      	str	r2, [r3, #0]
 800239c:	bf00      	nop
 800239e:	370c      	adds	r7, #12
 80023a0:	46bd      	mov	sp, r7
 80023a2:	bc80      	pop	{r7}
 80023a4:	4770      	bx	lr

080023a6 <vListInitialiseItem>:
 80023a6:	b480      	push	{r7}
 80023a8:	b083      	sub	sp, #12
 80023aa:	af00      	add	r7, sp, #0
 80023ac:	6078      	str	r0, [r7, #4]
 80023ae:	687b      	ldr	r3, [r7, #4]
 80023b0:	2200      	movs	r2, #0
 80023b2:	611a      	str	r2, [r3, #16]
 80023b4:	bf00      	nop
 80023b6:	370c      	adds	r7, #12
 80023b8:	46bd      	mov	sp, r7
 80023ba:	bc80      	pop	{r7}
 80023bc:	4770      	bx	lr

080023be <vListInsertEnd>:
 80023be:	b480      	push	{r7}
 80023c0:	b085      	sub	sp, #20
 80023c2:	af00      	add	r7, sp, #0
 80023c4:	6078      	str	r0, [r7, #4]
 80023c6:	6039      	str	r1, [r7, #0]
 80023c8:	687b      	ldr	r3, [r7, #4]
 80023ca:	685b      	ldr	r3, [r3, #4]
 80023cc:	60fb      	str	r3, [r7, #12]
 80023ce:	683b      	ldr	r3, [r7, #0]
 80023d0:	68fa      	ldr	r2, [r7, #12]
 80023d2:	605a      	str	r2, [r3, #4]
 80023d4:	68fb      	ldr	r3, [r7, #12]
 80023d6:	689a      	ldr	r2, [r3, #8]
 80023d8:	683b      	ldr	r3, [r7, #0]
 80023da:	609a      	str	r2, [r3, #8]
 80023dc:	68fb      	ldr	r3, [r7, #12]
 80023de:	689b      	ldr	r3, [r3, #8]
 80023e0:	683a      	ldr	r2, [r7, #0]
 80023e2:	605a      	str	r2, [r3, #4]
 80023e4:	68fb      	ldr	r3, [r7, #12]
 80023e6:	683a      	ldr	r2, [r7, #0]
 80023e8:	609a      	str	r2, [r3, #8]
 80023ea:	683b      	ldr	r3, [r7, #0]
 80023ec:	687a      	ldr	r2, [r7, #4]
 80023ee:	611a      	str	r2, [r3, #16]
 80023f0:	687b      	ldr	r3, [r7, #4]
 80023f2:	681b      	ldr	r3, [r3, #0]
 80023f4:	1c5a      	adds	r2, r3, #1
 80023f6:	687b      	ldr	r3, [r7, #4]
 80023f8:	601a      	str	r2, [r3, #0]
 80023fa:	bf00      	nop
 80023fc:	3714      	adds	r7, #20
 80023fe:	46bd      	mov	sp, r7
 8002400:	bc80      	pop	{r7}
 8002402:	4770      	bx	lr

08002404 <vListInsert>:
 8002404:	b480      	push	{r7}
 8002406:	b085      	sub	sp, #20
 8002408:	af00      	add	r7, sp, #0
 800240a:	6078      	str	r0, [r7, #4]
 800240c:	6039      	str	r1, [r7, #0]
 800240e:	683b      	ldr	r3, [r7, #0]
 8002410:	681b      	ldr	r3, [r3, #0]
 8002412:	60bb      	str	r3, [r7, #8]
 8002414:	68bb      	ldr	r3, [r7, #8]
 8002416:	f1b3 3fff 	cmp.w	r3, #4294967295
 800241a:	d103      	bne.n	8002424 <vListInsert+0x20>
 800241c:	687b      	ldr	r3, [r7, #4]
 800241e:	691b      	ldr	r3, [r3, #16]
 8002420:	60fb      	str	r3, [r7, #12]
 8002422:	e00c      	b.n	800243e <vListInsert+0x3a>
 8002424:	687b      	ldr	r3, [r7, #4]
 8002426:	3308      	adds	r3, #8
 8002428:	60fb      	str	r3, [r7, #12]
 800242a:	e002      	b.n	8002432 <vListInsert+0x2e>
 800242c:	68fb      	ldr	r3, [r7, #12]
 800242e:	685b      	ldr	r3, [r3, #4]
 8002430:	60fb      	str	r3, [r7, #12]
 8002432:	68fb      	ldr	r3, [r7, #12]
 8002434:	685b      	ldr	r3, [r3, #4]
 8002436:	681b      	ldr	r3, [r3, #0]
 8002438:	68ba      	ldr	r2, [r7, #8]
 800243a:	429a      	cmp	r2, r3
 800243c:	d2f6      	bcs.n	800242c <vListInsert+0x28>
 800243e:	68fb      	ldr	r3, [r7, #12]
 8002440:	685a      	ldr	r2, [r3, #4]
 8002442:	683b      	ldr	r3, [r7, #0]
 8002444:	605a      	str	r2, [r3, #4]
 8002446:	683b      	ldr	r3, [r7, #0]
 8002448:	685b      	ldr	r3, [r3, #4]
 800244a:	683a      	ldr	r2, [r7, #0]
 800244c:	609a      	str	r2, [r3, #8]
 800244e:	683b      	ldr	r3, [r7, #0]
 8002450:	68fa      	ldr	r2, [r7, #12]
 8002452:	609a      	str	r2, [r3, #8]
 8002454:	68fb      	ldr	r3, [r7, #12]
 8002456:	683a      	ldr	r2, [r7, #0]
 8002458:	605a      	str	r2, [r3, #4]
 800245a:	683b      	ldr	r3, [r7, #0]
 800245c:	687a      	ldr	r2, [r7, #4]
 800245e:	611a      	str	r2, [r3, #16]
 8002460:	687b      	ldr	r3, [r7, #4]
 8002462:	681b      	ldr	r3, [r3, #0]
 8002464:	1c5a      	adds	r2, r3, #1
 8002466:	687b      	ldr	r3, [r7, #4]
 8002468:	601a      	str	r2, [r3, #0]
 800246a:	bf00      	nop
 800246c:	3714      	adds	r7, #20
 800246e:	46bd      	mov	sp, r7
 8002470:	bc80      	pop	{r7}
 8002472:	4770      	bx	lr

08002474 <uxListRemove>:
 8002474:	b480      	push	{r7}
 8002476:	b085      	sub	sp, #20
 8002478:	af00      	add	r7, sp, #0
 800247a:	6078      	str	r0, [r7, #4]
 800247c:	687b      	ldr	r3, [r7, #4]
 800247e:	691b      	ldr	r3, [r3, #16]
 8002480:	60fb      	str	r3, [r7, #12]
 8002482:	687b      	ldr	r3, [r7, #4]
 8002484:	685b      	ldr	r3, [r3, #4]
 8002486:	687a      	ldr	r2, [r7, #4]
 8002488:	6892      	ldr	r2, [r2, #8]
 800248a:	609a      	str	r2, [r3, #8]
 800248c:	687b      	ldr	r3, [r7, #4]
 800248e:	689b      	ldr	r3, [r3, #8]
 8002490:	687a      	ldr	r2, [r7, #4]
 8002492:	6852      	ldr	r2, [r2, #4]
 8002494:	605a      	str	r2, [r3, #4]
 8002496:	68fb      	ldr	r3, [r7, #12]
 8002498:	685b      	ldr	r3, [r3, #4]
 800249a:	687a      	ldr	r2, [r7, #4]
 800249c:	429a      	cmp	r2, r3
 800249e:	d103      	bne.n	80024a8 <uxListRemove+0x34>
 80024a0:	687b      	ldr	r3, [r7, #4]
 80024a2:	689a      	ldr	r2, [r3, #8]
 80024a4:	68fb      	ldr	r3, [r7, #12]
 80024a6:	605a      	str	r2, [r3, #4]
 80024a8:	687b      	ldr	r3, [r7, #4]
 80024aa:	2200      	movs	r2, #0
 80024ac:	611a      	str	r2, [r3, #16]
 80024ae:	68fb      	ldr	r3, [r7, #12]
 80024b0:	681b      	ldr	r3, [r3, #0]
 80024b2:	1e5a      	subs	r2, r3, #1
 80024b4:	68fb      	ldr	r3, [r7, #12]
 80024b6:	601a      	str	r2, [r3, #0]
 80024b8:	68fb      	ldr	r3, [r7, #12]
 80024ba:	681b      	ldr	r3, [r3, #0]
 80024bc:	4618      	mov	r0, r3
 80024be:	3714      	adds	r7, #20
 80024c0:	46bd      	mov	sp, r7
 80024c2:	bc80      	pop	{r7}
 80024c4:	4770      	bx	lr
	...

080024c8 <xQueueGenericReset>:
 80024c8:	b580      	push	{r7, lr}
 80024ca:	b084      	sub	sp, #16
 80024cc:	af00      	add	r7, sp, #0
 80024ce:	6078      	str	r0, [r7, #4]
 80024d0:	6039      	str	r1, [r7, #0]
 80024d2:	687b      	ldr	r3, [r7, #4]
 80024d4:	60fb      	str	r3, [r7, #12]
 80024d6:	68fb      	ldr	r3, [r7, #12]
 80024d8:	2b00      	cmp	r3, #0
 80024da:	d109      	bne.n	80024f0 <xQueueGenericReset+0x28>
 80024dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80024e0:	f383 8811 	msr	BASEPRI, r3
 80024e4:	f3bf 8f6f 	isb	sy
 80024e8:	f3bf 8f4f 	dsb	sy
 80024ec:	60bb      	str	r3, [r7, #8]
 80024ee:	e7fe      	b.n	80024ee <xQueueGenericReset+0x26>
 80024f0:	f002 f812 	bl	8004518 <vPortEnterCritical>
 80024f4:	68fb      	ldr	r3, [r7, #12]
 80024f6:	681a      	ldr	r2, [r3, #0]
 80024f8:	68fb      	ldr	r3, [r7, #12]
 80024fa:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80024fc:	68f9      	ldr	r1, [r7, #12]
 80024fe:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8002500:	fb01 f303 	mul.w	r3, r1, r3
 8002504:	441a      	add	r2, r3
 8002506:	68fb      	ldr	r3, [r7, #12]
 8002508:	605a      	str	r2, [r3, #4]
 800250a:	68fb      	ldr	r3, [r7, #12]
 800250c:	2200      	movs	r2, #0
 800250e:	639a      	str	r2, [r3, #56]	; 0x38
 8002510:	68fb      	ldr	r3, [r7, #12]
 8002512:	681a      	ldr	r2, [r3, #0]
 8002514:	68fb      	ldr	r3, [r7, #12]
 8002516:	609a      	str	r2, [r3, #8]
 8002518:	68fb      	ldr	r3, [r7, #12]
 800251a:	681a      	ldr	r2, [r3, #0]
 800251c:	68fb      	ldr	r3, [r7, #12]
 800251e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002520:	3b01      	subs	r3, #1
 8002522:	68f9      	ldr	r1, [r7, #12]
 8002524:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8002526:	fb01 f303 	mul.w	r3, r1, r3
 800252a:	441a      	add	r2, r3
 800252c:	68fb      	ldr	r3, [r7, #12]
 800252e:	60da      	str	r2, [r3, #12]
 8002530:	68fb      	ldr	r3, [r7, #12]
 8002532:	22ff      	movs	r2, #255	; 0xff
 8002534:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002538:	68fb      	ldr	r3, [r7, #12]
 800253a:	22ff      	movs	r2, #255	; 0xff
 800253c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002540:	683b      	ldr	r3, [r7, #0]
 8002542:	2b00      	cmp	r3, #0
 8002544:	d114      	bne.n	8002570 <xQueueGenericReset+0xa8>
 8002546:	68fb      	ldr	r3, [r7, #12]
 8002548:	691b      	ldr	r3, [r3, #16]
 800254a:	2b00      	cmp	r3, #0
 800254c:	d01a      	beq.n	8002584 <xQueueGenericReset+0xbc>
 800254e:	68fb      	ldr	r3, [r7, #12]
 8002550:	3310      	adds	r3, #16
 8002552:	4618      	mov	r0, r3
 8002554:	f001 f954 	bl	8003800 <xTaskRemoveFromEventList>
 8002558:	4603      	mov	r3, r0
 800255a:	2b00      	cmp	r3, #0
 800255c:	d012      	beq.n	8002584 <xQueueGenericReset+0xbc>
 800255e:	4b0d      	ldr	r3, [pc, #52]	; (8002594 <xQueueGenericReset+0xcc>)
 8002560:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002564:	601a      	str	r2, [r3, #0]
 8002566:	f3bf 8f4f 	dsb	sy
 800256a:	f3bf 8f6f 	isb	sy
 800256e:	e009      	b.n	8002584 <xQueueGenericReset+0xbc>
 8002570:	68fb      	ldr	r3, [r7, #12]
 8002572:	3310      	adds	r3, #16
 8002574:	4618      	mov	r0, r3
 8002576:	f7ff fef7 	bl	8002368 <vListInitialise>
 800257a:	68fb      	ldr	r3, [r7, #12]
 800257c:	3324      	adds	r3, #36	; 0x24
 800257e:	4618      	mov	r0, r3
 8002580:	f7ff fef2 	bl	8002368 <vListInitialise>
 8002584:	f001 fff6 	bl	8004574 <vPortExitCritical>
 8002588:	2301      	movs	r3, #1
 800258a:	4618      	mov	r0, r3
 800258c:	3710      	adds	r7, #16
 800258e:	46bd      	mov	sp, r7
 8002590:	bd80      	pop	{r7, pc}
 8002592:	bf00      	nop
 8002594:	e000ed04 	.word	0xe000ed04

08002598 <xQueueGenericCreateStatic>:
 8002598:	b580      	push	{r7, lr}
 800259a:	b08e      	sub	sp, #56	; 0x38
 800259c:	af02      	add	r7, sp, #8
 800259e:	60f8      	str	r0, [r7, #12]
 80025a0:	60b9      	str	r1, [r7, #8]
 80025a2:	607a      	str	r2, [r7, #4]
 80025a4:	603b      	str	r3, [r7, #0]
 80025a6:	68fb      	ldr	r3, [r7, #12]
 80025a8:	2b00      	cmp	r3, #0
 80025aa:	d109      	bne.n	80025c0 <xQueueGenericCreateStatic+0x28>
 80025ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 80025b0:	f383 8811 	msr	BASEPRI, r3
 80025b4:	f3bf 8f6f 	isb	sy
 80025b8:	f3bf 8f4f 	dsb	sy
 80025bc:	62bb      	str	r3, [r7, #40]	; 0x28
 80025be:	e7fe      	b.n	80025be <xQueueGenericCreateStatic+0x26>
 80025c0:	683b      	ldr	r3, [r7, #0]
 80025c2:	2b00      	cmp	r3, #0
 80025c4:	d109      	bne.n	80025da <xQueueGenericCreateStatic+0x42>
 80025c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80025ca:	f383 8811 	msr	BASEPRI, r3
 80025ce:	f3bf 8f6f 	isb	sy
 80025d2:	f3bf 8f4f 	dsb	sy
 80025d6:	627b      	str	r3, [r7, #36]	; 0x24
 80025d8:	e7fe      	b.n	80025d8 <xQueueGenericCreateStatic+0x40>
 80025da:	687b      	ldr	r3, [r7, #4]
 80025dc:	2b00      	cmp	r3, #0
 80025de:	d002      	beq.n	80025e6 <xQueueGenericCreateStatic+0x4e>
 80025e0:	68bb      	ldr	r3, [r7, #8]
 80025e2:	2b00      	cmp	r3, #0
 80025e4:	d001      	beq.n	80025ea <xQueueGenericCreateStatic+0x52>
 80025e6:	2301      	movs	r3, #1
 80025e8:	e000      	b.n	80025ec <xQueueGenericCreateStatic+0x54>
 80025ea:	2300      	movs	r3, #0
 80025ec:	2b00      	cmp	r3, #0
 80025ee:	d109      	bne.n	8002604 <xQueueGenericCreateStatic+0x6c>
 80025f0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80025f4:	f383 8811 	msr	BASEPRI, r3
 80025f8:	f3bf 8f6f 	isb	sy
 80025fc:	f3bf 8f4f 	dsb	sy
 8002600:	623b      	str	r3, [r7, #32]
 8002602:	e7fe      	b.n	8002602 <xQueueGenericCreateStatic+0x6a>
 8002604:	687b      	ldr	r3, [r7, #4]
 8002606:	2b00      	cmp	r3, #0
 8002608:	d102      	bne.n	8002610 <xQueueGenericCreateStatic+0x78>
 800260a:	68bb      	ldr	r3, [r7, #8]
 800260c:	2b00      	cmp	r3, #0
 800260e:	d101      	bne.n	8002614 <xQueueGenericCreateStatic+0x7c>
 8002610:	2301      	movs	r3, #1
 8002612:	e000      	b.n	8002616 <xQueueGenericCreateStatic+0x7e>
 8002614:	2300      	movs	r3, #0
 8002616:	2b00      	cmp	r3, #0
 8002618:	d109      	bne.n	800262e <xQueueGenericCreateStatic+0x96>
 800261a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800261e:	f383 8811 	msr	BASEPRI, r3
 8002622:	f3bf 8f6f 	isb	sy
 8002626:	f3bf 8f4f 	dsb	sy
 800262a:	61fb      	str	r3, [r7, #28]
 800262c:	e7fe      	b.n	800262c <xQueueGenericCreateStatic+0x94>
 800262e:	2350      	movs	r3, #80	; 0x50
 8002630:	617b      	str	r3, [r7, #20]
 8002632:	697b      	ldr	r3, [r7, #20]
 8002634:	2b50      	cmp	r3, #80	; 0x50
 8002636:	d009      	beq.n	800264c <xQueueGenericCreateStatic+0xb4>
 8002638:	f04f 0350 	mov.w	r3, #80	; 0x50
 800263c:	f383 8811 	msr	BASEPRI, r3
 8002640:	f3bf 8f6f 	isb	sy
 8002644:	f3bf 8f4f 	dsb	sy
 8002648:	61bb      	str	r3, [r7, #24]
 800264a:	e7fe      	b.n	800264a <xQueueGenericCreateStatic+0xb2>
 800264c:	683b      	ldr	r3, [r7, #0]
 800264e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002650:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002652:	2b00      	cmp	r3, #0
 8002654:	d00d      	beq.n	8002672 <xQueueGenericCreateStatic+0xda>
 8002656:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002658:	2201      	movs	r2, #1
 800265a:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800265e:	f897 2038 	ldrb.w	r2, [r7, #56]	; 0x38
 8002662:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002664:	9300      	str	r3, [sp, #0]
 8002666:	4613      	mov	r3, r2
 8002668:	687a      	ldr	r2, [r7, #4]
 800266a:	68b9      	ldr	r1, [r7, #8]
 800266c:	68f8      	ldr	r0, [r7, #12]
 800266e:	f000 f842 	bl	80026f6 <prvInitialiseNewQueue>
 8002672:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002674:	4618      	mov	r0, r3
 8002676:	3730      	adds	r7, #48	; 0x30
 8002678:	46bd      	mov	sp, r7
 800267a:	bd80      	pop	{r7, pc}

0800267c <xQueueGenericCreate>:
 800267c:	b580      	push	{r7, lr}
 800267e:	b08a      	sub	sp, #40	; 0x28
 8002680:	af02      	add	r7, sp, #8
 8002682:	60f8      	str	r0, [r7, #12]
 8002684:	60b9      	str	r1, [r7, #8]
 8002686:	4613      	mov	r3, r2
 8002688:	71fb      	strb	r3, [r7, #7]
 800268a:	68fb      	ldr	r3, [r7, #12]
 800268c:	2b00      	cmp	r3, #0
 800268e:	d109      	bne.n	80026a4 <xQueueGenericCreate+0x28>
 8002690:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002694:	f383 8811 	msr	BASEPRI, r3
 8002698:	f3bf 8f6f 	isb	sy
 800269c:	f3bf 8f4f 	dsb	sy
 80026a0:	613b      	str	r3, [r7, #16]
 80026a2:	e7fe      	b.n	80026a2 <xQueueGenericCreate+0x26>
 80026a4:	68bb      	ldr	r3, [r7, #8]
 80026a6:	2b00      	cmp	r3, #0
 80026a8:	d102      	bne.n	80026b0 <xQueueGenericCreate+0x34>
 80026aa:	2300      	movs	r3, #0
 80026ac:	61fb      	str	r3, [r7, #28]
 80026ae:	e004      	b.n	80026ba <xQueueGenericCreate+0x3e>
 80026b0:	68fb      	ldr	r3, [r7, #12]
 80026b2:	68ba      	ldr	r2, [r7, #8]
 80026b4:	fb02 f303 	mul.w	r3, r2, r3
 80026b8:	61fb      	str	r3, [r7, #28]
 80026ba:	69fb      	ldr	r3, [r7, #28]
 80026bc:	3350      	adds	r3, #80	; 0x50
 80026be:	4618      	mov	r0, r3
 80026c0:	f002 f820 	bl	8004704 <pvPortMalloc>
 80026c4:	61b8      	str	r0, [r7, #24]
 80026c6:	69bb      	ldr	r3, [r7, #24]
 80026c8:	2b00      	cmp	r3, #0
 80026ca:	d00f      	beq.n	80026ec <xQueueGenericCreate+0x70>
 80026cc:	69bb      	ldr	r3, [r7, #24]
 80026ce:	3350      	adds	r3, #80	; 0x50
 80026d0:	617b      	str	r3, [r7, #20]
 80026d2:	69bb      	ldr	r3, [r7, #24]
 80026d4:	2200      	movs	r2, #0
 80026d6:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80026da:	79fa      	ldrb	r2, [r7, #7]
 80026dc:	69bb      	ldr	r3, [r7, #24]
 80026de:	9300      	str	r3, [sp, #0]
 80026e0:	4613      	mov	r3, r2
 80026e2:	697a      	ldr	r2, [r7, #20]
 80026e4:	68b9      	ldr	r1, [r7, #8]
 80026e6:	68f8      	ldr	r0, [r7, #12]
 80026e8:	f000 f805 	bl	80026f6 <prvInitialiseNewQueue>
 80026ec:	69bb      	ldr	r3, [r7, #24]
 80026ee:	4618      	mov	r0, r3
 80026f0:	3720      	adds	r7, #32
 80026f2:	46bd      	mov	sp, r7
 80026f4:	bd80      	pop	{r7, pc}

080026f6 <prvInitialiseNewQueue>:
 80026f6:	b580      	push	{r7, lr}
 80026f8:	b084      	sub	sp, #16
 80026fa:	af00      	add	r7, sp, #0
 80026fc:	60f8      	str	r0, [r7, #12]
 80026fe:	60b9      	str	r1, [r7, #8]
 8002700:	607a      	str	r2, [r7, #4]
 8002702:	70fb      	strb	r3, [r7, #3]
 8002704:	68bb      	ldr	r3, [r7, #8]
 8002706:	2b00      	cmp	r3, #0
 8002708:	d103      	bne.n	8002712 <prvInitialiseNewQueue+0x1c>
 800270a:	69bb      	ldr	r3, [r7, #24]
 800270c:	69ba      	ldr	r2, [r7, #24]
 800270e:	601a      	str	r2, [r3, #0]
 8002710:	e002      	b.n	8002718 <prvInitialiseNewQueue+0x22>
 8002712:	69bb      	ldr	r3, [r7, #24]
 8002714:	687a      	ldr	r2, [r7, #4]
 8002716:	601a      	str	r2, [r3, #0]
 8002718:	69bb      	ldr	r3, [r7, #24]
 800271a:	68fa      	ldr	r2, [r7, #12]
 800271c:	63da      	str	r2, [r3, #60]	; 0x3c
 800271e:	69bb      	ldr	r3, [r7, #24]
 8002720:	68ba      	ldr	r2, [r7, #8]
 8002722:	641a      	str	r2, [r3, #64]	; 0x40
 8002724:	2101      	movs	r1, #1
 8002726:	69b8      	ldr	r0, [r7, #24]
 8002728:	f7ff fece 	bl	80024c8 <xQueueGenericReset>
 800272c:	69bb      	ldr	r3, [r7, #24]
 800272e:	78fa      	ldrb	r2, [r7, #3]
 8002730:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 8002734:	bf00      	nop
 8002736:	3710      	adds	r7, #16
 8002738:	46bd      	mov	sp, r7
 800273a:	bd80      	pop	{r7, pc}

0800273c <xQueueGenericSend>:
 800273c:	b580      	push	{r7, lr}
 800273e:	b08e      	sub	sp, #56	; 0x38
 8002740:	af00      	add	r7, sp, #0
 8002742:	60f8      	str	r0, [r7, #12]
 8002744:	60b9      	str	r1, [r7, #8]
 8002746:	607a      	str	r2, [r7, #4]
 8002748:	603b      	str	r3, [r7, #0]
 800274a:	2300      	movs	r3, #0
 800274c:	637b      	str	r3, [r7, #52]	; 0x34
 800274e:	68fb      	ldr	r3, [r7, #12]
 8002750:	633b      	str	r3, [r7, #48]	; 0x30
 8002752:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002754:	2b00      	cmp	r3, #0
 8002756:	d109      	bne.n	800276c <xQueueGenericSend+0x30>
 8002758:	f04f 0350 	mov.w	r3, #80	; 0x50
 800275c:	f383 8811 	msr	BASEPRI, r3
 8002760:	f3bf 8f6f 	isb	sy
 8002764:	f3bf 8f4f 	dsb	sy
 8002768:	62bb      	str	r3, [r7, #40]	; 0x28
 800276a:	e7fe      	b.n	800276a <xQueueGenericSend+0x2e>
 800276c:	68bb      	ldr	r3, [r7, #8]
 800276e:	2b00      	cmp	r3, #0
 8002770:	d103      	bne.n	800277a <xQueueGenericSend+0x3e>
 8002772:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002774:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002776:	2b00      	cmp	r3, #0
 8002778:	d101      	bne.n	800277e <xQueueGenericSend+0x42>
 800277a:	2301      	movs	r3, #1
 800277c:	e000      	b.n	8002780 <xQueueGenericSend+0x44>
 800277e:	2300      	movs	r3, #0
 8002780:	2b00      	cmp	r3, #0
 8002782:	d109      	bne.n	8002798 <xQueueGenericSend+0x5c>
 8002784:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002788:	f383 8811 	msr	BASEPRI, r3
 800278c:	f3bf 8f6f 	isb	sy
 8002790:	f3bf 8f4f 	dsb	sy
 8002794:	627b      	str	r3, [r7, #36]	; 0x24
 8002796:	e7fe      	b.n	8002796 <xQueueGenericSend+0x5a>
 8002798:	683b      	ldr	r3, [r7, #0]
 800279a:	2b02      	cmp	r3, #2
 800279c:	d103      	bne.n	80027a6 <xQueueGenericSend+0x6a>
 800279e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80027a0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80027a2:	2b01      	cmp	r3, #1
 80027a4:	d101      	bne.n	80027aa <xQueueGenericSend+0x6e>
 80027a6:	2301      	movs	r3, #1
 80027a8:	e000      	b.n	80027ac <xQueueGenericSend+0x70>
 80027aa:	2300      	movs	r3, #0
 80027ac:	2b00      	cmp	r3, #0
 80027ae:	d109      	bne.n	80027c4 <xQueueGenericSend+0x88>
 80027b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80027b4:	f383 8811 	msr	BASEPRI, r3
 80027b8:	f3bf 8f6f 	isb	sy
 80027bc:	f3bf 8f4f 	dsb	sy
 80027c0:	623b      	str	r3, [r7, #32]
 80027c2:	e7fe      	b.n	80027c2 <xQueueGenericSend+0x86>
 80027c4:	f001 f9d6 	bl	8003b74 <xTaskGetSchedulerState>
 80027c8:	4603      	mov	r3, r0
 80027ca:	2b00      	cmp	r3, #0
 80027cc:	d102      	bne.n	80027d4 <xQueueGenericSend+0x98>
 80027ce:	687b      	ldr	r3, [r7, #4]
 80027d0:	2b00      	cmp	r3, #0
 80027d2:	d101      	bne.n	80027d8 <xQueueGenericSend+0x9c>
 80027d4:	2301      	movs	r3, #1
 80027d6:	e000      	b.n	80027da <xQueueGenericSend+0x9e>
 80027d8:	2300      	movs	r3, #0
 80027da:	2b00      	cmp	r3, #0
 80027dc:	d109      	bne.n	80027f2 <xQueueGenericSend+0xb6>
 80027de:	f04f 0350 	mov.w	r3, #80	; 0x50
 80027e2:	f383 8811 	msr	BASEPRI, r3
 80027e6:	f3bf 8f6f 	isb	sy
 80027ea:	f3bf 8f4f 	dsb	sy
 80027ee:	61fb      	str	r3, [r7, #28]
 80027f0:	e7fe      	b.n	80027f0 <xQueueGenericSend+0xb4>
 80027f2:	f001 fe91 	bl	8004518 <vPortEnterCritical>
 80027f6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80027f8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80027fa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80027fc:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80027fe:	429a      	cmp	r2, r3
 8002800:	d302      	bcc.n	8002808 <xQueueGenericSend+0xcc>
 8002802:	683b      	ldr	r3, [r7, #0]
 8002804:	2b02      	cmp	r3, #2
 8002806:	d129      	bne.n	800285c <xQueueGenericSend+0x120>
 8002808:	683a      	ldr	r2, [r7, #0]
 800280a:	68b9      	ldr	r1, [r7, #8]
 800280c:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800280e:	f000 fa1c 	bl	8002c4a <prvCopyDataToQueue>
 8002812:	62f8      	str	r0, [r7, #44]	; 0x2c
 8002814:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002816:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002818:	2b00      	cmp	r3, #0
 800281a:	d010      	beq.n	800283e <xQueueGenericSend+0x102>
 800281c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800281e:	3324      	adds	r3, #36	; 0x24
 8002820:	4618      	mov	r0, r3
 8002822:	f000 ffed 	bl	8003800 <xTaskRemoveFromEventList>
 8002826:	4603      	mov	r3, r0
 8002828:	2b00      	cmp	r3, #0
 800282a:	d013      	beq.n	8002854 <xQueueGenericSend+0x118>
 800282c:	4b3f      	ldr	r3, [pc, #252]	; (800292c <xQueueGenericSend+0x1f0>)
 800282e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002832:	601a      	str	r2, [r3, #0]
 8002834:	f3bf 8f4f 	dsb	sy
 8002838:	f3bf 8f6f 	isb	sy
 800283c:	e00a      	b.n	8002854 <xQueueGenericSend+0x118>
 800283e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002840:	2b00      	cmp	r3, #0
 8002842:	d007      	beq.n	8002854 <xQueueGenericSend+0x118>
 8002844:	4b39      	ldr	r3, [pc, #228]	; (800292c <xQueueGenericSend+0x1f0>)
 8002846:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800284a:	601a      	str	r2, [r3, #0]
 800284c:	f3bf 8f4f 	dsb	sy
 8002850:	f3bf 8f6f 	isb	sy
 8002854:	f001 fe8e 	bl	8004574 <vPortExitCritical>
 8002858:	2301      	movs	r3, #1
 800285a:	e063      	b.n	8002924 <xQueueGenericSend+0x1e8>
 800285c:	687b      	ldr	r3, [r7, #4]
 800285e:	2b00      	cmp	r3, #0
 8002860:	d103      	bne.n	800286a <xQueueGenericSend+0x12e>
 8002862:	f001 fe87 	bl	8004574 <vPortExitCritical>
 8002866:	2300      	movs	r3, #0
 8002868:	e05c      	b.n	8002924 <xQueueGenericSend+0x1e8>
 800286a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800286c:	2b00      	cmp	r3, #0
 800286e:	d106      	bne.n	800287e <xQueueGenericSend+0x142>
 8002870:	f107 0314 	add.w	r3, r7, #20
 8002874:	4618      	mov	r0, r3
 8002876:	f001 f825 	bl	80038c4 <vTaskInternalSetTimeOutState>
 800287a:	2301      	movs	r3, #1
 800287c:	637b      	str	r3, [r7, #52]	; 0x34
 800287e:	f001 fe79 	bl	8004574 <vPortExitCritical>
 8002882:	f000 fd7b 	bl	800337c <vTaskSuspendAll>
 8002886:	f001 fe47 	bl	8004518 <vPortEnterCritical>
 800288a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800288c:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8002890:	b25b      	sxtb	r3, r3
 8002892:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002896:	d103      	bne.n	80028a0 <xQueueGenericSend+0x164>
 8002898:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800289a:	2200      	movs	r2, #0
 800289c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80028a0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80028a2:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 80028a6:	b25b      	sxtb	r3, r3
 80028a8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80028ac:	d103      	bne.n	80028b6 <xQueueGenericSend+0x17a>
 80028ae:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80028b0:	2200      	movs	r2, #0
 80028b2:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80028b6:	f001 fe5d 	bl	8004574 <vPortExitCritical>
 80028ba:	1d3a      	adds	r2, r7, #4
 80028bc:	f107 0314 	add.w	r3, r7, #20
 80028c0:	4611      	mov	r1, r2
 80028c2:	4618      	mov	r0, r3
 80028c4:	f001 f814 	bl	80038f0 <xTaskCheckForTimeOut>
 80028c8:	4603      	mov	r3, r0
 80028ca:	2b00      	cmp	r3, #0
 80028cc:	d124      	bne.n	8002918 <xQueueGenericSend+0x1dc>
 80028ce:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80028d0:	f000 fab3 	bl	8002e3a <prvIsQueueFull>
 80028d4:	4603      	mov	r3, r0
 80028d6:	2b00      	cmp	r3, #0
 80028d8:	d018      	beq.n	800290c <xQueueGenericSend+0x1d0>
 80028da:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80028dc:	3310      	adds	r3, #16
 80028de:	687a      	ldr	r2, [r7, #4]
 80028e0:	4611      	mov	r1, r2
 80028e2:	4618      	mov	r0, r3
 80028e4:	f000 ff3e 	bl	8003764 <vTaskPlaceOnEventList>
 80028e8:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80028ea:	f000 fa3e 	bl	8002d6a <prvUnlockQueue>
 80028ee:	f000 fd53 	bl	8003398 <xTaskResumeAll>
 80028f2:	4603      	mov	r3, r0
 80028f4:	2b00      	cmp	r3, #0
 80028f6:	f47f af7c 	bne.w	80027f2 <xQueueGenericSend+0xb6>
 80028fa:	4b0c      	ldr	r3, [pc, #48]	; (800292c <xQueueGenericSend+0x1f0>)
 80028fc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002900:	601a      	str	r2, [r3, #0]
 8002902:	f3bf 8f4f 	dsb	sy
 8002906:	f3bf 8f6f 	isb	sy
 800290a:	e772      	b.n	80027f2 <xQueueGenericSend+0xb6>
 800290c:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800290e:	f000 fa2c 	bl	8002d6a <prvUnlockQueue>
 8002912:	f000 fd41 	bl	8003398 <xTaskResumeAll>
 8002916:	e76c      	b.n	80027f2 <xQueueGenericSend+0xb6>
 8002918:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800291a:	f000 fa26 	bl	8002d6a <prvUnlockQueue>
 800291e:	f000 fd3b 	bl	8003398 <xTaskResumeAll>
 8002922:	2300      	movs	r3, #0
 8002924:	4618      	mov	r0, r3
 8002926:	3738      	adds	r7, #56	; 0x38
 8002928:	46bd      	mov	sp, r7
 800292a:	bd80      	pop	{r7, pc}
 800292c:	e000ed04 	.word	0xe000ed04

08002930 <xQueueGenericSendFromISR>:
 8002930:	b580      	push	{r7, lr}
 8002932:	b08e      	sub	sp, #56	; 0x38
 8002934:	af00      	add	r7, sp, #0
 8002936:	60f8      	str	r0, [r7, #12]
 8002938:	60b9      	str	r1, [r7, #8]
 800293a:	607a      	str	r2, [r7, #4]
 800293c:	603b      	str	r3, [r7, #0]
 800293e:	68fb      	ldr	r3, [r7, #12]
 8002940:	633b      	str	r3, [r7, #48]	; 0x30
 8002942:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002944:	2b00      	cmp	r3, #0
 8002946:	d109      	bne.n	800295c <xQueueGenericSendFromISR+0x2c>
 8002948:	f04f 0350 	mov.w	r3, #80	; 0x50
 800294c:	f383 8811 	msr	BASEPRI, r3
 8002950:	f3bf 8f6f 	isb	sy
 8002954:	f3bf 8f4f 	dsb	sy
 8002958:	627b      	str	r3, [r7, #36]	; 0x24
 800295a:	e7fe      	b.n	800295a <xQueueGenericSendFromISR+0x2a>
 800295c:	68bb      	ldr	r3, [r7, #8]
 800295e:	2b00      	cmp	r3, #0
 8002960:	d103      	bne.n	800296a <xQueueGenericSendFromISR+0x3a>
 8002962:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002964:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002966:	2b00      	cmp	r3, #0
 8002968:	d101      	bne.n	800296e <xQueueGenericSendFromISR+0x3e>
 800296a:	2301      	movs	r3, #1
 800296c:	e000      	b.n	8002970 <xQueueGenericSendFromISR+0x40>
 800296e:	2300      	movs	r3, #0
 8002970:	2b00      	cmp	r3, #0
 8002972:	d109      	bne.n	8002988 <xQueueGenericSendFromISR+0x58>
 8002974:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002978:	f383 8811 	msr	BASEPRI, r3
 800297c:	f3bf 8f6f 	isb	sy
 8002980:	f3bf 8f4f 	dsb	sy
 8002984:	623b      	str	r3, [r7, #32]
 8002986:	e7fe      	b.n	8002986 <xQueueGenericSendFromISR+0x56>
 8002988:	683b      	ldr	r3, [r7, #0]
 800298a:	2b02      	cmp	r3, #2
 800298c:	d103      	bne.n	8002996 <xQueueGenericSendFromISR+0x66>
 800298e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002990:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002992:	2b01      	cmp	r3, #1
 8002994:	d101      	bne.n	800299a <xQueueGenericSendFromISR+0x6a>
 8002996:	2301      	movs	r3, #1
 8002998:	e000      	b.n	800299c <xQueueGenericSendFromISR+0x6c>
 800299a:	2300      	movs	r3, #0
 800299c:	2b00      	cmp	r3, #0
 800299e:	d109      	bne.n	80029b4 <xQueueGenericSendFromISR+0x84>
 80029a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80029a4:	f383 8811 	msr	BASEPRI, r3
 80029a8:	f3bf 8f6f 	isb	sy
 80029ac:	f3bf 8f4f 	dsb	sy
 80029b0:	61fb      	str	r3, [r7, #28]
 80029b2:	e7fe      	b.n	80029b2 <xQueueGenericSendFromISR+0x82>
 80029b4:	f001 fe6a 	bl	800468c <vPortValidateInterruptPriority>
 80029b8:	f3ef 8211 	mrs	r2, BASEPRI
 80029bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80029c0:	f383 8811 	msr	BASEPRI, r3
 80029c4:	f3bf 8f6f 	isb	sy
 80029c8:	f3bf 8f4f 	dsb	sy
 80029cc:	61ba      	str	r2, [r7, #24]
 80029ce:	617b      	str	r3, [r7, #20]
 80029d0:	69bb      	ldr	r3, [r7, #24]
 80029d2:	62fb      	str	r3, [r7, #44]	; 0x2c
 80029d4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80029d6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80029d8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80029da:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80029dc:	429a      	cmp	r2, r3
 80029de:	d302      	bcc.n	80029e6 <xQueueGenericSendFromISR+0xb6>
 80029e0:	683b      	ldr	r3, [r7, #0]
 80029e2:	2b02      	cmp	r3, #2
 80029e4:	d12c      	bne.n	8002a40 <xQueueGenericSendFromISR+0x110>
 80029e6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80029e8:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 80029ec:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80029f0:	683a      	ldr	r2, [r7, #0]
 80029f2:	68b9      	ldr	r1, [r7, #8]
 80029f4:	6b38      	ldr	r0, [r7, #48]	; 0x30
 80029f6:	f000 f928 	bl	8002c4a <prvCopyDataToQueue>
 80029fa:	f997 302b 	ldrsb.w	r3, [r7, #43]	; 0x2b
 80029fe:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002a02:	d112      	bne.n	8002a2a <xQueueGenericSendFromISR+0xfa>
 8002a04:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002a06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002a08:	2b00      	cmp	r3, #0
 8002a0a:	d016      	beq.n	8002a3a <xQueueGenericSendFromISR+0x10a>
 8002a0c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002a0e:	3324      	adds	r3, #36	; 0x24
 8002a10:	4618      	mov	r0, r3
 8002a12:	f000 fef5 	bl	8003800 <xTaskRemoveFromEventList>
 8002a16:	4603      	mov	r3, r0
 8002a18:	2b00      	cmp	r3, #0
 8002a1a:	d00e      	beq.n	8002a3a <xQueueGenericSendFromISR+0x10a>
 8002a1c:	687b      	ldr	r3, [r7, #4]
 8002a1e:	2b00      	cmp	r3, #0
 8002a20:	d00b      	beq.n	8002a3a <xQueueGenericSendFromISR+0x10a>
 8002a22:	687b      	ldr	r3, [r7, #4]
 8002a24:	2201      	movs	r2, #1
 8002a26:	601a      	str	r2, [r3, #0]
 8002a28:	e007      	b.n	8002a3a <xQueueGenericSendFromISR+0x10a>
 8002a2a:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8002a2e:	3301      	adds	r3, #1
 8002a30:	b2db      	uxtb	r3, r3
 8002a32:	b25a      	sxtb	r2, r3
 8002a34:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002a36:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002a3a:	2301      	movs	r3, #1
 8002a3c:	637b      	str	r3, [r7, #52]	; 0x34
 8002a3e:	e001      	b.n	8002a44 <xQueueGenericSendFromISR+0x114>
 8002a40:	2300      	movs	r3, #0
 8002a42:	637b      	str	r3, [r7, #52]	; 0x34
 8002a44:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002a46:	613b      	str	r3, [r7, #16]
 8002a48:	693b      	ldr	r3, [r7, #16]
 8002a4a:	f383 8811 	msr	BASEPRI, r3
 8002a4e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002a50:	4618      	mov	r0, r3
 8002a52:	3738      	adds	r7, #56	; 0x38
 8002a54:	46bd      	mov	sp, r7
 8002a56:	bd80      	pop	{r7, pc}

08002a58 <xQueueReceive>:
 8002a58:	b580      	push	{r7, lr}
 8002a5a:	b08c      	sub	sp, #48	; 0x30
 8002a5c:	af00      	add	r7, sp, #0
 8002a5e:	60f8      	str	r0, [r7, #12]
 8002a60:	60b9      	str	r1, [r7, #8]
 8002a62:	607a      	str	r2, [r7, #4]
 8002a64:	2300      	movs	r3, #0
 8002a66:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002a68:	68fb      	ldr	r3, [r7, #12]
 8002a6a:	62bb      	str	r3, [r7, #40]	; 0x28
 8002a6c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002a6e:	2b00      	cmp	r3, #0
 8002a70:	d109      	bne.n	8002a86 <xQueueReceive+0x2e>
 8002a72:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002a76:	f383 8811 	msr	BASEPRI, r3
 8002a7a:	f3bf 8f6f 	isb	sy
 8002a7e:	f3bf 8f4f 	dsb	sy
 8002a82:	623b      	str	r3, [r7, #32]
 8002a84:	e7fe      	b.n	8002a84 <xQueueReceive+0x2c>
 8002a86:	68bb      	ldr	r3, [r7, #8]
 8002a88:	2b00      	cmp	r3, #0
 8002a8a:	d103      	bne.n	8002a94 <xQueueReceive+0x3c>
 8002a8c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002a8e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002a90:	2b00      	cmp	r3, #0
 8002a92:	d101      	bne.n	8002a98 <xQueueReceive+0x40>
 8002a94:	2301      	movs	r3, #1
 8002a96:	e000      	b.n	8002a9a <xQueueReceive+0x42>
 8002a98:	2300      	movs	r3, #0
 8002a9a:	2b00      	cmp	r3, #0
 8002a9c:	d109      	bne.n	8002ab2 <xQueueReceive+0x5a>
 8002a9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002aa2:	f383 8811 	msr	BASEPRI, r3
 8002aa6:	f3bf 8f6f 	isb	sy
 8002aaa:	f3bf 8f4f 	dsb	sy
 8002aae:	61fb      	str	r3, [r7, #28]
 8002ab0:	e7fe      	b.n	8002ab0 <xQueueReceive+0x58>
 8002ab2:	f001 f85f 	bl	8003b74 <xTaskGetSchedulerState>
 8002ab6:	4603      	mov	r3, r0
 8002ab8:	2b00      	cmp	r3, #0
 8002aba:	d102      	bne.n	8002ac2 <xQueueReceive+0x6a>
 8002abc:	687b      	ldr	r3, [r7, #4]
 8002abe:	2b00      	cmp	r3, #0
 8002ac0:	d101      	bne.n	8002ac6 <xQueueReceive+0x6e>
 8002ac2:	2301      	movs	r3, #1
 8002ac4:	e000      	b.n	8002ac8 <xQueueReceive+0x70>
 8002ac6:	2300      	movs	r3, #0
 8002ac8:	2b00      	cmp	r3, #0
 8002aca:	d109      	bne.n	8002ae0 <xQueueReceive+0x88>
 8002acc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002ad0:	f383 8811 	msr	BASEPRI, r3
 8002ad4:	f3bf 8f6f 	isb	sy
 8002ad8:	f3bf 8f4f 	dsb	sy
 8002adc:	61bb      	str	r3, [r7, #24]
 8002ade:	e7fe      	b.n	8002ade <xQueueReceive+0x86>
 8002ae0:	f001 fd1a 	bl	8004518 <vPortEnterCritical>
 8002ae4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002ae6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002ae8:	627b      	str	r3, [r7, #36]	; 0x24
 8002aea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002aec:	2b00      	cmp	r3, #0
 8002aee:	d01f      	beq.n	8002b30 <xQueueReceive+0xd8>
 8002af0:	68b9      	ldr	r1, [r7, #8]
 8002af2:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8002af4:	f000 f913 	bl	8002d1e <prvCopyDataFromQueue>
 8002af8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002afa:	1e5a      	subs	r2, r3, #1
 8002afc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002afe:	639a      	str	r2, [r3, #56]	; 0x38
 8002b00:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002b02:	691b      	ldr	r3, [r3, #16]
 8002b04:	2b00      	cmp	r3, #0
 8002b06:	d00f      	beq.n	8002b28 <xQueueReceive+0xd0>
 8002b08:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002b0a:	3310      	adds	r3, #16
 8002b0c:	4618      	mov	r0, r3
 8002b0e:	f000 fe77 	bl	8003800 <xTaskRemoveFromEventList>
 8002b12:	4603      	mov	r3, r0
 8002b14:	2b00      	cmp	r3, #0
 8002b16:	d007      	beq.n	8002b28 <xQueueReceive+0xd0>
 8002b18:	4b3c      	ldr	r3, [pc, #240]	; (8002c0c <xQueueReceive+0x1b4>)
 8002b1a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002b1e:	601a      	str	r2, [r3, #0]
 8002b20:	f3bf 8f4f 	dsb	sy
 8002b24:	f3bf 8f6f 	isb	sy
 8002b28:	f001 fd24 	bl	8004574 <vPortExitCritical>
 8002b2c:	2301      	movs	r3, #1
 8002b2e:	e069      	b.n	8002c04 <xQueueReceive+0x1ac>
 8002b30:	687b      	ldr	r3, [r7, #4]
 8002b32:	2b00      	cmp	r3, #0
 8002b34:	d103      	bne.n	8002b3e <xQueueReceive+0xe6>
 8002b36:	f001 fd1d 	bl	8004574 <vPortExitCritical>
 8002b3a:	2300      	movs	r3, #0
 8002b3c:	e062      	b.n	8002c04 <xQueueReceive+0x1ac>
 8002b3e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8002b40:	2b00      	cmp	r3, #0
 8002b42:	d106      	bne.n	8002b52 <xQueueReceive+0xfa>
 8002b44:	f107 0310 	add.w	r3, r7, #16
 8002b48:	4618      	mov	r0, r3
 8002b4a:	f000 febb 	bl	80038c4 <vTaskInternalSetTimeOutState>
 8002b4e:	2301      	movs	r3, #1
 8002b50:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002b52:	f001 fd0f 	bl	8004574 <vPortExitCritical>
 8002b56:	f000 fc11 	bl	800337c <vTaskSuspendAll>
 8002b5a:	f001 fcdd 	bl	8004518 <vPortEnterCritical>
 8002b5e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002b60:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8002b64:	b25b      	sxtb	r3, r3
 8002b66:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002b6a:	d103      	bne.n	8002b74 <xQueueReceive+0x11c>
 8002b6c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002b6e:	2200      	movs	r2, #0
 8002b70:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002b74:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002b76:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8002b7a:	b25b      	sxtb	r3, r3
 8002b7c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002b80:	d103      	bne.n	8002b8a <xQueueReceive+0x132>
 8002b82:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002b84:	2200      	movs	r2, #0
 8002b86:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002b8a:	f001 fcf3 	bl	8004574 <vPortExitCritical>
 8002b8e:	1d3a      	adds	r2, r7, #4
 8002b90:	f107 0310 	add.w	r3, r7, #16
 8002b94:	4611      	mov	r1, r2
 8002b96:	4618      	mov	r0, r3
 8002b98:	f000 feaa 	bl	80038f0 <xTaskCheckForTimeOut>
 8002b9c:	4603      	mov	r3, r0
 8002b9e:	2b00      	cmp	r3, #0
 8002ba0:	d123      	bne.n	8002bea <xQueueReceive+0x192>
 8002ba2:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8002ba4:	f000 f933 	bl	8002e0e <prvIsQueueEmpty>
 8002ba8:	4603      	mov	r3, r0
 8002baa:	2b00      	cmp	r3, #0
 8002bac:	d017      	beq.n	8002bde <xQueueReceive+0x186>
 8002bae:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8002bb0:	3324      	adds	r3, #36	; 0x24
 8002bb2:	687a      	ldr	r2, [r7, #4]
 8002bb4:	4611      	mov	r1, r2
 8002bb6:	4618      	mov	r0, r3
 8002bb8:	f000 fdd4 	bl	8003764 <vTaskPlaceOnEventList>
 8002bbc:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8002bbe:	f000 f8d4 	bl	8002d6a <prvUnlockQueue>
 8002bc2:	f000 fbe9 	bl	8003398 <xTaskResumeAll>
 8002bc6:	4603      	mov	r3, r0
 8002bc8:	2b00      	cmp	r3, #0
 8002bca:	d189      	bne.n	8002ae0 <xQueueReceive+0x88>
 8002bcc:	4b0f      	ldr	r3, [pc, #60]	; (8002c0c <xQueueReceive+0x1b4>)
 8002bce:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8002bd2:	601a      	str	r2, [r3, #0]
 8002bd4:	f3bf 8f4f 	dsb	sy
 8002bd8:	f3bf 8f6f 	isb	sy
 8002bdc:	e780      	b.n	8002ae0 <xQueueReceive+0x88>
 8002bde:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8002be0:	f000 f8c3 	bl	8002d6a <prvUnlockQueue>
 8002be4:	f000 fbd8 	bl	8003398 <xTaskResumeAll>
 8002be8:	e77a      	b.n	8002ae0 <xQueueReceive+0x88>
 8002bea:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8002bec:	f000 f8bd 	bl	8002d6a <prvUnlockQueue>
 8002bf0:	f000 fbd2 	bl	8003398 <xTaskResumeAll>
 8002bf4:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8002bf6:	f000 f90a 	bl	8002e0e <prvIsQueueEmpty>
 8002bfa:	4603      	mov	r3, r0
 8002bfc:	2b00      	cmp	r3, #0
 8002bfe:	f43f af6f 	beq.w	8002ae0 <xQueueReceive+0x88>
 8002c02:	2300      	movs	r3, #0
 8002c04:	4618      	mov	r0, r3
 8002c06:	3730      	adds	r7, #48	; 0x30
 8002c08:	46bd      	mov	sp, r7
 8002c0a:	bd80      	pop	{r7, pc}
 8002c0c:	e000ed04 	.word	0xe000ed04

08002c10 <uxQueueMessagesWaiting>:
 8002c10:	b580      	push	{r7, lr}
 8002c12:	b084      	sub	sp, #16
 8002c14:	af00      	add	r7, sp, #0
 8002c16:	6078      	str	r0, [r7, #4]
 8002c18:	687b      	ldr	r3, [r7, #4]
 8002c1a:	2b00      	cmp	r3, #0
 8002c1c:	d109      	bne.n	8002c32 <uxQueueMessagesWaiting+0x22>
 8002c1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002c22:	f383 8811 	msr	BASEPRI, r3
 8002c26:	f3bf 8f6f 	isb	sy
 8002c2a:	f3bf 8f4f 	dsb	sy
 8002c2e:	60bb      	str	r3, [r7, #8]
 8002c30:	e7fe      	b.n	8002c30 <uxQueueMessagesWaiting+0x20>
 8002c32:	f001 fc71 	bl	8004518 <vPortEnterCritical>
 8002c36:	687b      	ldr	r3, [r7, #4]
 8002c38:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002c3a:	60fb      	str	r3, [r7, #12]
 8002c3c:	f001 fc9a 	bl	8004574 <vPortExitCritical>
 8002c40:	68fb      	ldr	r3, [r7, #12]
 8002c42:	4618      	mov	r0, r3
 8002c44:	3710      	adds	r7, #16
 8002c46:	46bd      	mov	sp, r7
 8002c48:	bd80      	pop	{r7, pc}

08002c4a <prvCopyDataToQueue>:
 8002c4a:	b580      	push	{r7, lr}
 8002c4c:	b086      	sub	sp, #24
 8002c4e:	af00      	add	r7, sp, #0
 8002c50:	60f8      	str	r0, [r7, #12]
 8002c52:	60b9      	str	r1, [r7, #8]
 8002c54:	607a      	str	r2, [r7, #4]
 8002c56:	2300      	movs	r3, #0
 8002c58:	617b      	str	r3, [r7, #20]
 8002c5a:	68fb      	ldr	r3, [r7, #12]
 8002c5c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002c5e:	613b      	str	r3, [r7, #16]
 8002c60:	68fb      	ldr	r3, [r7, #12]
 8002c62:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c64:	2b00      	cmp	r3, #0
 8002c66:	d10d      	bne.n	8002c84 <prvCopyDataToQueue+0x3a>
 8002c68:	68fb      	ldr	r3, [r7, #12]
 8002c6a:	681b      	ldr	r3, [r3, #0]
 8002c6c:	2b00      	cmp	r3, #0
 8002c6e:	d14d      	bne.n	8002d0c <prvCopyDataToQueue+0xc2>
 8002c70:	68fb      	ldr	r3, [r7, #12]
 8002c72:	685b      	ldr	r3, [r3, #4]
 8002c74:	4618      	mov	r0, r3
 8002c76:	f000 ff9b 	bl	8003bb0 <xTaskPriorityDisinherit>
 8002c7a:	6178      	str	r0, [r7, #20]
 8002c7c:	68fb      	ldr	r3, [r7, #12]
 8002c7e:	2200      	movs	r2, #0
 8002c80:	605a      	str	r2, [r3, #4]
 8002c82:	e043      	b.n	8002d0c <prvCopyDataToQueue+0xc2>
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	2b00      	cmp	r3, #0
 8002c88:	d119      	bne.n	8002cbe <prvCopyDataToQueue+0x74>
 8002c8a:	68fb      	ldr	r3, [r7, #12]
 8002c8c:	6898      	ldr	r0, [r3, #8]
 8002c8e:	68fb      	ldr	r3, [r7, #12]
 8002c90:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c92:	461a      	mov	r2, r3
 8002c94:	68b9      	ldr	r1, [r7, #8]
 8002c96:	f001 ff33 	bl	8004b00 <memcpy>
 8002c9a:	68fb      	ldr	r3, [r7, #12]
 8002c9c:	689a      	ldr	r2, [r3, #8]
 8002c9e:	68fb      	ldr	r3, [r7, #12]
 8002ca0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ca2:	441a      	add	r2, r3
 8002ca4:	68fb      	ldr	r3, [r7, #12]
 8002ca6:	609a      	str	r2, [r3, #8]
 8002ca8:	68fb      	ldr	r3, [r7, #12]
 8002caa:	689a      	ldr	r2, [r3, #8]
 8002cac:	68fb      	ldr	r3, [r7, #12]
 8002cae:	685b      	ldr	r3, [r3, #4]
 8002cb0:	429a      	cmp	r2, r3
 8002cb2:	d32b      	bcc.n	8002d0c <prvCopyDataToQueue+0xc2>
 8002cb4:	68fb      	ldr	r3, [r7, #12]
 8002cb6:	681a      	ldr	r2, [r3, #0]
 8002cb8:	68fb      	ldr	r3, [r7, #12]
 8002cba:	609a      	str	r2, [r3, #8]
 8002cbc:	e026      	b.n	8002d0c <prvCopyDataToQueue+0xc2>
 8002cbe:	68fb      	ldr	r3, [r7, #12]
 8002cc0:	68d8      	ldr	r0, [r3, #12]
 8002cc2:	68fb      	ldr	r3, [r7, #12]
 8002cc4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002cc6:	461a      	mov	r2, r3
 8002cc8:	68b9      	ldr	r1, [r7, #8]
 8002cca:	f001 ff19 	bl	8004b00 <memcpy>
 8002cce:	68fb      	ldr	r3, [r7, #12]
 8002cd0:	68da      	ldr	r2, [r3, #12]
 8002cd2:	68fb      	ldr	r3, [r7, #12]
 8002cd4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002cd6:	425b      	negs	r3, r3
 8002cd8:	441a      	add	r2, r3
 8002cda:	68fb      	ldr	r3, [r7, #12]
 8002cdc:	60da      	str	r2, [r3, #12]
 8002cde:	68fb      	ldr	r3, [r7, #12]
 8002ce0:	68da      	ldr	r2, [r3, #12]
 8002ce2:	68fb      	ldr	r3, [r7, #12]
 8002ce4:	681b      	ldr	r3, [r3, #0]
 8002ce6:	429a      	cmp	r2, r3
 8002ce8:	d207      	bcs.n	8002cfa <prvCopyDataToQueue+0xb0>
 8002cea:	68fb      	ldr	r3, [r7, #12]
 8002cec:	685a      	ldr	r2, [r3, #4]
 8002cee:	68fb      	ldr	r3, [r7, #12]
 8002cf0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002cf2:	425b      	negs	r3, r3
 8002cf4:	441a      	add	r2, r3
 8002cf6:	68fb      	ldr	r3, [r7, #12]
 8002cf8:	60da      	str	r2, [r3, #12]
 8002cfa:	687b      	ldr	r3, [r7, #4]
 8002cfc:	2b02      	cmp	r3, #2
 8002cfe:	d105      	bne.n	8002d0c <prvCopyDataToQueue+0xc2>
 8002d00:	693b      	ldr	r3, [r7, #16]
 8002d02:	2b00      	cmp	r3, #0
 8002d04:	d002      	beq.n	8002d0c <prvCopyDataToQueue+0xc2>
 8002d06:	693b      	ldr	r3, [r7, #16]
 8002d08:	3b01      	subs	r3, #1
 8002d0a:	613b      	str	r3, [r7, #16]
 8002d0c:	693b      	ldr	r3, [r7, #16]
 8002d0e:	1c5a      	adds	r2, r3, #1
 8002d10:	68fb      	ldr	r3, [r7, #12]
 8002d12:	639a      	str	r2, [r3, #56]	; 0x38
 8002d14:	697b      	ldr	r3, [r7, #20]
 8002d16:	4618      	mov	r0, r3
 8002d18:	3718      	adds	r7, #24
 8002d1a:	46bd      	mov	sp, r7
 8002d1c:	bd80      	pop	{r7, pc}

08002d1e <prvCopyDataFromQueue>:
 8002d1e:	b580      	push	{r7, lr}
 8002d20:	b082      	sub	sp, #8
 8002d22:	af00      	add	r7, sp, #0
 8002d24:	6078      	str	r0, [r7, #4]
 8002d26:	6039      	str	r1, [r7, #0]
 8002d28:	687b      	ldr	r3, [r7, #4]
 8002d2a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d2c:	2b00      	cmp	r3, #0
 8002d2e:	d018      	beq.n	8002d62 <prvCopyDataFromQueue+0x44>
 8002d30:	687b      	ldr	r3, [r7, #4]
 8002d32:	68da      	ldr	r2, [r3, #12]
 8002d34:	687b      	ldr	r3, [r7, #4]
 8002d36:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d38:	441a      	add	r2, r3
 8002d3a:	687b      	ldr	r3, [r7, #4]
 8002d3c:	60da      	str	r2, [r3, #12]
 8002d3e:	687b      	ldr	r3, [r7, #4]
 8002d40:	68da      	ldr	r2, [r3, #12]
 8002d42:	687b      	ldr	r3, [r7, #4]
 8002d44:	685b      	ldr	r3, [r3, #4]
 8002d46:	429a      	cmp	r2, r3
 8002d48:	d303      	bcc.n	8002d52 <prvCopyDataFromQueue+0x34>
 8002d4a:	687b      	ldr	r3, [r7, #4]
 8002d4c:	681a      	ldr	r2, [r3, #0]
 8002d4e:	687b      	ldr	r3, [r7, #4]
 8002d50:	60da      	str	r2, [r3, #12]
 8002d52:	687b      	ldr	r3, [r7, #4]
 8002d54:	68d9      	ldr	r1, [r3, #12]
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002d5a:	461a      	mov	r2, r3
 8002d5c:	6838      	ldr	r0, [r7, #0]
 8002d5e:	f001 fecf 	bl	8004b00 <memcpy>
 8002d62:	bf00      	nop
 8002d64:	3708      	adds	r7, #8
 8002d66:	46bd      	mov	sp, r7
 8002d68:	bd80      	pop	{r7, pc}

08002d6a <prvUnlockQueue>:
 8002d6a:	b580      	push	{r7, lr}
 8002d6c:	b084      	sub	sp, #16
 8002d6e:	af00      	add	r7, sp, #0
 8002d70:	6078      	str	r0, [r7, #4]
 8002d72:	f001 fbd1 	bl	8004518 <vPortEnterCritical>
 8002d76:	687b      	ldr	r3, [r7, #4]
 8002d78:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8002d7c:	73fb      	strb	r3, [r7, #15]
 8002d7e:	e011      	b.n	8002da4 <prvUnlockQueue+0x3a>
 8002d80:	687b      	ldr	r3, [r7, #4]
 8002d82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002d84:	2b00      	cmp	r3, #0
 8002d86:	d012      	beq.n	8002dae <prvUnlockQueue+0x44>
 8002d88:	687b      	ldr	r3, [r7, #4]
 8002d8a:	3324      	adds	r3, #36	; 0x24
 8002d8c:	4618      	mov	r0, r3
 8002d8e:	f000 fd37 	bl	8003800 <xTaskRemoveFromEventList>
 8002d92:	4603      	mov	r3, r0
 8002d94:	2b00      	cmp	r3, #0
 8002d96:	d001      	beq.n	8002d9c <prvUnlockQueue+0x32>
 8002d98:	f000 fe0a 	bl	80039b0 <vTaskMissedYield>
 8002d9c:	7bfb      	ldrb	r3, [r7, #15]
 8002d9e:	3b01      	subs	r3, #1
 8002da0:	b2db      	uxtb	r3, r3
 8002da2:	73fb      	strb	r3, [r7, #15]
 8002da4:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002da8:	2b00      	cmp	r3, #0
 8002daa:	dce9      	bgt.n	8002d80 <prvUnlockQueue+0x16>
 8002dac:	e000      	b.n	8002db0 <prvUnlockQueue+0x46>
 8002dae:	bf00      	nop
 8002db0:	687b      	ldr	r3, [r7, #4]
 8002db2:	22ff      	movs	r2, #255	; 0xff
 8002db4:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002db8:	f001 fbdc 	bl	8004574 <vPortExitCritical>
 8002dbc:	f001 fbac 	bl	8004518 <vPortEnterCritical>
 8002dc0:	687b      	ldr	r3, [r7, #4]
 8002dc2:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8002dc6:	73bb      	strb	r3, [r7, #14]
 8002dc8:	e011      	b.n	8002dee <prvUnlockQueue+0x84>
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	691b      	ldr	r3, [r3, #16]
 8002dce:	2b00      	cmp	r3, #0
 8002dd0:	d012      	beq.n	8002df8 <prvUnlockQueue+0x8e>
 8002dd2:	687b      	ldr	r3, [r7, #4]
 8002dd4:	3310      	adds	r3, #16
 8002dd6:	4618      	mov	r0, r3
 8002dd8:	f000 fd12 	bl	8003800 <xTaskRemoveFromEventList>
 8002ddc:	4603      	mov	r3, r0
 8002dde:	2b00      	cmp	r3, #0
 8002de0:	d001      	beq.n	8002de6 <prvUnlockQueue+0x7c>
 8002de2:	f000 fde5 	bl	80039b0 <vTaskMissedYield>
 8002de6:	7bbb      	ldrb	r3, [r7, #14]
 8002de8:	3b01      	subs	r3, #1
 8002dea:	b2db      	uxtb	r3, r3
 8002dec:	73bb      	strb	r3, [r7, #14]
 8002dee:	f997 300e 	ldrsb.w	r3, [r7, #14]
 8002df2:	2b00      	cmp	r3, #0
 8002df4:	dce9      	bgt.n	8002dca <prvUnlockQueue+0x60>
 8002df6:	e000      	b.n	8002dfa <prvUnlockQueue+0x90>
 8002df8:	bf00      	nop
 8002dfa:	687b      	ldr	r3, [r7, #4]
 8002dfc:	22ff      	movs	r2, #255	; 0xff
 8002dfe:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002e02:	f001 fbb7 	bl	8004574 <vPortExitCritical>
 8002e06:	bf00      	nop
 8002e08:	3710      	adds	r7, #16
 8002e0a:	46bd      	mov	sp, r7
 8002e0c:	bd80      	pop	{r7, pc}

08002e0e <prvIsQueueEmpty>:
 8002e0e:	b580      	push	{r7, lr}
 8002e10:	b084      	sub	sp, #16
 8002e12:	af00      	add	r7, sp, #0
 8002e14:	6078      	str	r0, [r7, #4]
 8002e16:	f001 fb7f 	bl	8004518 <vPortEnterCritical>
 8002e1a:	687b      	ldr	r3, [r7, #4]
 8002e1c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002e1e:	2b00      	cmp	r3, #0
 8002e20:	d102      	bne.n	8002e28 <prvIsQueueEmpty+0x1a>
 8002e22:	2301      	movs	r3, #1
 8002e24:	60fb      	str	r3, [r7, #12]
 8002e26:	e001      	b.n	8002e2c <prvIsQueueEmpty+0x1e>
 8002e28:	2300      	movs	r3, #0
 8002e2a:	60fb      	str	r3, [r7, #12]
 8002e2c:	f001 fba2 	bl	8004574 <vPortExitCritical>
 8002e30:	68fb      	ldr	r3, [r7, #12]
 8002e32:	4618      	mov	r0, r3
 8002e34:	3710      	adds	r7, #16
 8002e36:	46bd      	mov	sp, r7
 8002e38:	bd80      	pop	{r7, pc}

08002e3a <prvIsQueueFull>:
 8002e3a:	b580      	push	{r7, lr}
 8002e3c:	b084      	sub	sp, #16
 8002e3e:	af00      	add	r7, sp, #0
 8002e40:	6078      	str	r0, [r7, #4]
 8002e42:	f001 fb69 	bl	8004518 <vPortEnterCritical>
 8002e46:	687b      	ldr	r3, [r7, #4]
 8002e48:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002e4a:	687b      	ldr	r3, [r7, #4]
 8002e4c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8002e4e:	429a      	cmp	r2, r3
 8002e50:	d102      	bne.n	8002e58 <prvIsQueueFull+0x1e>
 8002e52:	2301      	movs	r3, #1
 8002e54:	60fb      	str	r3, [r7, #12]
 8002e56:	e001      	b.n	8002e5c <prvIsQueueFull+0x22>
 8002e58:	2300      	movs	r3, #0
 8002e5a:	60fb      	str	r3, [r7, #12]
 8002e5c:	f001 fb8a 	bl	8004574 <vPortExitCritical>
 8002e60:	68fb      	ldr	r3, [r7, #12]
 8002e62:	4618      	mov	r0, r3
 8002e64:	3710      	adds	r7, #16
 8002e66:	46bd      	mov	sp, r7
 8002e68:	bd80      	pop	{r7, pc}
	...

08002e6c <vQueueAddToRegistry>:
 8002e6c:	b480      	push	{r7}
 8002e6e:	b085      	sub	sp, #20
 8002e70:	af00      	add	r7, sp, #0
 8002e72:	6078      	str	r0, [r7, #4]
 8002e74:	6039      	str	r1, [r7, #0]
 8002e76:	2300      	movs	r3, #0
 8002e78:	60fb      	str	r3, [r7, #12]
 8002e7a:	e014      	b.n	8002ea6 <vQueueAddToRegistry+0x3a>
 8002e7c:	4a0e      	ldr	r2, [pc, #56]	; (8002eb8 <vQueueAddToRegistry+0x4c>)
 8002e7e:	68fb      	ldr	r3, [r7, #12]
 8002e80:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 8002e84:	2b00      	cmp	r3, #0
 8002e86:	d10b      	bne.n	8002ea0 <vQueueAddToRegistry+0x34>
 8002e88:	490b      	ldr	r1, [pc, #44]	; (8002eb8 <vQueueAddToRegistry+0x4c>)
 8002e8a:	68fb      	ldr	r3, [r7, #12]
 8002e8c:	683a      	ldr	r2, [r7, #0]
 8002e8e:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 8002e92:	4a09      	ldr	r2, [pc, #36]	; (8002eb8 <vQueueAddToRegistry+0x4c>)
 8002e94:	68fb      	ldr	r3, [r7, #12]
 8002e96:	00db      	lsls	r3, r3, #3
 8002e98:	4413      	add	r3, r2
 8002e9a:	687a      	ldr	r2, [r7, #4]
 8002e9c:	605a      	str	r2, [r3, #4]
 8002e9e:	e005      	b.n	8002eac <vQueueAddToRegistry+0x40>
 8002ea0:	68fb      	ldr	r3, [r7, #12]
 8002ea2:	3301      	adds	r3, #1
 8002ea4:	60fb      	str	r3, [r7, #12]
 8002ea6:	68fb      	ldr	r3, [r7, #12]
 8002ea8:	2b07      	cmp	r3, #7
 8002eaa:	d9e7      	bls.n	8002e7c <vQueueAddToRegistry+0x10>
 8002eac:	bf00      	nop
 8002eae:	3714      	adds	r7, #20
 8002eb0:	46bd      	mov	sp, r7
 8002eb2:	bc80      	pop	{r7}
 8002eb4:	4770      	bx	lr
 8002eb6:	bf00      	nop
 8002eb8:	20002f14 	.word	0x20002f14

08002ebc <vQueueWaitForMessageRestricted>:
 8002ebc:	b580      	push	{r7, lr}
 8002ebe:	b086      	sub	sp, #24
 8002ec0:	af00      	add	r7, sp, #0
 8002ec2:	60f8      	str	r0, [r7, #12]
 8002ec4:	60b9      	str	r1, [r7, #8]
 8002ec6:	607a      	str	r2, [r7, #4]
 8002ec8:	68fb      	ldr	r3, [r7, #12]
 8002eca:	617b      	str	r3, [r7, #20]
 8002ecc:	f001 fb24 	bl	8004518 <vPortEnterCritical>
 8002ed0:	697b      	ldr	r3, [r7, #20]
 8002ed2:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 8002ed6:	b25b      	sxtb	r3, r3
 8002ed8:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002edc:	d103      	bne.n	8002ee6 <vQueueWaitForMessageRestricted+0x2a>
 8002ede:	697b      	ldr	r3, [r7, #20]
 8002ee0:	2200      	movs	r2, #0
 8002ee2:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8002ee6:	697b      	ldr	r3, [r7, #20]
 8002ee8:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 8002eec:	b25b      	sxtb	r3, r3
 8002eee:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002ef2:	d103      	bne.n	8002efc <vQueueWaitForMessageRestricted+0x40>
 8002ef4:	697b      	ldr	r3, [r7, #20]
 8002ef6:	2200      	movs	r2, #0
 8002ef8:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8002efc:	f001 fb3a 	bl	8004574 <vPortExitCritical>
 8002f00:	697b      	ldr	r3, [r7, #20]
 8002f02:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002f04:	2b00      	cmp	r3, #0
 8002f06:	d106      	bne.n	8002f16 <vQueueWaitForMessageRestricted+0x5a>
 8002f08:	697b      	ldr	r3, [r7, #20]
 8002f0a:	3324      	adds	r3, #36	; 0x24
 8002f0c:	687a      	ldr	r2, [r7, #4]
 8002f0e:	68b9      	ldr	r1, [r7, #8]
 8002f10:	4618      	mov	r0, r3
 8002f12:	f000 fc4b 	bl	80037ac <vTaskPlaceOnEventListRestricted>
 8002f16:	6978      	ldr	r0, [r7, #20]
 8002f18:	f7ff ff27 	bl	8002d6a <prvUnlockQueue>
 8002f1c:	bf00      	nop
 8002f1e:	3718      	adds	r7, #24
 8002f20:	46bd      	mov	sp, r7
 8002f22:	bd80      	pop	{r7, pc}

08002f24 <xTaskCreateStatic>:
 8002f24:	b580      	push	{r7, lr}
 8002f26:	b08e      	sub	sp, #56	; 0x38
 8002f28:	af04      	add	r7, sp, #16
 8002f2a:	60f8      	str	r0, [r7, #12]
 8002f2c:	60b9      	str	r1, [r7, #8]
 8002f2e:	607a      	str	r2, [r7, #4]
 8002f30:	603b      	str	r3, [r7, #0]
 8002f32:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002f34:	2b00      	cmp	r3, #0
 8002f36:	d109      	bne.n	8002f4c <xTaskCreateStatic+0x28>
 8002f38:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002f3c:	f383 8811 	msr	BASEPRI, r3
 8002f40:	f3bf 8f6f 	isb	sy
 8002f44:	f3bf 8f4f 	dsb	sy
 8002f48:	623b      	str	r3, [r7, #32]
 8002f4a:	e7fe      	b.n	8002f4a <xTaskCreateStatic+0x26>
 8002f4c:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002f4e:	2b00      	cmp	r3, #0
 8002f50:	d109      	bne.n	8002f66 <xTaskCreateStatic+0x42>
 8002f52:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002f56:	f383 8811 	msr	BASEPRI, r3
 8002f5a:	f3bf 8f6f 	isb	sy
 8002f5e:	f3bf 8f4f 	dsb	sy
 8002f62:	61fb      	str	r3, [r7, #28]
 8002f64:	e7fe      	b.n	8002f64 <xTaskCreateStatic+0x40>
 8002f66:	235c      	movs	r3, #92	; 0x5c
 8002f68:	613b      	str	r3, [r7, #16]
 8002f6a:	693b      	ldr	r3, [r7, #16]
 8002f6c:	2b5c      	cmp	r3, #92	; 0x5c
 8002f6e:	d009      	beq.n	8002f84 <xTaskCreateStatic+0x60>
 8002f70:	f04f 0350 	mov.w	r3, #80	; 0x50
 8002f74:	f383 8811 	msr	BASEPRI, r3
 8002f78:	f3bf 8f6f 	isb	sy
 8002f7c:	f3bf 8f4f 	dsb	sy
 8002f80:	61bb      	str	r3, [r7, #24]
 8002f82:	e7fe      	b.n	8002f82 <xTaskCreateStatic+0x5e>
 8002f84:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002f86:	2b00      	cmp	r3, #0
 8002f88:	d01e      	beq.n	8002fc8 <xTaskCreateStatic+0xa4>
 8002f8a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002f8c:	2b00      	cmp	r3, #0
 8002f8e:	d01b      	beq.n	8002fc8 <xTaskCreateStatic+0xa4>
 8002f90:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002f92:	627b      	str	r3, [r7, #36]	; 0x24
 8002f94:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002f96:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8002f98:	631a      	str	r2, [r3, #48]	; 0x30
 8002f9a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002f9c:	2202      	movs	r2, #2
 8002f9e:	f883 2059 	strb.w	r2, [r3, #89]	; 0x59
 8002fa2:	2300      	movs	r3, #0
 8002fa4:	9303      	str	r3, [sp, #12]
 8002fa6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002fa8:	9302      	str	r3, [sp, #8]
 8002faa:	f107 0314 	add.w	r3, r7, #20
 8002fae:	9301      	str	r3, [sp, #4]
 8002fb0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002fb2:	9300      	str	r3, [sp, #0]
 8002fb4:	683b      	ldr	r3, [r7, #0]
 8002fb6:	687a      	ldr	r2, [r7, #4]
 8002fb8:	68b9      	ldr	r1, [r7, #8]
 8002fba:	68f8      	ldr	r0, [r7, #12]
 8002fbc:	f000 f850 	bl	8003060 <prvInitialiseNewTask>
 8002fc0:	6a78      	ldr	r0, [r7, #36]	; 0x24
 8002fc2:	f000 f8d3 	bl	800316c <prvAddNewTaskToReadyList>
 8002fc6:	e001      	b.n	8002fcc <xTaskCreateStatic+0xa8>
 8002fc8:	2300      	movs	r3, #0
 8002fca:	617b      	str	r3, [r7, #20]
 8002fcc:	697b      	ldr	r3, [r7, #20]
 8002fce:	4618      	mov	r0, r3
 8002fd0:	3728      	adds	r7, #40	; 0x28
 8002fd2:	46bd      	mov	sp, r7
 8002fd4:	bd80      	pop	{r7, pc}

08002fd6 <xTaskCreate>:
 8002fd6:	b580      	push	{r7, lr}
 8002fd8:	b08c      	sub	sp, #48	; 0x30
 8002fda:	af04      	add	r7, sp, #16
 8002fdc:	60f8      	str	r0, [r7, #12]
 8002fde:	60b9      	str	r1, [r7, #8]
 8002fe0:	603b      	str	r3, [r7, #0]
 8002fe2:	4613      	mov	r3, r2
 8002fe4:	80fb      	strh	r3, [r7, #6]
 8002fe6:	88fb      	ldrh	r3, [r7, #6]
 8002fe8:	009b      	lsls	r3, r3, #2
 8002fea:	4618      	mov	r0, r3
 8002fec:	f001 fb8a 	bl	8004704 <pvPortMalloc>
 8002ff0:	6178      	str	r0, [r7, #20]
 8002ff2:	697b      	ldr	r3, [r7, #20]
 8002ff4:	2b00      	cmp	r3, #0
 8002ff6:	d00e      	beq.n	8003016 <xTaskCreate+0x40>
 8002ff8:	205c      	movs	r0, #92	; 0x5c
 8002ffa:	f001 fb83 	bl	8004704 <pvPortMalloc>
 8002ffe:	61f8      	str	r0, [r7, #28]
 8003000:	69fb      	ldr	r3, [r7, #28]
 8003002:	2b00      	cmp	r3, #0
 8003004:	d003      	beq.n	800300e <xTaskCreate+0x38>
 8003006:	69fb      	ldr	r3, [r7, #28]
 8003008:	697a      	ldr	r2, [r7, #20]
 800300a:	631a      	str	r2, [r3, #48]	; 0x30
 800300c:	e005      	b.n	800301a <xTaskCreate+0x44>
 800300e:	6978      	ldr	r0, [r7, #20]
 8003010:	f001 fc3a 	bl	8004888 <vPortFree>
 8003014:	e001      	b.n	800301a <xTaskCreate+0x44>
 8003016:	2300      	movs	r3, #0
 8003018:	61fb      	str	r3, [r7, #28]
 800301a:	69fb      	ldr	r3, [r7, #28]
 800301c:	2b00      	cmp	r3, #0
 800301e:	d017      	beq.n	8003050 <xTaskCreate+0x7a>
 8003020:	69fb      	ldr	r3, [r7, #28]
 8003022:	2200      	movs	r2, #0
 8003024:	f883 2059 	strb.w	r2, [r3, #89]	; 0x59
 8003028:	88fa      	ldrh	r2, [r7, #6]
 800302a:	2300      	movs	r3, #0
 800302c:	9303      	str	r3, [sp, #12]
 800302e:	69fb      	ldr	r3, [r7, #28]
 8003030:	9302      	str	r3, [sp, #8]
 8003032:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003034:	9301      	str	r3, [sp, #4]
 8003036:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8003038:	9300      	str	r3, [sp, #0]
 800303a:	683b      	ldr	r3, [r7, #0]
 800303c:	68b9      	ldr	r1, [r7, #8]
 800303e:	68f8      	ldr	r0, [r7, #12]
 8003040:	f000 f80e 	bl	8003060 <prvInitialiseNewTask>
 8003044:	69f8      	ldr	r0, [r7, #28]
 8003046:	f000 f891 	bl	800316c <prvAddNewTaskToReadyList>
 800304a:	2301      	movs	r3, #1
 800304c:	61bb      	str	r3, [r7, #24]
 800304e:	e002      	b.n	8003056 <xTaskCreate+0x80>
 8003050:	f04f 33ff 	mov.w	r3, #4294967295
 8003054:	61bb      	str	r3, [r7, #24]
 8003056:	69bb      	ldr	r3, [r7, #24]
 8003058:	4618      	mov	r0, r3
 800305a:	3720      	adds	r7, #32
 800305c:	46bd      	mov	sp, r7
 800305e:	bd80      	pop	{r7, pc}

08003060 <prvInitialiseNewTask>:
 8003060:	b580      	push	{r7, lr}
 8003062:	b088      	sub	sp, #32
 8003064:	af00      	add	r7, sp, #0
 8003066:	60f8      	str	r0, [r7, #12]
 8003068:	60b9      	str	r1, [r7, #8]
 800306a:	607a      	str	r2, [r7, #4]
 800306c:	603b      	str	r3, [r7, #0]
 800306e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003070:	6b18      	ldr	r0, [r3, #48]	; 0x30
 8003072:	687b      	ldr	r3, [r7, #4]
 8003074:	009b      	lsls	r3, r3, #2
 8003076:	461a      	mov	r2, r3
 8003078:	21a5      	movs	r1, #165	; 0xa5
 800307a:	f001 fd4c 	bl	8004b16 <memset>
 800307e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003080:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8003088:	3b01      	subs	r3, #1
 800308a:	009b      	lsls	r3, r3, #2
 800308c:	4413      	add	r3, r2
 800308e:	61bb      	str	r3, [r7, #24]
 8003090:	69bb      	ldr	r3, [r7, #24]
 8003092:	f023 0307 	bic.w	r3, r3, #7
 8003096:	61bb      	str	r3, [r7, #24]
 8003098:	69bb      	ldr	r3, [r7, #24]
 800309a:	f003 0307 	and.w	r3, r3, #7
 800309e:	2b00      	cmp	r3, #0
 80030a0:	d009      	beq.n	80030b6 <prvInitialiseNewTask+0x56>
 80030a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80030a6:	f383 8811 	msr	BASEPRI, r3
 80030aa:	f3bf 8f6f 	isb	sy
 80030ae:	f3bf 8f4f 	dsb	sy
 80030b2:	617b      	str	r3, [r7, #20]
 80030b4:	e7fe      	b.n	80030b4 <prvInitialiseNewTask+0x54>
 80030b6:	2300      	movs	r3, #0
 80030b8:	61fb      	str	r3, [r7, #28]
 80030ba:	e012      	b.n	80030e2 <prvInitialiseNewTask+0x82>
 80030bc:	68ba      	ldr	r2, [r7, #8]
 80030be:	69fb      	ldr	r3, [r7, #28]
 80030c0:	4413      	add	r3, r2
 80030c2:	7819      	ldrb	r1, [r3, #0]
 80030c4:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80030c6:	69fb      	ldr	r3, [r7, #28]
 80030c8:	4413      	add	r3, r2
 80030ca:	3334      	adds	r3, #52	; 0x34
 80030cc:	460a      	mov	r2, r1
 80030ce:	701a      	strb	r2, [r3, #0]
 80030d0:	68ba      	ldr	r2, [r7, #8]
 80030d2:	69fb      	ldr	r3, [r7, #28]
 80030d4:	4413      	add	r3, r2
 80030d6:	781b      	ldrb	r3, [r3, #0]
 80030d8:	2b00      	cmp	r3, #0
 80030da:	d006      	beq.n	80030ea <prvInitialiseNewTask+0x8a>
 80030dc:	69fb      	ldr	r3, [r7, #28]
 80030de:	3301      	adds	r3, #1
 80030e0:	61fb      	str	r3, [r7, #28]
 80030e2:	69fb      	ldr	r3, [r7, #28]
 80030e4:	2b0f      	cmp	r3, #15
 80030e6:	d9e9      	bls.n	80030bc <prvInitialiseNewTask+0x5c>
 80030e8:	e000      	b.n	80030ec <prvInitialiseNewTask+0x8c>
 80030ea:	bf00      	nop
 80030ec:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80030ee:	2200      	movs	r2, #0
 80030f0:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80030f4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80030f6:	2b37      	cmp	r3, #55	; 0x37
 80030f8:	d901      	bls.n	80030fe <prvInitialiseNewTask+0x9e>
 80030fa:	2337      	movs	r3, #55	; 0x37
 80030fc:	62bb      	str	r3, [r7, #40]	; 0x28
 80030fe:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003100:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003102:	62da      	str	r2, [r3, #44]	; 0x2c
 8003104:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003106:	6aba      	ldr	r2, [r7, #40]	; 0x28
 8003108:	64da      	str	r2, [r3, #76]	; 0x4c
 800310a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800310c:	2200      	movs	r2, #0
 800310e:	651a      	str	r2, [r3, #80]	; 0x50
 8003110:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003112:	3304      	adds	r3, #4
 8003114:	4618      	mov	r0, r3
 8003116:	f7ff f946 	bl	80023a6 <vListInitialiseItem>
 800311a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800311c:	3318      	adds	r3, #24
 800311e:	4618      	mov	r0, r3
 8003120:	f7ff f941 	bl	80023a6 <vListInitialiseItem>
 8003124:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003126:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003128:	611a      	str	r2, [r3, #16]
 800312a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800312c:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8003130:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003132:	619a      	str	r2, [r3, #24]
 8003134:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003136:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003138:	625a      	str	r2, [r3, #36]	; 0x24
 800313a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800313c:	2200      	movs	r2, #0
 800313e:	655a      	str	r2, [r3, #84]	; 0x54
 8003140:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003142:	2200      	movs	r2, #0
 8003144:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
 8003148:	683a      	ldr	r2, [r7, #0]
 800314a:	68f9      	ldr	r1, [r7, #12]
 800314c:	69b8      	ldr	r0, [r7, #24]
 800314e:	f001 f8f9 	bl	8004344 <pxPortInitialiseStack>
 8003152:	4602      	mov	r2, r0
 8003154:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003156:	601a      	str	r2, [r3, #0]
 8003158:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800315a:	2b00      	cmp	r3, #0
 800315c:	d002      	beq.n	8003164 <prvInitialiseNewTask+0x104>
 800315e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003160:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003162:	601a      	str	r2, [r3, #0]
 8003164:	bf00      	nop
 8003166:	3720      	adds	r7, #32
 8003168:	46bd      	mov	sp, r7
 800316a:	bd80      	pop	{r7, pc}

0800316c <prvAddNewTaskToReadyList>:
 800316c:	b580      	push	{r7, lr}
 800316e:	b082      	sub	sp, #8
 8003170:	af00      	add	r7, sp, #0
 8003172:	6078      	str	r0, [r7, #4]
 8003174:	f001 f9d0 	bl	8004518 <vPortEnterCritical>
 8003178:	4b2d      	ldr	r3, [pc, #180]	; (8003230 <prvAddNewTaskToReadyList+0xc4>)
 800317a:	681b      	ldr	r3, [r3, #0]
 800317c:	3301      	adds	r3, #1
 800317e:	4a2c      	ldr	r2, [pc, #176]	; (8003230 <prvAddNewTaskToReadyList+0xc4>)
 8003180:	6013      	str	r3, [r2, #0]
 8003182:	4b2c      	ldr	r3, [pc, #176]	; (8003234 <prvAddNewTaskToReadyList+0xc8>)
 8003184:	681b      	ldr	r3, [r3, #0]
 8003186:	2b00      	cmp	r3, #0
 8003188:	d109      	bne.n	800319e <prvAddNewTaskToReadyList+0x32>
 800318a:	4a2a      	ldr	r2, [pc, #168]	; (8003234 <prvAddNewTaskToReadyList+0xc8>)
 800318c:	687b      	ldr	r3, [r7, #4]
 800318e:	6013      	str	r3, [r2, #0]
 8003190:	4b27      	ldr	r3, [pc, #156]	; (8003230 <prvAddNewTaskToReadyList+0xc4>)
 8003192:	681b      	ldr	r3, [r3, #0]
 8003194:	2b01      	cmp	r3, #1
 8003196:	d110      	bne.n	80031ba <prvAddNewTaskToReadyList+0x4e>
 8003198:	f000 fc2e 	bl	80039f8 <prvInitialiseTaskLists>
 800319c:	e00d      	b.n	80031ba <prvAddNewTaskToReadyList+0x4e>
 800319e:	4b26      	ldr	r3, [pc, #152]	; (8003238 <prvAddNewTaskToReadyList+0xcc>)
 80031a0:	681b      	ldr	r3, [r3, #0]
 80031a2:	2b00      	cmp	r3, #0
 80031a4:	d109      	bne.n	80031ba <prvAddNewTaskToReadyList+0x4e>
 80031a6:	4b23      	ldr	r3, [pc, #140]	; (8003234 <prvAddNewTaskToReadyList+0xc8>)
 80031a8:	681b      	ldr	r3, [r3, #0]
 80031aa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80031ac:	687b      	ldr	r3, [r7, #4]
 80031ae:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80031b0:	429a      	cmp	r2, r3
 80031b2:	d802      	bhi.n	80031ba <prvAddNewTaskToReadyList+0x4e>
 80031b4:	4a1f      	ldr	r2, [pc, #124]	; (8003234 <prvAddNewTaskToReadyList+0xc8>)
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	6013      	str	r3, [r2, #0]
 80031ba:	4b20      	ldr	r3, [pc, #128]	; (800323c <prvAddNewTaskToReadyList+0xd0>)
 80031bc:	681b      	ldr	r3, [r3, #0]
 80031be:	3301      	adds	r3, #1
 80031c0:	4a1e      	ldr	r2, [pc, #120]	; (800323c <prvAddNewTaskToReadyList+0xd0>)
 80031c2:	6013      	str	r3, [r2, #0]
 80031c4:	4b1d      	ldr	r3, [pc, #116]	; (800323c <prvAddNewTaskToReadyList+0xd0>)
 80031c6:	681a      	ldr	r2, [r3, #0]
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	645a      	str	r2, [r3, #68]	; 0x44
 80031cc:	687b      	ldr	r3, [r7, #4]
 80031ce:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80031d0:	4b1b      	ldr	r3, [pc, #108]	; (8003240 <prvAddNewTaskToReadyList+0xd4>)
 80031d2:	681b      	ldr	r3, [r3, #0]
 80031d4:	429a      	cmp	r2, r3
 80031d6:	d903      	bls.n	80031e0 <prvAddNewTaskToReadyList+0x74>
 80031d8:	687b      	ldr	r3, [r7, #4]
 80031da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80031dc:	4a18      	ldr	r2, [pc, #96]	; (8003240 <prvAddNewTaskToReadyList+0xd4>)
 80031de:	6013      	str	r3, [r2, #0]
 80031e0:	687b      	ldr	r3, [r7, #4]
 80031e2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80031e4:	4613      	mov	r3, r2
 80031e6:	009b      	lsls	r3, r3, #2
 80031e8:	4413      	add	r3, r2
 80031ea:	009b      	lsls	r3, r3, #2
 80031ec:	4a15      	ldr	r2, [pc, #84]	; (8003244 <prvAddNewTaskToReadyList+0xd8>)
 80031ee:	441a      	add	r2, r3
 80031f0:	687b      	ldr	r3, [r7, #4]
 80031f2:	3304      	adds	r3, #4
 80031f4:	4619      	mov	r1, r3
 80031f6:	4610      	mov	r0, r2
 80031f8:	f7ff f8e1 	bl	80023be <vListInsertEnd>
 80031fc:	f001 f9ba 	bl	8004574 <vPortExitCritical>
 8003200:	4b0d      	ldr	r3, [pc, #52]	; (8003238 <prvAddNewTaskToReadyList+0xcc>)
 8003202:	681b      	ldr	r3, [r3, #0]
 8003204:	2b00      	cmp	r3, #0
 8003206:	d00e      	beq.n	8003226 <prvAddNewTaskToReadyList+0xba>
 8003208:	4b0a      	ldr	r3, [pc, #40]	; (8003234 <prvAddNewTaskToReadyList+0xc8>)
 800320a:	681b      	ldr	r3, [r3, #0]
 800320c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800320e:	687b      	ldr	r3, [r7, #4]
 8003210:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003212:	429a      	cmp	r2, r3
 8003214:	d207      	bcs.n	8003226 <prvAddNewTaskToReadyList+0xba>
 8003216:	4b0c      	ldr	r3, [pc, #48]	; (8003248 <prvAddNewTaskToReadyList+0xdc>)
 8003218:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800321c:	601a      	str	r2, [r3, #0]
 800321e:	f3bf 8f4f 	dsb	sy
 8003222:	f3bf 8f6f 	isb	sy
 8003226:	bf00      	nop
 8003228:	3708      	adds	r7, #8
 800322a:	46bd      	mov	sp, r7
 800322c:	bd80      	pop	{r7, pc}
 800322e:	bf00      	nop
 8003230:	20000c64 	.word	0x20000c64
 8003234:	20000790 	.word	0x20000790
 8003238:	20000c70 	.word	0x20000c70
 800323c:	20000c80 	.word	0x20000c80
 8003240:	20000c6c 	.word	0x20000c6c
 8003244:	20000794 	.word	0x20000794
 8003248:	e000ed04 	.word	0xe000ed04

0800324c <vTaskDelay>:
 800324c:	b580      	push	{r7, lr}
 800324e:	b084      	sub	sp, #16
 8003250:	af00      	add	r7, sp, #0
 8003252:	6078      	str	r0, [r7, #4]
 8003254:	2300      	movs	r3, #0
 8003256:	60fb      	str	r3, [r7, #12]
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	2b00      	cmp	r3, #0
 800325c:	d016      	beq.n	800328c <vTaskDelay+0x40>
 800325e:	4b13      	ldr	r3, [pc, #76]	; (80032ac <vTaskDelay+0x60>)
 8003260:	681b      	ldr	r3, [r3, #0]
 8003262:	2b00      	cmp	r3, #0
 8003264:	d009      	beq.n	800327a <vTaskDelay+0x2e>
 8003266:	f04f 0350 	mov.w	r3, #80	; 0x50
 800326a:	f383 8811 	msr	BASEPRI, r3
 800326e:	f3bf 8f6f 	isb	sy
 8003272:	f3bf 8f4f 	dsb	sy
 8003276:	60bb      	str	r3, [r7, #8]
 8003278:	e7fe      	b.n	8003278 <vTaskDelay+0x2c>
 800327a:	f000 f87f 	bl	800337c <vTaskSuspendAll>
 800327e:	2100      	movs	r1, #0
 8003280:	6878      	ldr	r0, [r7, #4]
 8003282:	f000 fd01 	bl	8003c88 <prvAddCurrentTaskToDelayedList>
 8003286:	f000 f887 	bl	8003398 <xTaskResumeAll>
 800328a:	60f8      	str	r0, [r7, #12]
 800328c:	68fb      	ldr	r3, [r7, #12]
 800328e:	2b00      	cmp	r3, #0
 8003290:	d107      	bne.n	80032a2 <vTaskDelay+0x56>
 8003292:	4b07      	ldr	r3, [pc, #28]	; (80032b0 <vTaskDelay+0x64>)
 8003294:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003298:	601a      	str	r2, [r3, #0]
 800329a:	f3bf 8f4f 	dsb	sy
 800329e:	f3bf 8f6f 	isb	sy
 80032a2:	bf00      	nop
 80032a4:	3710      	adds	r7, #16
 80032a6:	46bd      	mov	sp, r7
 80032a8:	bd80      	pop	{r7, pc}
 80032aa:	bf00      	nop
 80032ac:	20000c8c 	.word	0x20000c8c
 80032b0:	e000ed04 	.word	0xe000ed04

080032b4 <vTaskStartScheduler>:
 80032b4:	b580      	push	{r7, lr}
 80032b6:	b08a      	sub	sp, #40	; 0x28
 80032b8:	af04      	add	r7, sp, #16
 80032ba:	2300      	movs	r3, #0
 80032bc:	60bb      	str	r3, [r7, #8]
 80032be:	2300      	movs	r3, #0
 80032c0:	607b      	str	r3, [r7, #4]
 80032c2:	463a      	mov	r2, r7
 80032c4:	1d39      	adds	r1, r7, #4
 80032c6:	f107 0308 	add.w	r3, r7, #8
 80032ca:	4618      	mov	r0, r3
 80032cc:	f7ff f81a 	bl	8002304 <vApplicationGetIdleTaskMemory>
 80032d0:	6839      	ldr	r1, [r7, #0]
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	68ba      	ldr	r2, [r7, #8]
 80032d6:	9202      	str	r2, [sp, #8]
 80032d8:	9301      	str	r3, [sp, #4]
 80032da:	2300      	movs	r3, #0
 80032dc:	9300      	str	r3, [sp, #0]
 80032de:	2300      	movs	r3, #0
 80032e0:	460a      	mov	r2, r1
 80032e2:	4920      	ldr	r1, [pc, #128]	; (8003364 <vTaskStartScheduler+0xb0>)
 80032e4:	4820      	ldr	r0, [pc, #128]	; (8003368 <vTaskStartScheduler+0xb4>)
 80032e6:	f7ff fe1d 	bl	8002f24 <xTaskCreateStatic>
 80032ea:	4602      	mov	r2, r0
 80032ec:	4b1f      	ldr	r3, [pc, #124]	; (800336c <vTaskStartScheduler+0xb8>)
 80032ee:	601a      	str	r2, [r3, #0]
 80032f0:	4b1e      	ldr	r3, [pc, #120]	; (800336c <vTaskStartScheduler+0xb8>)
 80032f2:	681b      	ldr	r3, [r3, #0]
 80032f4:	2b00      	cmp	r3, #0
 80032f6:	d002      	beq.n	80032fe <vTaskStartScheduler+0x4a>
 80032f8:	2301      	movs	r3, #1
 80032fa:	617b      	str	r3, [r7, #20]
 80032fc:	e001      	b.n	8003302 <vTaskStartScheduler+0x4e>
 80032fe:	2300      	movs	r3, #0
 8003300:	617b      	str	r3, [r7, #20]
 8003302:	697b      	ldr	r3, [r7, #20]
 8003304:	2b01      	cmp	r3, #1
 8003306:	d102      	bne.n	800330e <vTaskStartScheduler+0x5a>
 8003308:	f000 fd12 	bl	8003d30 <xTimerCreateTimerTask>
 800330c:	6178      	str	r0, [r7, #20]
 800330e:	697b      	ldr	r3, [r7, #20]
 8003310:	2b01      	cmp	r3, #1
 8003312:	d115      	bne.n	8003340 <vTaskStartScheduler+0x8c>
 8003314:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003318:	f383 8811 	msr	BASEPRI, r3
 800331c:	f3bf 8f6f 	isb	sy
 8003320:	f3bf 8f4f 	dsb	sy
 8003324:	613b      	str	r3, [r7, #16]
 8003326:	4b12      	ldr	r3, [pc, #72]	; (8003370 <vTaskStartScheduler+0xbc>)
 8003328:	f04f 32ff 	mov.w	r2, #4294967295
 800332c:	601a      	str	r2, [r3, #0]
 800332e:	4b11      	ldr	r3, [pc, #68]	; (8003374 <vTaskStartScheduler+0xc0>)
 8003330:	2201      	movs	r2, #1
 8003332:	601a      	str	r2, [r3, #0]
 8003334:	4b10      	ldr	r3, [pc, #64]	; (8003378 <vTaskStartScheduler+0xc4>)
 8003336:	2200      	movs	r2, #0
 8003338:	601a      	str	r2, [r3, #0]
 800333a:	f001 f87d 	bl	8004438 <xPortStartScheduler>
 800333e:	e00d      	b.n	800335c <vTaskStartScheduler+0xa8>
 8003340:	697b      	ldr	r3, [r7, #20]
 8003342:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003346:	d109      	bne.n	800335c <vTaskStartScheduler+0xa8>
 8003348:	f04f 0350 	mov.w	r3, #80	; 0x50
 800334c:	f383 8811 	msr	BASEPRI, r3
 8003350:	f3bf 8f6f 	isb	sy
 8003354:	f3bf 8f4f 	dsb	sy
 8003358:	60fb      	str	r3, [r7, #12]
 800335a:	e7fe      	b.n	800335a <vTaskStartScheduler+0xa6>
 800335c:	bf00      	nop
 800335e:	3718      	adds	r7, #24
 8003360:	46bd      	mov	sp, r7
 8003362:	bd80      	pop	{r7, pc}
 8003364:	08005604 	.word	0x08005604
 8003368:	080039c9 	.word	0x080039c9
 800336c:	20000c88 	.word	0x20000c88
 8003370:	20000c84 	.word	0x20000c84
 8003374:	20000c70 	.word	0x20000c70
 8003378:	20000c68 	.word	0x20000c68

0800337c <vTaskSuspendAll>:
 800337c:	b480      	push	{r7}
 800337e:	af00      	add	r7, sp, #0
 8003380:	4b04      	ldr	r3, [pc, #16]	; (8003394 <vTaskSuspendAll+0x18>)
 8003382:	681b      	ldr	r3, [r3, #0]
 8003384:	3301      	adds	r3, #1
 8003386:	4a03      	ldr	r2, [pc, #12]	; (8003394 <vTaskSuspendAll+0x18>)
 8003388:	6013      	str	r3, [r2, #0]
 800338a:	bf00      	nop
 800338c:	46bd      	mov	sp, r7
 800338e:	bc80      	pop	{r7}
 8003390:	4770      	bx	lr
 8003392:	bf00      	nop
 8003394:	20000c8c 	.word	0x20000c8c

08003398 <xTaskResumeAll>:
 8003398:	b580      	push	{r7, lr}
 800339a:	b084      	sub	sp, #16
 800339c:	af00      	add	r7, sp, #0
 800339e:	2300      	movs	r3, #0
 80033a0:	60fb      	str	r3, [r7, #12]
 80033a2:	2300      	movs	r3, #0
 80033a4:	60bb      	str	r3, [r7, #8]
 80033a6:	4b41      	ldr	r3, [pc, #260]	; (80034ac <xTaskResumeAll+0x114>)
 80033a8:	681b      	ldr	r3, [r3, #0]
 80033aa:	2b00      	cmp	r3, #0
 80033ac:	d109      	bne.n	80033c2 <xTaskResumeAll+0x2a>
 80033ae:	f04f 0350 	mov.w	r3, #80	; 0x50
 80033b2:	f383 8811 	msr	BASEPRI, r3
 80033b6:	f3bf 8f6f 	isb	sy
 80033ba:	f3bf 8f4f 	dsb	sy
 80033be:	603b      	str	r3, [r7, #0]
 80033c0:	e7fe      	b.n	80033c0 <xTaskResumeAll+0x28>
 80033c2:	f001 f8a9 	bl	8004518 <vPortEnterCritical>
 80033c6:	4b39      	ldr	r3, [pc, #228]	; (80034ac <xTaskResumeAll+0x114>)
 80033c8:	681b      	ldr	r3, [r3, #0]
 80033ca:	3b01      	subs	r3, #1
 80033cc:	4a37      	ldr	r2, [pc, #220]	; (80034ac <xTaskResumeAll+0x114>)
 80033ce:	6013      	str	r3, [r2, #0]
 80033d0:	4b36      	ldr	r3, [pc, #216]	; (80034ac <xTaskResumeAll+0x114>)
 80033d2:	681b      	ldr	r3, [r3, #0]
 80033d4:	2b00      	cmp	r3, #0
 80033d6:	d162      	bne.n	800349e <xTaskResumeAll+0x106>
 80033d8:	4b35      	ldr	r3, [pc, #212]	; (80034b0 <xTaskResumeAll+0x118>)
 80033da:	681b      	ldr	r3, [r3, #0]
 80033dc:	2b00      	cmp	r3, #0
 80033de:	d05e      	beq.n	800349e <xTaskResumeAll+0x106>
 80033e0:	e02f      	b.n	8003442 <xTaskResumeAll+0xaa>
 80033e2:	4b34      	ldr	r3, [pc, #208]	; (80034b4 <xTaskResumeAll+0x11c>)
 80033e4:	68db      	ldr	r3, [r3, #12]
 80033e6:	68db      	ldr	r3, [r3, #12]
 80033e8:	60fb      	str	r3, [r7, #12]
 80033ea:	68fb      	ldr	r3, [r7, #12]
 80033ec:	3318      	adds	r3, #24
 80033ee:	4618      	mov	r0, r3
 80033f0:	f7ff f840 	bl	8002474 <uxListRemove>
 80033f4:	68fb      	ldr	r3, [r7, #12]
 80033f6:	3304      	adds	r3, #4
 80033f8:	4618      	mov	r0, r3
 80033fa:	f7ff f83b 	bl	8002474 <uxListRemove>
 80033fe:	68fb      	ldr	r3, [r7, #12]
 8003400:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003402:	4b2d      	ldr	r3, [pc, #180]	; (80034b8 <xTaskResumeAll+0x120>)
 8003404:	681b      	ldr	r3, [r3, #0]
 8003406:	429a      	cmp	r2, r3
 8003408:	d903      	bls.n	8003412 <xTaskResumeAll+0x7a>
 800340a:	68fb      	ldr	r3, [r7, #12]
 800340c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800340e:	4a2a      	ldr	r2, [pc, #168]	; (80034b8 <xTaskResumeAll+0x120>)
 8003410:	6013      	str	r3, [r2, #0]
 8003412:	68fb      	ldr	r3, [r7, #12]
 8003414:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003416:	4613      	mov	r3, r2
 8003418:	009b      	lsls	r3, r3, #2
 800341a:	4413      	add	r3, r2
 800341c:	009b      	lsls	r3, r3, #2
 800341e:	4a27      	ldr	r2, [pc, #156]	; (80034bc <xTaskResumeAll+0x124>)
 8003420:	441a      	add	r2, r3
 8003422:	68fb      	ldr	r3, [r7, #12]
 8003424:	3304      	adds	r3, #4
 8003426:	4619      	mov	r1, r3
 8003428:	4610      	mov	r0, r2
 800342a:	f7fe ffc8 	bl	80023be <vListInsertEnd>
 800342e:	68fb      	ldr	r3, [r7, #12]
 8003430:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003432:	4b23      	ldr	r3, [pc, #140]	; (80034c0 <xTaskResumeAll+0x128>)
 8003434:	681b      	ldr	r3, [r3, #0]
 8003436:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003438:	429a      	cmp	r2, r3
 800343a:	d302      	bcc.n	8003442 <xTaskResumeAll+0xaa>
 800343c:	4b21      	ldr	r3, [pc, #132]	; (80034c4 <xTaskResumeAll+0x12c>)
 800343e:	2201      	movs	r2, #1
 8003440:	601a      	str	r2, [r3, #0]
 8003442:	4b1c      	ldr	r3, [pc, #112]	; (80034b4 <xTaskResumeAll+0x11c>)
 8003444:	681b      	ldr	r3, [r3, #0]
 8003446:	2b00      	cmp	r3, #0
 8003448:	d1cb      	bne.n	80033e2 <xTaskResumeAll+0x4a>
 800344a:	68fb      	ldr	r3, [r7, #12]
 800344c:	2b00      	cmp	r3, #0
 800344e:	d001      	beq.n	8003454 <xTaskResumeAll+0xbc>
 8003450:	f000 fb6c 	bl	8003b2c <prvResetNextTaskUnblockTime>
 8003454:	4b1c      	ldr	r3, [pc, #112]	; (80034c8 <xTaskResumeAll+0x130>)
 8003456:	681b      	ldr	r3, [r3, #0]
 8003458:	607b      	str	r3, [r7, #4]
 800345a:	687b      	ldr	r3, [r7, #4]
 800345c:	2b00      	cmp	r3, #0
 800345e:	d010      	beq.n	8003482 <xTaskResumeAll+0xea>
 8003460:	f000 f866 	bl	8003530 <xTaskIncrementTick>
 8003464:	4603      	mov	r3, r0
 8003466:	2b00      	cmp	r3, #0
 8003468:	d002      	beq.n	8003470 <xTaskResumeAll+0xd8>
 800346a:	4b16      	ldr	r3, [pc, #88]	; (80034c4 <xTaskResumeAll+0x12c>)
 800346c:	2201      	movs	r2, #1
 800346e:	601a      	str	r2, [r3, #0]
 8003470:	687b      	ldr	r3, [r7, #4]
 8003472:	3b01      	subs	r3, #1
 8003474:	607b      	str	r3, [r7, #4]
 8003476:	687b      	ldr	r3, [r7, #4]
 8003478:	2b00      	cmp	r3, #0
 800347a:	d1f1      	bne.n	8003460 <xTaskResumeAll+0xc8>
 800347c:	4b12      	ldr	r3, [pc, #72]	; (80034c8 <xTaskResumeAll+0x130>)
 800347e:	2200      	movs	r2, #0
 8003480:	601a      	str	r2, [r3, #0]
 8003482:	4b10      	ldr	r3, [pc, #64]	; (80034c4 <xTaskResumeAll+0x12c>)
 8003484:	681b      	ldr	r3, [r3, #0]
 8003486:	2b00      	cmp	r3, #0
 8003488:	d009      	beq.n	800349e <xTaskResumeAll+0x106>
 800348a:	2301      	movs	r3, #1
 800348c:	60bb      	str	r3, [r7, #8]
 800348e:	4b0f      	ldr	r3, [pc, #60]	; (80034cc <xTaskResumeAll+0x134>)
 8003490:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003494:	601a      	str	r2, [r3, #0]
 8003496:	f3bf 8f4f 	dsb	sy
 800349a:	f3bf 8f6f 	isb	sy
 800349e:	f001 f869 	bl	8004574 <vPortExitCritical>
 80034a2:	68bb      	ldr	r3, [r7, #8]
 80034a4:	4618      	mov	r0, r3
 80034a6:	3710      	adds	r7, #16
 80034a8:	46bd      	mov	sp, r7
 80034aa:	bd80      	pop	{r7, pc}
 80034ac:	20000c8c 	.word	0x20000c8c
 80034b0:	20000c64 	.word	0x20000c64
 80034b4:	20000c24 	.word	0x20000c24
 80034b8:	20000c6c 	.word	0x20000c6c
 80034bc:	20000794 	.word	0x20000794
 80034c0:	20000790 	.word	0x20000790
 80034c4:	20000c78 	.word	0x20000c78
 80034c8:	20000c74 	.word	0x20000c74
 80034cc:	e000ed04 	.word	0xe000ed04

080034d0 <xTaskGetTickCount>:
 80034d0:	b480      	push	{r7}
 80034d2:	b083      	sub	sp, #12
 80034d4:	af00      	add	r7, sp, #0
 80034d6:	4b04      	ldr	r3, [pc, #16]	; (80034e8 <xTaskGetTickCount+0x18>)
 80034d8:	681b      	ldr	r3, [r3, #0]
 80034da:	607b      	str	r3, [r7, #4]
 80034dc:	687b      	ldr	r3, [r7, #4]
 80034de:	4618      	mov	r0, r3
 80034e0:	370c      	adds	r7, #12
 80034e2:	46bd      	mov	sp, r7
 80034e4:	bc80      	pop	{r7}
 80034e6:	4770      	bx	lr
 80034e8:	20000c68 	.word	0x20000c68

080034ec <pcTaskGetName>:
 80034ec:	b480      	push	{r7}
 80034ee:	b085      	sub	sp, #20
 80034f0:	af00      	add	r7, sp, #0
 80034f2:	6078      	str	r0, [r7, #4]
 80034f4:	687b      	ldr	r3, [r7, #4]
 80034f6:	2b00      	cmp	r3, #0
 80034f8:	d102      	bne.n	8003500 <pcTaskGetName+0x14>
 80034fa:	4b0c      	ldr	r3, [pc, #48]	; (800352c <pcTaskGetName+0x40>)
 80034fc:	681b      	ldr	r3, [r3, #0]
 80034fe:	e000      	b.n	8003502 <pcTaskGetName+0x16>
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	60fb      	str	r3, [r7, #12]
 8003504:	68fb      	ldr	r3, [r7, #12]
 8003506:	2b00      	cmp	r3, #0
 8003508:	d109      	bne.n	800351e <pcTaskGetName+0x32>
 800350a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800350e:	f383 8811 	msr	BASEPRI, r3
 8003512:	f3bf 8f6f 	isb	sy
 8003516:	f3bf 8f4f 	dsb	sy
 800351a:	60bb      	str	r3, [r7, #8]
 800351c:	e7fe      	b.n	800351c <pcTaskGetName+0x30>
 800351e:	68fb      	ldr	r3, [r7, #12]
 8003520:	3334      	adds	r3, #52	; 0x34
 8003522:	4618      	mov	r0, r3
 8003524:	3714      	adds	r7, #20
 8003526:	46bd      	mov	sp, r7
 8003528:	bc80      	pop	{r7}
 800352a:	4770      	bx	lr
 800352c:	20000790 	.word	0x20000790

08003530 <xTaskIncrementTick>:
 8003530:	b580      	push	{r7, lr}
 8003532:	b086      	sub	sp, #24
 8003534:	af00      	add	r7, sp, #0
 8003536:	2300      	movs	r3, #0
 8003538:	617b      	str	r3, [r7, #20]
 800353a:	4b51      	ldr	r3, [pc, #324]	; (8003680 <xTaskIncrementTick+0x150>)
 800353c:	681b      	ldr	r3, [r3, #0]
 800353e:	2b00      	cmp	r3, #0
 8003540:	f040 808d 	bne.w	800365e <xTaskIncrementTick+0x12e>
 8003544:	4b4f      	ldr	r3, [pc, #316]	; (8003684 <xTaskIncrementTick+0x154>)
 8003546:	681b      	ldr	r3, [r3, #0]
 8003548:	3301      	adds	r3, #1
 800354a:	613b      	str	r3, [r7, #16]
 800354c:	4a4d      	ldr	r2, [pc, #308]	; (8003684 <xTaskIncrementTick+0x154>)
 800354e:	693b      	ldr	r3, [r7, #16]
 8003550:	6013      	str	r3, [r2, #0]
 8003552:	693b      	ldr	r3, [r7, #16]
 8003554:	2b00      	cmp	r3, #0
 8003556:	d11f      	bne.n	8003598 <xTaskIncrementTick+0x68>
 8003558:	4b4b      	ldr	r3, [pc, #300]	; (8003688 <xTaskIncrementTick+0x158>)
 800355a:	681b      	ldr	r3, [r3, #0]
 800355c:	681b      	ldr	r3, [r3, #0]
 800355e:	2b00      	cmp	r3, #0
 8003560:	d009      	beq.n	8003576 <xTaskIncrementTick+0x46>
 8003562:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003566:	f383 8811 	msr	BASEPRI, r3
 800356a:	f3bf 8f6f 	isb	sy
 800356e:	f3bf 8f4f 	dsb	sy
 8003572:	603b      	str	r3, [r7, #0]
 8003574:	e7fe      	b.n	8003574 <xTaskIncrementTick+0x44>
 8003576:	4b44      	ldr	r3, [pc, #272]	; (8003688 <xTaskIncrementTick+0x158>)
 8003578:	681b      	ldr	r3, [r3, #0]
 800357a:	60fb      	str	r3, [r7, #12]
 800357c:	4b43      	ldr	r3, [pc, #268]	; (800368c <xTaskIncrementTick+0x15c>)
 800357e:	681b      	ldr	r3, [r3, #0]
 8003580:	4a41      	ldr	r2, [pc, #260]	; (8003688 <xTaskIncrementTick+0x158>)
 8003582:	6013      	str	r3, [r2, #0]
 8003584:	4a41      	ldr	r2, [pc, #260]	; (800368c <xTaskIncrementTick+0x15c>)
 8003586:	68fb      	ldr	r3, [r7, #12]
 8003588:	6013      	str	r3, [r2, #0]
 800358a:	4b41      	ldr	r3, [pc, #260]	; (8003690 <xTaskIncrementTick+0x160>)
 800358c:	681b      	ldr	r3, [r3, #0]
 800358e:	3301      	adds	r3, #1
 8003590:	4a3f      	ldr	r2, [pc, #252]	; (8003690 <xTaskIncrementTick+0x160>)
 8003592:	6013      	str	r3, [r2, #0]
 8003594:	f000 faca 	bl	8003b2c <prvResetNextTaskUnblockTime>
 8003598:	4b3e      	ldr	r3, [pc, #248]	; (8003694 <xTaskIncrementTick+0x164>)
 800359a:	681b      	ldr	r3, [r3, #0]
 800359c:	693a      	ldr	r2, [r7, #16]
 800359e:	429a      	cmp	r2, r3
 80035a0:	d34e      	bcc.n	8003640 <xTaskIncrementTick+0x110>
 80035a2:	4b39      	ldr	r3, [pc, #228]	; (8003688 <xTaskIncrementTick+0x158>)
 80035a4:	681b      	ldr	r3, [r3, #0]
 80035a6:	681b      	ldr	r3, [r3, #0]
 80035a8:	2b00      	cmp	r3, #0
 80035aa:	d101      	bne.n	80035b0 <xTaskIncrementTick+0x80>
 80035ac:	2301      	movs	r3, #1
 80035ae:	e000      	b.n	80035b2 <xTaskIncrementTick+0x82>
 80035b0:	2300      	movs	r3, #0
 80035b2:	2b00      	cmp	r3, #0
 80035b4:	d004      	beq.n	80035c0 <xTaskIncrementTick+0x90>
 80035b6:	4b37      	ldr	r3, [pc, #220]	; (8003694 <xTaskIncrementTick+0x164>)
 80035b8:	f04f 32ff 	mov.w	r2, #4294967295
 80035bc:	601a      	str	r2, [r3, #0]
 80035be:	e03f      	b.n	8003640 <xTaskIncrementTick+0x110>
 80035c0:	4b31      	ldr	r3, [pc, #196]	; (8003688 <xTaskIncrementTick+0x158>)
 80035c2:	681b      	ldr	r3, [r3, #0]
 80035c4:	68db      	ldr	r3, [r3, #12]
 80035c6:	68db      	ldr	r3, [r3, #12]
 80035c8:	60bb      	str	r3, [r7, #8]
 80035ca:	68bb      	ldr	r3, [r7, #8]
 80035cc:	685b      	ldr	r3, [r3, #4]
 80035ce:	607b      	str	r3, [r7, #4]
 80035d0:	693a      	ldr	r2, [r7, #16]
 80035d2:	687b      	ldr	r3, [r7, #4]
 80035d4:	429a      	cmp	r2, r3
 80035d6:	d203      	bcs.n	80035e0 <xTaskIncrementTick+0xb0>
 80035d8:	4a2e      	ldr	r2, [pc, #184]	; (8003694 <xTaskIncrementTick+0x164>)
 80035da:	687b      	ldr	r3, [r7, #4]
 80035dc:	6013      	str	r3, [r2, #0]
 80035de:	e02f      	b.n	8003640 <xTaskIncrementTick+0x110>
 80035e0:	68bb      	ldr	r3, [r7, #8]
 80035e2:	3304      	adds	r3, #4
 80035e4:	4618      	mov	r0, r3
 80035e6:	f7fe ff45 	bl	8002474 <uxListRemove>
 80035ea:	68bb      	ldr	r3, [r7, #8]
 80035ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80035ee:	2b00      	cmp	r3, #0
 80035f0:	d004      	beq.n	80035fc <xTaskIncrementTick+0xcc>
 80035f2:	68bb      	ldr	r3, [r7, #8]
 80035f4:	3318      	adds	r3, #24
 80035f6:	4618      	mov	r0, r3
 80035f8:	f7fe ff3c 	bl	8002474 <uxListRemove>
 80035fc:	68bb      	ldr	r3, [r7, #8]
 80035fe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003600:	4b25      	ldr	r3, [pc, #148]	; (8003698 <xTaskIncrementTick+0x168>)
 8003602:	681b      	ldr	r3, [r3, #0]
 8003604:	429a      	cmp	r2, r3
 8003606:	d903      	bls.n	8003610 <xTaskIncrementTick+0xe0>
 8003608:	68bb      	ldr	r3, [r7, #8]
 800360a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800360c:	4a22      	ldr	r2, [pc, #136]	; (8003698 <xTaskIncrementTick+0x168>)
 800360e:	6013      	str	r3, [r2, #0]
 8003610:	68bb      	ldr	r3, [r7, #8]
 8003612:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003614:	4613      	mov	r3, r2
 8003616:	009b      	lsls	r3, r3, #2
 8003618:	4413      	add	r3, r2
 800361a:	009b      	lsls	r3, r3, #2
 800361c:	4a1f      	ldr	r2, [pc, #124]	; (800369c <xTaskIncrementTick+0x16c>)
 800361e:	441a      	add	r2, r3
 8003620:	68bb      	ldr	r3, [r7, #8]
 8003622:	3304      	adds	r3, #4
 8003624:	4619      	mov	r1, r3
 8003626:	4610      	mov	r0, r2
 8003628:	f7fe fec9 	bl	80023be <vListInsertEnd>
 800362c:	68bb      	ldr	r3, [r7, #8]
 800362e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003630:	4b1b      	ldr	r3, [pc, #108]	; (80036a0 <xTaskIncrementTick+0x170>)
 8003632:	681b      	ldr	r3, [r3, #0]
 8003634:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003636:	429a      	cmp	r2, r3
 8003638:	d3b3      	bcc.n	80035a2 <xTaskIncrementTick+0x72>
 800363a:	2301      	movs	r3, #1
 800363c:	617b      	str	r3, [r7, #20]
 800363e:	e7b0      	b.n	80035a2 <xTaskIncrementTick+0x72>
 8003640:	4b17      	ldr	r3, [pc, #92]	; (80036a0 <xTaskIncrementTick+0x170>)
 8003642:	681b      	ldr	r3, [r3, #0]
 8003644:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003646:	4915      	ldr	r1, [pc, #84]	; (800369c <xTaskIncrementTick+0x16c>)
 8003648:	4613      	mov	r3, r2
 800364a:	009b      	lsls	r3, r3, #2
 800364c:	4413      	add	r3, r2
 800364e:	009b      	lsls	r3, r3, #2
 8003650:	440b      	add	r3, r1
 8003652:	681b      	ldr	r3, [r3, #0]
 8003654:	2b01      	cmp	r3, #1
 8003656:	d907      	bls.n	8003668 <xTaskIncrementTick+0x138>
 8003658:	2301      	movs	r3, #1
 800365a:	617b      	str	r3, [r7, #20]
 800365c:	e004      	b.n	8003668 <xTaskIncrementTick+0x138>
 800365e:	4b11      	ldr	r3, [pc, #68]	; (80036a4 <xTaskIncrementTick+0x174>)
 8003660:	681b      	ldr	r3, [r3, #0]
 8003662:	3301      	adds	r3, #1
 8003664:	4a0f      	ldr	r2, [pc, #60]	; (80036a4 <xTaskIncrementTick+0x174>)
 8003666:	6013      	str	r3, [r2, #0]
 8003668:	4b0f      	ldr	r3, [pc, #60]	; (80036a8 <xTaskIncrementTick+0x178>)
 800366a:	681b      	ldr	r3, [r3, #0]
 800366c:	2b00      	cmp	r3, #0
 800366e:	d001      	beq.n	8003674 <xTaskIncrementTick+0x144>
 8003670:	2301      	movs	r3, #1
 8003672:	617b      	str	r3, [r7, #20]
 8003674:	697b      	ldr	r3, [r7, #20]
 8003676:	4618      	mov	r0, r3
 8003678:	3718      	adds	r7, #24
 800367a:	46bd      	mov	sp, r7
 800367c:	bd80      	pop	{r7, pc}
 800367e:	bf00      	nop
 8003680:	20000c8c 	.word	0x20000c8c
 8003684:	20000c68 	.word	0x20000c68
 8003688:	20000c1c 	.word	0x20000c1c
 800368c:	20000c20 	.word	0x20000c20
 8003690:	20000c7c 	.word	0x20000c7c
 8003694:	20000c84 	.word	0x20000c84
 8003698:	20000c6c 	.word	0x20000c6c
 800369c:	20000794 	.word	0x20000794
 80036a0:	20000790 	.word	0x20000790
 80036a4:	20000c74 	.word	0x20000c74
 80036a8:	20000c78 	.word	0x20000c78

080036ac <vTaskSwitchContext>:
 80036ac:	b480      	push	{r7}
 80036ae:	b085      	sub	sp, #20
 80036b0:	af00      	add	r7, sp, #0
 80036b2:	4b27      	ldr	r3, [pc, #156]	; (8003750 <vTaskSwitchContext+0xa4>)
 80036b4:	681b      	ldr	r3, [r3, #0]
 80036b6:	2b00      	cmp	r3, #0
 80036b8:	d003      	beq.n	80036c2 <vTaskSwitchContext+0x16>
 80036ba:	4b26      	ldr	r3, [pc, #152]	; (8003754 <vTaskSwitchContext+0xa8>)
 80036bc:	2201      	movs	r2, #1
 80036be:	601a      	str	r2, [r3, #0]
 80036c0:	e040      	b.n	8003744 <vTaskSwitchContext+0x98>
 80036c2:	4b24      	ldr	r3, [pc, #144]	; (8003754 <vTaskSwitchContext+0xa8>)
 80036c4:	2200      	movs	r2, #0
 80036c6:	601a      	str	r2, [r3, #0]
 80036c8:	4b23      	ldr	r3, [pc, #140]	; (8003758 <vTaskSwitchContext+0xac>)
 80036ca:	681b      	ldr	r3, [r3, #0]
 80036cc:	60fb      	str	r3, [r7, #12]
 80036ce:	e00f      	b.n	80036f0 <vTaskSwitchContext+0x44>
 80036d0:	68fb      	ldr	r3, [r7, #12]
 80036d2:	2b00      	cmp	r3, #0
 80036d4:	d109      	bne.n	80036ea <vTaskSwitchContext+0x3e>
 80036d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80036da:	f383 8811 	msr	BASEPRI, r3
 80036de:	f3bf 8f6f 	isb	sy
 80036e2:	f3bf 8f4f 	dsb	sy
 80036e6:	607b      	str	r3, [r7, #4]
 80036e8:	e7fe      	b.n	80036e8 <vTaskSwitchContext+0x3c>
 80036ea:	68fb      	ldr	r3, [r7, #12]
 80036ec:	3b01      	subs	r3, #1
 80036ee:	60fb      	str	r3, [r7, #12]
 80036f0:	491a      	ldr	r1, [pc, #104]	; (800375c <vTaskSwitchContext+0xb0>)
 80036f2:	68fa      	ldr	r2, [r7, #12]
 80036f4:	4613      	mov	r3, r2
 80036f6:	009b      	lsls	r3, r3, #2
 80036f8:	4413      	add	r3, r2
 80036fa:	009b      	lsls	r3, r3, #2
 80036fc:	440b      	add	r3, r1
 80036fe:	681b      	ldr	r3, [r3, #0]
 8003700:	2b00      	cmp	r3, #0
 8003702:	d0e5      	beq.n	80036d0 <vTaskSwitchContext+0x24>
 8003704:	68fa      	ldr	r2, [r7, #12]
 8003706:	4613      	mov	r3, r2
 8003708:	009b      	lsls	r3, r3, #2
 800370a:	4413      	add	r3, r2
 800370c:	009b      	lsls	r3, r3, #2
 800370e:	4a13      	ldr	r2, [pc, #76]	; (800375c <vTaskSwitchContext+0xb0>)
 8003710:	4413      	add	r3, r2
 8003712:	60bb      	str	r3, [r7, #8]
 8003714:	68bb      	ldr	r3, [r7, #8]
 8003716:	685b      	ldr	r3, [r3, #4]
 8003718:	685a      	ldr	r2, [r3, #4]
 800371a:	68bb      	ldr	r3, [r7, #8]
 800371c:	605a      	str	r2, [r3, #4]
 800371e:	68bb      	ldr	r3, [r7, #8]
 8003720:	685a      	ldr	r2, [r3, #4]
 8003722:	68bb      	ldr	r3, [r7, #8]
 8003724:	3308      	adds	r3, #8
 8003726:	429a      	cmp	r2, r3
 8003728:	d104      	bne.n	8003734 <vTaskSwitchContext+0x88>
 800372a:	68bb      	ldr	r3, [r7, #8]
 800372c:	685b      	ldr	r3, [r3, #4]
 800372e:	685a      	ldr	r2, [r3, #4]
 8003730:	68bb      	ldr	r3, [r7, #8]
 8003732:	605a      	str	r2, [r3, #4]
 8003734:	68bb      	ldr	r3, [r7, #8]
 8003736:	685b      	ldr	r3, [r3, #4]
 8003738:	68db      	ldr	r3, [r3, #12]
 800373a:	4a09      	ldr	r2, [pc, #36]	; (8003760 <vTaskSwitchContext+0xb4>)
 800373c:	6013      	str	r3, [r2, #0]
 800373e:	4a06      	ldr	r2, [pc, #24]	; (8003758 <vTaskSwitchContext+0xac>)
 8003740:	68fb      	ldr	r3, [r7, #12]
 8003742:	6013      	str	r3, [r2, #0]
 8003744:	bf00      	nop
 8003746:	3714      	adds	r7, #20
 8003748:	46bd      	mov	sp, r7
 800374a:	bc80      	pop	{r7}
 800374c:	4770      	bx	lr
 800374e:	bf00      	nop
 8003750:	20000c8c 	.word	0x20000c8c
 8003754:	20000c78 	.word	0x20000c78
 8003758:	20000c6c 	.word	0x20000c6c
 800375c:	20000794 	.word	0x20000794
 8003760:	20000790 	.word	0x20000790

08003764 <vTaskPlaceOnEventList>:
 8003764:	b580      	push	{r7, lr}
 8003766:	b084      	sub	sp, #16
 8003768:	af00      	add	r7, sp, #0
 800376a:	6078      	str	r0, [r7, #4]
 800376c:	6039      	str	r1, [r7, #0]
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	2b00      	cmp	r3, #0
 8003772:	d109      	bne.n	8003788 <vTaskPlaceOnEventList+0x24>
 8003774:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003778:	f383 8811 	msr	BASEPRI, r3
 800377c:	f3bf 8f6f 	isb	sy
 8003780:	f3bf 8f4f 	dsb	sy
 8003784:	60fb      	str	r3, [r7, #12]
 8003786:	e7fe      	b.n	8003786 <vTaskPlaceOnEventList+0x22>
 8003788:	4b07      	ldr	r3, [pc, #28]	; (80037a8 <vTaskPlaceOnEventList+0x44>)
 800378a:	681b      	ldr	r3, [r3, #0]
 800378c:	3318      	adds	r3, #24
 800378e:	4619      	mov	r1, r3
 8003790:	6878      	ldr	r0, [r7, #4]
 8003792:	f7fe fe37 	bl	8002404 <vListInsert>
 8003796:	2101      	movs	r1, #1
 8003798:	6838      	ldr	r0, [r7, #0]
 800379a:	f000 fa75 	bl	8003c88 <prvAddCurrentTaskToDelayedList>
 800379e:	bf00      	nop
 80037a0:	3710      	adds	r7, #16
 80037a2:	46bd      	mov	sp, r7
 80037a4:	bd80      	pop	{r7, pc}
 80037a6:	bf00      	nop
 80037a8:	20000790 	.word	0x20000790

080037ac <vTaskPlaceOnEventListRestricted>:
 80037ac:	b580      	push	{r7, lr}
 80037ae:	b086      	sub	sp, #24
 80037b0:	af00      	add	r7, sp, #0
 80037b2:	60f8      	str	r0, [r7, #12]
 80037b4:	60b9      	str	r1, [r7, #8]
 80037b6:	607a      	str	r2, [r7, #4]
 80037b8:	68fb      	ldr	r3, [r7, #12]
 80037ba:	2b00      	cmp	r3, #0
 80037bc:	d109      	bne.n	80037d2 <vTaskPlaceOnEventListRestricted+0x26>
 80037be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80037c2:	f383 8811 	msr	BASEPRI, r3
 80037c6:	f3bf 8f6f 	isb	sy
 80037ca:	f3bf 8f4f 	dsb	sy
 80037ce:	617b      	str	r3, [r7, #20]
 80037d0:	e7fe      	b.n	80037d0 <vTaskPlaceOnEventListRestricted+0x24>
 80037d2:	4b0a      	ldr	r3, [pc, #40]	; (80037fc <vTaskPlaceOnEventListRestricted+0x50>)
 80037d4:	681b      	ldr	r3, [r3, #0]
 80037d6:	3318      	adds	r3, #24
 80037d8:	4619      	mov	r1, r3
 80037da:	68f8      	ldr	r0, [r7, #12]
 80037dc:	f7fe fdef 	bl	80023be <vListInsertEnd>
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	2b00      	cmp	r3, #0
 80037e4:	d002      	beq.n	80037ec <vTaskPlaceOnEventListRestricted+0x40>
 80037e6:	f04f 33ff 	mov.w	r3, #4294967295
 80037ea:	60bb      	str	r3, [r7, #8]
 80037ec:	6879      	ldr	r1, [r7, #4]
 80037ee:	68b8      	ldr	r0, [r7, #8]
 80037f0:	f000 fa4a 	bl	8003c88 <prvAddCurrentTaskToDelayedList>
 80037f4:	bf00      	nop
 80037f6:	3718      	adds	r7, #24
 80037f8:	46bd      	mov	sp, r7
 80037fa:	bd80      	pop	{r7, pc}
 80037fc:	20000790 	.word	0x20000790

08003800 <xTaskRemoveFromEventList>:
 8003800:	b580      	push	{r7, lr}
 8003802:	b086      	sub	sp, #24
 8003804:	af00      	add	r7, sp, #0
 8003806:	6078      	str	r0, [r7, #4]
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	68db      	ldr	r3, [r3, #12]
 800380c:	68db      	ldr	r3, [r3, #12]
 800380e:	613b      	str	r3, [r7, #16]
 8003810:	693b      	ldr	r3, [r7, #16]
 8003812:	2b00      	cmp	r3, #0
 8003814:	d109      	bne.n	800382a <xTaskRemoveFromEventList+0x2a>
 8003816:	f04f 0350 	mov.w	r3, #80	; 0x50
 800381a:	f383 8811 	msr	BASEPRI, r3
 800381e:	f3bf 8f6f 	isb	sy
 8003822:	f3bf 8f4f 	dsb	sy
 8003826:	60fb      	str	r3, [r7, #12]
 8003828:	e7fe      	b.n	8003828 <xTaskRemoveFromEventList+0x28>
 800382a:	693b      	ldr	r3, [r7, #16]
 800382c:	3318      	adds	r3, #24
 800382e:	4618      	mov	r0, r3
 8003830:	f7fe fe20 	bl	8002474 <uxListRemove>
 8003834:	4b1d      	ldr	r3, [pc, #116]	; (80038ac <xTaskRemoveFromEventList+0xac>)
 8003836:	681b      	ldr	r3, [r3, #0]
 8003838:	2b00      	cmp	r3, #0
 800383a:	d11d      	bne.n	8003878 <xTaskRemoveFromEventList+0x78>
 800383c:	693b      	ldr	r3, [r7, #16]
 800383e:	3304      	adds	r3, #4
 8003840:	4618      	mov	r0, r3
 8003842:	f7fe fe17 	bl	8002474 <uxListRemove>
 8003846:	693b      	ldr	r3, [r7, #16]
 8003848:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800384a:	4b19      	ldr	r3, [pc, #100]	; (80038b0 <xTaskRemoveFromEventList+0xb0>)
 800384c:	681b      	ldr	r3, [r3, #0]
 800384e:	429a      	cmp	r2, r3
 8003850:	d903      	bls.n	800385a <xTaskRemoveFromEventList+0x5a>
 8003852:	693b      	ldr	r3, [r7, #16]
 8003854:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003856:	4a16      	ldr	r2, [pc, #88]	; (80038b0 <xTaskRemoveFromEventList+0xb0>)
 8003858:	6013      	str	r3, [r2, #0]
 800385a:	693b      	ldr	r3, [r7, #16]
 800385c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800385e:	4613      	mov	r3, r2
 8003860:	009b      	lsls	r3, r3, #2
 8003862:	4413      	add	r3, r2
 8003864:	009b      	lsls	r3, r3, #2
 8003866:	4a13      	ldr	r2, [pc, #76]	; (80038b4 <xTaskRemoveFromEventList+0xb4>)
 8003868:	441a      	add	r2, r3
 800386a:	693b      	ldr	r3, [r7, #16]
 800386c:	3304      	adds	r3, #4
 800386e:	4619      	mov	r1, r3
 8003870:	4610      	mov	r0, r2
 8003872:	f7fe fda4 	bl	80023be <vListInsertEnd>
 8003876:	e005      	b.n	8003884 <xTaskRemoveFromEventList+0x84>
 8003878:	693b      	ldr	r3, [r7, #16]
 800387a:	3318      	adds	r3, #24
 800387c:	4619      	mov	r1, r3
 800387e:	480e      	ldr	r0, [pc, #56]	; (80038b8 <xTaskRemoveFromEventList+0xb8>)
 8003880:	f7fe fd9d 	bl	80023be <vListInsertEnd>
 8003884:	693b      	ldr	r3, [r7, #16]
 8003886:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003888:	4b0c      	ldr	r3, [pc, #48]	; (80038bc <xTaskRemoveFromEventList+0xbc>)
 800388a:	681b      	ldr	r3, [r3, #0]
 800388c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800388e:	429a      	cmp	r2, r3
 8003890:	d905      	bls.n	800389e <xTaskRemoveFromEventList+0x9e>
 8003892:	2301      	movs	r3, #1
 8003894:	617b      	str	r3, [r7, #20]
 8003896:	4b0a      	ldr	r3, [pc, #40]	; (80038c0 <xTaskRemoveFromEventList+0xc0>)
 8003898:	2201      	movs	r2, #1
 800389a:	601a      	str	r2, [r3, #0]
 800389c:	e001      	b.n	80038a2 <xTaskRemoveFromEventList+0xa2>
 800389e:	2300      	movs	r3, #0
 80038a0:	617b      	str	r3, [r7, #20]
 80038a2:	697b      	ldr	r3, [r7, #20]
 80038a4:	4618      	mov	r0, r3
 80038a6:	3718      	adds	r7, #24
 80038a8:	46bd      	mov	sp, r7
 80038aa:	bd80      	pop	{r7, pc}
 80038ac:	20000c8c 	.word	0x20000c8c
 80038b0:	20000c6c 	.word	0x20000c6c
 80038b4:	20000794 	.word	0x20000794
 80038b8:	20000c24 	.word	0x20000c24
 80038bc:	20000790 	.word	0x20000790
 80038c0:	20000c78 	.word	0x20000c78

080038c4 <vTaskInternalSetTimeOutState>:
 80038c4:	b480      	push	{r7}
 80038c6:	b083      	sub	sp, #12
 80038c8:	af00      	add	r7, sp, #0
 80038ca:	6078      	str	r0, [r7, #4]
 80038cc:	4b06      	ldr	r3, [pc, #24]	; (80038e8 <vTaskInternalSetTimeOutState+0x24>)
 80038ce:	681a      	ldr	r2, [r3, #0]
 80038d0:	687b      	ldr	r3, [r7, #4]
 80038d2:	601a      	str	r2, [r3, #0]
 80038d4:	4b05      	ldr	r3, [pc, #20]	; (80038ec <vTaskInternalSetTimeOutState+0x28>)
 80038d6:	681a      	ldr	r2, [r3, #0]
 80038d8:	687b      	ldr	r3, [r7, #4]
 80038da:	605a      	str	r2, [r3, #4]
 80038dc:	bf00      	nop
 80038de:	370c      	adds	r7, #12
 80038e0:	46bd      	mov	sp, r7
 80038e2:	bc80      	pop	{r7}
 80038e4:	4770      	bx	lr
 80038e6:	bf00      	nop
 80038e8:	20000c7c 	.word	0x20000c7c
 80038ec:	20000c68 	.word	0x20000c68

080038f0 <xTaskCheckForTimeOut>:
 80038f0:	b580      	push	{r7, lr}
 80038f2:	b088      	sub	sp, #32
 80038f4:	af00      	add	r7, sp, #0
 80038f6:	6078      	str	r0, [r7, #4]
 80038f8:	6039      	str	r1, [r7, #0]
 80038fa:	687b      	ldr	r3, [r7, #4]
 80038fc:	2b00      	cmp	r3, #0
 80038fe:	d109      	bne.n	8003914 <xTaskCheckForTimeOut+0x24>
 8003900:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003904:	f383 8811 	msr	BASEPRI, r3
 8003908:	f3bf 8f6f 	isb	sy
 800390c:	f3bf 8f4f 	dsb	sy
 8003910:	613b      	str	r3, [r7, #16]
 8003912:	e7fe      	b.n	8003912 <xTaskCheckForTimeOut+0x22>
 8003914:	683b      	ldr	r3, [r7, #0]
 8003916:	2b00      	cmp	r3, #0
 8003918:	d109      	bne.n	800392e <xTaskCheckForTimeOut+0x3e>
 800391a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800391e:	f383 8811 	msr	BASEPRI, r3
 8003922:	f3bf 8f6f 	isb	sy
 8003926:	f3bf 8f4f 	dsb	sy
 800392a:	60fb      	str	r3, [r7, #12]
 800392c:	e7fe      	b.n	800392c <xTaskCheckForTimeOut+0x3c>
 800392e:	f000 fdf3 	bl	8004518 <vPortEnterCritical>
 8003932:	4b1d      	ldr	r3, [pc, #116]	; (80039a8 <xTaskCheckForTimeOut+0xb8>)
 8003934:	681b      	ldr	r3, [r3, #0]
 8003936:	61bb      	str	r3, [r7, #24]
 8003938:	687b      	ldr	r3, [r7, #4]
 800393a:	685b      	ldr	r3, [r3, #4]
 800393c:	69ba      	ldr	r2, [r7, #24]
 800393e:	1ad3      	subs	r3, r2, r3
 8003940:	617b      	str	r3, [r7, #20]
 8003942:	683b      	ldr	r3, [r7, #0]
 8003944:	681b      	ldr	r3, [r3, #0]
 8003946:	f1b3 3fff 	cmp.w	r3, #4294967295
 800394a:	d102      	bne.n	8003952 <xTaskCheckForTimeOut+0x62>
 800394c:	2300      	movs	r3, #0
 800394e:	61fb      	str	r3, [r7, #28]
 8003950:	e023      	b.n	800399a <xTaskCheckForTimeOut+0xaa>
 8003952:	687b      	ldr	r3, [r7, #4]
 8003954:	681a      	ldr	r2, [r3, #0]
 8003956:	4b15      	ldr	r3, [pc, #84]	; (80039ac <xTaskCheckForTimeOut+0xbc>)
 8003958:	681b      	ldr	r3, [r3, #0]
 800395a:	429a      	cmp	r2, r3
 800395c:	d007      	beq.n	800396e <xTaskCheckForTimeOut+0x7e>
 800395e:	687b      	ldr	r3, [r7, #4]
 8003960:	685b      	ldr	r3, [r3, #4]
 8003962:	69ba      	ldr	r2, [r7, #24]
 8003964:	429a      	cmp	r2, r3
 8003966:	d302      	bcc.n	800396e <xTaskCheckForTimeOut+0x7e>
 8003968:	2301      	movs	r3, #1
 800396a:	61fb      	str	r3, [r7, #28]
 800396c:	e015      	b.n	800399a <xTaskCheckForTimeOut+0xaa>
 800396e:	683b      	ldr	r3, [r7, #0]
 8003970:	681b      	ldr	r3, [r3, #0]
 8003972:	697a      	ldr	r2, [r7, #20]
 8003974:	429a      	cmp	r2, r3
 8003976:	d20b      	bcs.n	8003990 <xTaskCheckForTimeOut+0xa0>
 8003978:	683b      	ldr	r3, [r7, #0]
 800397a:	681a      	ldr	r2, [r3, #0]
 800397c:	697b      	ldr	r3, [r7, #20]
 800397e:	1ad2      	subs	r2, r2, r3
 8003980:	683b      	ldr	r3, [r7, #0]
 8003982:	601a      	str	r2, [r3, #0]
 8003984:	6878      	ldr	r0, [r7, #4]
 8003986:	f7ff ff9d 	bl	80038c4 <vTaskInternalSetTimeOutState>
 800398a:	2300      	movs	r3, #0
 800398c:	61fb      	str	r3, [r7, #28]
 800398e:	e004      	b.n	800399a <xTaskCheckForTimeOut+0xaa>
 8003990:	683b      	ldr	r3, [r7, #0]
 8003992:	2200      	movs	r2, #0
 8003994:	601a      	str	r2, [r3, #0]
 8003996:	2301      	movs	r3, #1
 8003998:	61fb      	str	r3, [r7, #28]
 800399a:	f000 fdeb 	bl	8004574 <vPortExitCritical>
 800399e:	69fb      	ldr	r3, [r7, #28]
 80039a0:	4618      	mov	r0, r3
 80039a2:	3720      	adds	r7, #32
 80039a4:	46bd      	mov	sp, r7
 80039a6:	bd80      	pop	{r7, pc}
 80039a8:	20000c68 	.word	0x20000c68
 80039ac:	20000c7c 	.word	0x20000c7c

080039b0 <vTaskMissedYield>:
 80039b0:	b480      	push	{r7}
 80039b2:	af00      	add	r7, sp, #0
 80039b4:	4b03      	ldr	r3, [pc, #12]	; (80039c4 <vTaskMissedYield+0x14>)
 80039b6:	2201      	movs	r2, #1
 80039b8:	601a      	str	r2, [r3, #0]
 80039ba:	bf00      	nop
 80039bc:	46bd      	mov	sp, r7
 80039be:	bc80      	pop	{r7}
 80039c0:	4770      	bx	lr
 80039c2:	bf00      	nop
 80039c4:	20000c78 	.word	0x20000c78

080039c8 <prvIdleTask>:
 80039c8:	b580      	push	{r7, lr}
 80039ca:	b082      	sub	sp, #8
 80039cc:	af00      	add	r7, sp, #0
 80039ce:	6078      	str	r0, [r7, #4]
 80039d0:	f000 f852 	bl	8003a78 <prvCheckTasksWaitingTermination>
 80039d4:	4b06      	ldr	r3, [pc, #24]	; (80039f0 <prvIdleTask+0x28>)
 80039d6:	681b      	ldr	r3, [r3, #0]
 80039d8:	2b01      	cmp	r3, #1
 80039da:	d9f9      	bls.n	80039d0 <prvIdleTask+0x8>
 80039dc:	4b05      	ldr	r3, [pc, #20]	; (80039f4 <prvIdleTask+0x2c>)
 80039de:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80039e2:	601a      	str	r2, [r3, #0]
 80039e4:	f3bf 8f4f 	dsb	sy
 80039e8:	f3bf 8f6f 	isb	sy
 80039ec:	e7f0      	b.n	80039d0 <prvIdleTask+0x8>
 80039ee:	bf00      	nop
 80039f0:	20000794 	.word	0x20000794
 80039f4:	e000ed04 	.word	0xe000ed04

080039f8 <prvInitialiseTaskLists>:
 80039f8:	b580      	push	{r7, lr}
 80039fa:	b082      	sub	sp, #8
 80039fc:	af00      	add	r7, sp, #0
 80039fe:	2300      	movs	r3, #0
 8003a00:	607b      	str	r3, [r7, #4]
 8003a02:	e00c      	b.n	8003a1e <prvInitialiseTaskLists+0x26>
 8003a04:	687a      	ldr	r2, [r7, #4]
 8003a06:	4613      	mov	r3, r2
 8003a08:	009b      	lsls	r3, r3, #2
 8003a0a:	4413      	add	r3, r2
 8003a0c:	009b      	lsls	r3, r3, #2
 8003a0e:	4a12      	ldr	r2, [pc, #72]	; (8003a58 <prvInitialiseTaskLists+0x60>)
 8003a10:	4413      	add	r3, r2
 8003a12:	4618      	mov	r0, r3
 8003a14:	f7fe fca8 	bl	8002368 <vListInitialise>
 8003a18:	687b      	ldr	r3, [r7, #4]
 8003a1a:	3301      	adds	r3, #1
 8003a1c:	607b      	str	r3, [r7, #4]
 8003a1e:	687b      	ldr	r3, [r7, #4]
 8003a20:	2b37      	cmp	r3, #55	; 0x37
 8003a22:	d9ef      	bls.n	8003a04 <prvInitialiseTaskLists+0xc>
 8003a24:	480d      	ldr	r0, [pc, #52]	; (8003a5c <prvInitialiseTaskLists+0x64>)
 8003a26:	f7fe fc9f 	bl	8002368 <vListInitialise>
 8003a2a:	480d      	ldr	r0, [pc, #52]	; (8003a60 <prvInitialiseTaskLists+0x68>)
 8003a2c:	f7fe fc9c 	bl	8002368 <vListInitialise>
 8003a30:	480c      	ldr	r0, [pc, #48]	; (8003a64 <prvInitialiseTaskLists+0x6c>)
 8003a32:	f7fe fc99 	bl	8002368 <vListInitialise>
 8003a36:	480c      	ldr	r0, [pc, #48]	; (8003a68 <prvInitialiseTaskLists+0x70>)
 8003a38:	f7fe fc96 	bl	8002368 <vListInitialise>
 8003a3c:	480b      	ldr	r0, [pc, #44]	; (8003a6c <prvInitialiseTaskLists+0x74>)
 8003a3e:	f7fe fc93 	bl	8002368 <vListInitialise>
 8003a42:	4b0b      	ldr	r3, [pc, #44]	; (8003a70 <prvInitialiseTaskLists+0x78>)
 8003a44:	4a05      	ldr	r2, [pc, #20]	; (8003a5c <prvInitialiseTaskLists+0x64>)
 8003a46:	601a      	str	r2, [r3, #0]
 8003a48:	4b0a      	ldr	r3, [pc, #40]	; (8003a74 <prvInitialiseTaskLists+0x7c>)
 8003a4a:	4a05      	ldr	r2, [pc, #20]	; (8003a60 <prvInitialiseTaskLists+0x68>)
 8003a4c:	601a      	str	r2, [r3, #0]
 8003a4e:	bf00      	nop
 8003a50:	3708      	adds	r7, #8
 8003a52:	46bd      	mov	sp, r7
 8003a54:	bd80      	pop	{r7, pc}
 8003a56:	bf00      	nop
 8003a58:	20000794 	.word	0x20000794
 8003a5c:	20000bf4 	.word	0x20000bf4
 8003a60:	20000c08 	.word	0x20000c08
 8003a64:	20000c24 	.word	0x20000c24
 8003a68:	20000c38 	.word	0x20000c38
 8003a6c:	20000c50 	.word	0x20000c50
 8003a70:	20000c1c 	.word	0x20000c1c
 8003a74:	20000c20 	.word	0x20000c20

08003a78 <prvCheckTasksWaitingTermination>:
 8003a78:	b580      	push	{r7, lr}
 8003a7a:	b082      	sub	sp, #8
 8003a7c:	af00      	add	r7, sp, #0
 8003a7e:	e019      	b.n	8003ab4 <prvCheckTasksWaitingTermination+0x3c>
 8003a80:	f000 fd4a 	bl	8004518 <vPortEnterCritical>
 8003a84:	4b0f      	ldr	r3, [pc, #60]	; (8003ac4 <prvCheckTasksWaitingTermination+0x4c>)
 8003a86:	68db      	ldr	r3, [r3, #12]
 8003a88:	68db      	ldr	r3, [r3, #12]
 8003a8a:	607b      	str	r3, [r7, #4]
 8003a8c:	687b      	ldr	r3, [r7, #4]
 8003a8e:	3304      	adds	r3, #4
 8003a90:	4618      	mov	r0, r3
 8003a92:	f7fe fcef 	bl	8002474 <uxListRemove>
 8003a96:	4b0c      	ldr	r3, [pc, #48]	; (8003ac8 <prvCheckTasksWaitingTermination+0x50>)
 8003a98:	681b      	ldr	r3, [r3, #0]
 8003a9a:	3b01      	subs	r3, #1
 8003a9c:	4a0a      	ldr	r2, [pc, #40]	; (8003ac8 <prvCheckTasksWaitingTermination+0x50>)
 8003a9e:	6013      	str	r3, [r2, #0]
 8003aa0:	4b0a      	ldr	r3, [pc, #40]	; (8003acc <prvCheckTasksWaitingTermination+0x54>)
 8003aa2:	681b      	ldr	r3, [r3, #0]
 8003aa4:	3b01      	subs	r3, #1
 8003aa6:	4a09      	ldr	r2, [pc, #36]	; (8003acc <prvCheckTasksWaitingTermination+0x54>)
 8003aa8:	6013      	str	r3, [r2, #0]
 8003aaa:	f000 fd63 	bl	8004574 <vPortExitCritical>
 8003aae:	6878      	ldr	r0, [r7, #4]
 8003ab0:	f000 f80e 	bl	8003ad0 <prvDeleteTCB>
 8003ab4:	4b05      	ldr	r3, [pc, #20]	; (8003acc <prvCheckTasksWaitingTermination+0x54>)
 8003ab6:	681b      	ldr	r3, [r3, #0]
 8003ab8:	2b00      	cmp	r3, #0
 8003aba:	d1e1      	bne.n	8003a80 <prvCheckTasksWaitingTermination+0x8>
 8003abc:	bf00      	nop
 8003abe:	3708      	adds	r7, #8
 8003ac0:	46bd      	mov	sp, r7
 8003ac2:	bd80      	pop	{r7, pc}
 8003ac4:	20000c38 	.word	0x20000c38
 8003ac8:	20000c64 	.word	0x20000c64
 8003acc:	20000c4c 	.word	0x20000c4c

08003ad0 <prvDeleteTCB>:
 8003ad0:	b580      	push	{r7, lr}
 8003ad2:	b084      	sub	sp, #16
 8003ad4:	af00      	add	r7, sp, #0
 8003ad6:	6078      	str	r0, [r7, #4]
 8003ad8:	687b      	ldr	r3, [r7, #4]
 8003ada:	f893 3059 	ldrb.w	r3, [r3, #89]	; 0x59
 8003ade:	2b00      	cmp	r3, #0
 8003ae0:	d108      	bne.n	8003af4 <prvDeleteTCB+0x24>
 8003ae2:	687b      	ldr	r3, [r7, #4]
 8003ae4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003ae6:	4618      	mov	r0, r3
 8003ae8:	f000 fece 	bl	8004888 <vPortFree>
 8003aec:	6878      	ldr	r0, [r7, #4]
 8003aee:	f000 fecb 	bl	8004888 <vPortFree>
 8003af2:	e017      	b.n	8003b24 <prvDeleteTCB+0x54>
 8003af4:	687b      	ldr	r3, [r7, #4]
 8003af6:	f893 3059 	ldrb.w	r3, [r3, #89]	; 0x59
 8003afa:	2b01      	cmp	r3, #1
 8003afc:	d103      	bne.n	8003b06 <prvDeleteTCB+0x36>
 8003afe:	6878      	ldr	r0, [r7, #4]
 8003b00:	f000 fec2 	bl	8004888 <vPortFree>
 8003b04:	e00e      	b.n	8003b24 <prvDeleteTCB+0x54>
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	f893 3059 	ldrb.w	r3, [r3, #89]	; 0x59
 8003b0c:	2b02      	cmp	r3, #2
 8003b0e:	d009      	beq.n	8003b24 <prvDeleteTCB+0x54>
 8003b10:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003b14:	f383 8811 	msr	BASEPRI, r3
 8003b18:	f3bf 8f6f 	isb	sy
 8003b1c:	f3bf 8f4f 	dsb	sy
 8003b20:	60fb      	str	r3, [r7, #12]
 8003b22:	e7fe      	b.n	8003b22 <prvDeleteTCB+0x52>
 8003b24:	bf00      	nop
 8003b26:	3710      	adds	r7, #16
 8003b28:	46bd      	mov	sp, r7
 8003b2a:	bd80      	pop	{r7, pc}

08003b2c <prvResetNextTaskUnblockTime>:
 8003b2c:	b480      	push	{r7}
 8003b2e:	b083      	sub	sp, #12
 8003b30:	af00      	add	r7, sp, #0
 8003b32:	4b0e      	ldr	r3, [pc, #56]	; (8003b6c <prvResetNextTaskUnblockTime+0x40>)
 8003b34:	681b      	ldr	r3, [r3, #0]
 8003b36:	681b      	ldr	r3, [r3, #0]
 8003b38:	2b00      	cmp	r3, #0
 8003b3a:	d101      	bne.n	8003b40 <prvResetNextTaskUnblockTime+0x14>
 8003b3c:	2301      	movs	r3, #1
 8003b3e:	e000      	b.n	8003b42 <prvResetNextTaskUnblockTime+0x16>
 8003b40:	2300      	movs	r3, #0
 8003b42:	2b00      	cmp	r3, #0
 8003b44:	d004      	beq.n	8003b50 <prvResetNextTaskUnblockTime+0x24>
 8003b46:	4b0a      	ldr	r3, [pc, #40]	; (8003b70 <prvResetNextTaskUnblockTime+0x44>)
 8003b48:	f04f 32ff 	mov.w	r2, #4294967295
 8003b4c:	601a      	str	r2, [r3, #0]
 8003b4e:	e008      	b.n	8003b62 <prvResetNextTaskUnblockTime+0x36>
 8003b50:	4b06      	ldr	r3, [pc, #24]	; (8003b6c <prvResetNextTaskUnblockTime+0x40>)
 8003b52:	681b      	ldr	r3, [r3, #0]
 8003b54:	68db      	ldr	r3, [r3, #12]
 8003b56:	68db      	ldr	r3, [r3, #12]
 8003b58:	607b      	str	r3, [r7, #4]
 8003b5a:	687b      	ldr	r3, [r7, #4]
 8003b5c:	685b      	ldr	r3, [r3, #4]
 8003b5e:	4a04      	ldr	r2, [pc, #16]	; (8003b70 <prvResetNextTaskUnblockTime+0x44>)
 8003b60:	6013      	str	r3, [r2, #0]
 8003b62:	bf00      	nop
 8003b64:	370c      	adds	r7, #12
 8003b66:	46bd      	mov	sp, r7
 8003b68:	bc80      	pop	{r7}
 8003b6a:	4770      	bx	lr
 8003b6c:	20000c1c 	.word	0x20000c1c
 8003b70:	20000c84 	.word	0x20000c84

08003b74 <xTaskGetSchedulerState>:
 8003b74:	b480      	push	{r7}
 8003b76:	b083      	sub	sp, #12
 8003b78:	af00      	add	r7, sp, #0
 8003b7a:	4b0b      	ldr	r3, [pc, #44]	; (8003ba8 <xTaskGetSchedulerState+0x34>)
 8003b7c:	681b      	ldr	r3, [r3, #0]
 8003b7e:	2b00      	cmp	r3, #0
 8003b80:	d102      	bne.n	8003b88 <xTaskGetSchedulerState+0x14>
 8003b82:	2301      	movs	r3, #1
 8003b84:	607b      	str	r3, [r7, #4]
 8003b86:	e008      	b.n	8003b9a <xTaskGetSchedulerState+0x26>
 8003b88:	4b08      	ldr	r3, [pc, #32]	; (8003bac <xTaskGetSchedulerState+0x38>)
 8003b8a:	681b      	ldr	r3, [r3, #0]
 8003b8c:	2b00      	cmp	r3, #0
 8003b8e:	d102      	bne.n	8003b96 <xTaskGetSchedulerState+0x22>
 8003b90:	2302      	movs	r3, #2
 8003b92:	607b      	str	r3, [r7, #4]
 8003b94:	e001      	b.n	8003b9a <xTaskGetSchedulerState+0x26>
 8003b96:	2300      	movs	r3, #0
 8003b98:	607b      	str	r3, [r7, #4]
 8003b9a:	687b      	ldr	r3, [r7, #4]
 8003b9c:	4618      	mov	r0, r3
 8003b9e:	370c      	adds	r7, #12
 8003ba0:	46bd      	mov	sp, r7
 8003ba2:	bc80      	pop	{r7}
 8003ba4:	4770      	bx	lr
 8003ba6:	bf00      	nop
 8003ba8:	20000c70 	.word	0x20000c70
 8003bac:	20000c8c 	.word	0x20000c8c

08003bb0 <xTaskPriorityDisinherit>:
 8003bb0:	b580      	push	{r7, lr}
 8003bb2:	b086      	sub	sp, #24
 8003bb4:	af00      	add	r7, sp, #0
 8003bb6:	6078      	str	r0, [r7, #4]
 8003bb8:	687b      	ldr	r3, [r7, #4]
 8003bba:	613b      	str	r3, [r7, #16]
 8003bbc:	2300      	movs	r3, #0
 8003bbe:	617b      	str	r3, [r7, #20]
 8003bc0:	687b      	ldr	r3, [r7, #4]
 8003bc2:	2b00      	cmp	r3, #0
 8003bc4:	d054      	beq.n	8003c70 <xTaskPriorityDisinherit+0xc0>
 8003bc6:	4b2d      	ldr	r3, [pc, #180]	; (8003c7c <xTaskPriorityDisinherit+0xcc>)
 8003bc8:	681b      	ldr	r3, [r3, #0]
 8003bca:	693a      	ldr	r2, [r7, #16]
 8003bcc:	429a      	cmp	r2, r3
 8003bce:	d009      	beq.n	8003be4 <xTaskPriorityDisinherit+0x34>
 8003bd0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003bd4:	f383 8811 	msr	BASEPRI, r3
 8003bd8:	f3bf 8f6f 	isb	sy
 8003bdc:	f3bf 8f4f 	dsb	sy
 8003be0:	60fb      	str	r3, [r7, #12]
 8003be2:	e7fe      	b.n	8003be2 <xTaskPriorityDisinherit+0x32>
 8003be4:	693b      	ldr	r3, [r7, #16]
 8003be6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003be8:	2b00      	cmp	r3, #0
 8003bea:	d109      	bne.n	8003c00 <xTaskPriorityDisinherit+0x50>
 8003bec:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003bf0:	f383 8811 	msr	BASEPRI, r3
 8003bf4:	f3bf 8f6f 	isb	sy
 8003bf8:	f3bf 8f4f 	dsb	sy
 8003bfc:	60bb      	str	r3, [r7, #8]
 8003bfe:	e7fe      	b.n	8003bfe <xTaskPriorityDisinherit+0x4e>
 8003c00:	693b      	ldr	r3, [r7, #16]
 8003c02:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003c04:	1e5a      	subs	r2, r3, #1
 8003c06:	693b      	ldr	r3, [r7, #16]
 8003c08:	651a      	str	r2, [r3, #80]	; 0x50
 8003c0a:	693b      	ldr	r3, [r7, #16]
 8003c0c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003c0e:	693b      	ldr	r3, [r7, #16]
 8003c10:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8003c12:	429a      	cmp	r2, r3
 8003c14:	d02c      	beq.n	8003c70 <xTaskPriorityDisinherit+0xc0>
 8003c16:	693b      	ldr	r3, [r7, #16]
 8003c18:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003c1a:	2b00      	cmp	r3, #0
 8003c1c:	d128      	bne.n	8003c70 <xTaskPriorityDisinherit+0xc0>
 8003c1e:	693b      	ldr	r3, [r7, #16]
 8003c20:	3304      	adds	r3, #4
 8003c22:	4618      	mov	r0, r3
 8003c24:	f7fe fc26 	bl	8002474 <uxListRemove>
 8003c28:	693b      	ldr	r3, [r7, #16]
 8003c2a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8003c2c:	693b      	ldr	r3, [r7, #16]
 8003c2e:	62da      	str	r2, [r3, #44]	; 0x2c
 8003c30:	693b      	ldr	r3, [r7, #16]
 8003c32:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003c34:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 8003c38:	693b      	ldr	r3, [r7, #16]
 8003c3a:	619a      	str	r2, [r3, #24]
 8003c3c:	693b      	ldr	r3, [r7, #16]
 8003c3e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003c40:	4b0f      	ldr	r3, [pc, #60]	; (8003c80 <xTaskPriorityDisinherit+0xd0>)
 8003c42:	681b      	ldr	r3, [r3, #0]
 8003c44:	429a      	cmp	r2, r3
 8003c46:	d903      	bls.n	8003c50 <xTaskPriorityDisinherit+0xa0>
 8003c48:	693b      	ldr	r3, [r7, #16]
 8003c4a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003c4c:	4a0c      	ldr	r2, [pc, #48]	; (8003c80 <xTaskPriorityDisinherit+0xd0>)
 8003c4e:	6013      	str	r3, [r2, #0]
 8003c50:	693b      	ldr	r3, [r7, #16]
 8003c52:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003c54:	4613      	mov	r3, r2
 8003c56:	009b      	lsls	r3, r3, #2
 8003c58:	4413      	add	r3, r2
 8003c5a:	009b      	lsls	r3, r3, #2
 8003c5c:	4a09      	ldr	r2, [pc, #36]	; (8003c84 <xTaskPriorityDisinherit+0xd4>)
 8003c5e:	441a      	add	r2, r3
 8003c60:	693b      	ldr	r3, [r7, #16]
 8003c62:	3304      	adds	r3, #4
 8003c64:	4619      	mov	r1, r3
 8003c66:	4610      	mov	r0, r2
 8003c68:	f7fe fba9 	bl	80023be <vListInsertEnd>
 8003c6c:	2301      	movs	r3, #1
 8003c6e:	617b      	str	r3, [r7, #20]
 8003c70:	697b      	ldr	r3, [r7, #20]
 8003c72:	4618      	mov	r0, r3
 8003c74:	3718      	adds	r7, #24
 8003c76:	46bd      	mov	sp, r7
 8003c78:	bd80      	pop	{r7, pc}
 8003c7a:	bf00      	nop
 8003c7c:	20000790 	.word	0x20000790
 8003c80:	20000c6c 	.word	0x20000c6c
 8003c84:	20000794 	.word	0x20000794

08003c88 <prvAddCurrentTaskToDelayedList>:
 8003c88:	b580      	push	{r7, lr}
 8003c8a:	b084      	sub	sp, #16
 8003c8c:	af00      	add	r7, sp, #0
 8003c8e:	6078      	str	r0, [r7, #4]
 8003c90:	6039      	str	r1, [r7, #0]
 8003c92:	4b21      	ldr	r3, [pc, #132]	; (8003d18 <prvAddCurrentTaskToDelayedList+0x90>)
 8003c94:	681b      	ldr	r3, [r3, #0]
 8003c96:	60fb      	str	r3, [r7, #12]
 8003c98:	4b20      	ldr	r3, [pc, #128]	; (8003d1c <prvAddCurrentTaskToDelayedList+0x94>)
 8003c9a:	681b      	ldr	r3, [r3, #0]
 8003c9c:	3304      	adds	r3, #4
 8003c9e:	4618      	mov	r0, r3
 8003ca0:	f7fe fbe8 	bl	8002474 <uxListRemove>
 8003ca4:	687b      	ldr	r3, [r7, #4]
 8003ca6:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003caa:	d10a      	bne.n	8003cc2 <prvAddCurrentTaskToDelayedList+0x3a>
 8003cac:	683b      	ldr	r3, [r7, #0]
 8003cae:	2b00      	cmp	r3, #0
 8003cb0:	d007      	beq.n	8003cc2 <prvAddCurrentTaskToDelayedList+0x3a>
 8003cb2:	4b1a      	ldr	r3, [pc, #104]	; (8003d1c <prvAddCurrentTaskToDelayedList+0x94>)
 8003cb4:	681b      	ldr	r3, [r3, #0]
 8003cb6:	3304      	adds	r3, #4
 8003cb8:	4619      	mov	r1, r3
 8003cba:	4819      	ldr	r0, [pc, #100]	; (8003d20 <prvAddCurrentTaskToDelayedList+0x98>)
 8003cbc:	f7fe fb7f 	bl	80023be <vListInsertEnd>
 8003cc0:	e026      	b.n	8003d10 <prvAddCurrentTaskToDelayedList+0x88>
 8003cc2:	68fa      	ldr	r2, [r7, #12]
 8003cc4:	687b      	ldr	r3, [r7, #4]
 8003cc6:	4413      	add	r3, r2
 8003cc8:	60bb      	str	r3, [r7, #8]
 8003cca:	4b14      	ldr	r3, [pc, #80]	; (8003d1c <prvAddCurrentTaskToDelayedList+0x94>)
 8003ccc:	681b      	ldr	r3, [r3, #0]
 8003cce:	68ba      	ldr	r2, [r7, #8]
 8003cd0:	605a      	str	r2, [r3, #4]
 8003cd2:	68ba      	ldr	r2, [r7, #8]
 8003cd4:	68fb      	ldr	r3, [r7, #12]
 8003cd6:	429a      	cmp	r2, r3
 8003cd8:	d209      	bcs.n	8003cee <prvAddCurrentTaskToDelayedList+0x66>
 8003cda:	4b12      	ldr	r3, [pc, #72]	; (8003d24 <prvAddCurrentTaskToDelayedList+0x9c>)
 8003cdc:	681a      	ldr	r2, [r3, #0]
 8003cde:	4b0f      	ldr	r3, [pc, #60]	; (8003d1c <prvAddCurrentTaskToDelayedList+0x94>)
 8003ce0:	681b      	ldr	r3, [r3, #0]
 8003ce2:	3304      	adds	r3, #4
 8003ce4:	4619      	mov	r1, r3
 8003ce6:	4610      	mov	r0, r2
 8003ce8:	f7fe fb8c 	bl	8002404 <vListInsert>
 8003cec:	e010      	b.n	8003d10 <prvAddCurrentTaskToDelayedList+0x88>
 8003cee:	4b0e      	ldr	r3, [pc, #56]	; (8003d28 <prvAddCurrentTaskToDelayedList+0xa0>)
 8003cf0:	681a      	ldr	r2, [r3, #0]
 8003cf2:	4b0a      	ldr	r3, [pc, #40]	; (8003d1c <prvAddCurrentTaskToDelayedList+0x94>)
 8003cf4:	681b      	ldr	r3, [r3, #0]
 8003cf6:	3304      	adds	r3, #4
 8003cf8:	4619      	mov	r1, r3
 8003cfa:	4610      	mov	r0, r2
 8003cfc:	f7fe fb82 	bl	8002404 <vListInsert>
 8003d00:	4b0a      	ldr	r3, [pc, #40]	; (8003d2c <prvAddCurrentTaskToDelayedList+0xa4>)
 8003d02:	681b      	ldr	r3, [r3, #0]
 8003d04:	68ba      	ldr	r2, [r7, #8]
 8003d06:	429a      	cmp	r2, r3
 8003d08:	d202      	bcs.n	8003d10 <prvAddCurrentTaskToDelayedList+0x88>
 8003d0a:	4a08      	ldr	r2, [pc, #32]	; (8003d2c <prvAddCurrentTaskToDelayedList+0xa4>)
 8003d0c:	68bb      	ldr	r3, [r7, #8]
 8003d0e:	6013      	str	r3, [r2, #0]
 8003d10:	bf00      	nop
 8003d12:	3710      	adds	r7, #16
 8003d14:	46bd      	mov	sp, r7
 8003d16:	bd80      	pop	{r7, pc}
 8003d18:	20000c68 	.word	0x20000c68
 8003d1c:	20000790 	.word	0x20000790
 8003d20:	20000c50 	.word	0x20000c50
 8003d24:	20000c20 	.word	0x20000c20
 8003d28:	20000c1c 	.word	0x20000c1c
 8003d2c:	20000c84 	.word	0x20000c84

08003d30 <xTimerCreateTimerTask>:
 8003d30:	b580      	push	{r7, lr}
 8003d32:	b08a      	sub	sp, #40	; 0x28
 8003d34:	af04      	add	r7, sp, #16
 8003d36:	2300      	movs	r3, #0
 8003d38:	617b      	str	r3, [r7, #20]
 8003d3a:	f000 fac3 	bl	80042c4 <prvCheckForValidListAndQueue>
 8003d3e:	4b1c      	ldr	r3, [pc, #112]	; (8003db0 <xTimerCreateTimerTask+0x80>)
 8003d40:	681b      	ldr	r3, [r3, #0]
 8003d42:	2b00      	cmp	r3, #0
 8003d44:	d021      	beq.n	8003d8a <xTimerCreateTimerTask+0x5a>
 8003d46:	2300      	movs	r3, #0
 8003d48:	60fb      	str	r3, [r7, #12]
 8003d4a:	2300      	movs	r3, #0
 8003d4c:	60bb      	str	r3, [r7, #8]
 8003d4e:	1d3a      	adds	r2, r7, #4
 8003d50:	f107 0108 	add.w	r1, r7, #8
 8003d54:	f107 030c 	add.w	r3, r7, #12
 8003d58:	4618      	mov	r0, r3
 8003d5a:	f7fe faeb 	bl	8002334 <vApplicationGetTimerTaskMemory>
 8003d5e:	6879      	ldr	r1, [r7, #4]
 8003d60:	68bb      	ldr	r3, [r7, #8]
 8003d62:	68fa      	ldr	r2, [r7, #12]
 8003d64:	9202      	str	r2, [sp, #8]
 8003d66:	9301      	str	r3, [sp, #4]
 8003d68:	2302      	movs	r3, #2
 8003d6a:	9300      	str	r3, [sp, #0]
 8003d6c:	2300      	movs	r3, #0
 8003d6e:	460a      	mov	r2, r1
 8003d70:	4910      	ldr	r1, [pc, #64]	; (8003db4 <xTimerCreateTimerTask+0x84>)
 8003d72:	4811      	ldr	r0, [pc, #68]	; (8003db8 <xTimerCreateTimerTask+0x88>)
 8003d74:	f7ff f8d6 	bl	8002f24 <xTaskCreateStatic>
 8003d78:	4602      	mov	r2, r0
 8003d7a:	4b10      	ldr	r3, [pc, #64]	; (8003dbc <xTimerCreateTimerTask+0x8c>)
 8003d7c:	601a      	str	r2, [r3, #0]
 8003d7e:	4b0f      	ldr	r3, [pc, #60]	; (8003dbc <xTimerCreateTimerTask+0x8c>)
 8003d80:	681b      	ldr	r3, [r3, #0]
 8003d82:	2b00      	cmp	r3, #0
 8003d84:	d001      	beq.n	8003d8a <xTimerCreateTimerTask+0x5a>
 8003d86:	2301      	movs	r3, #1
 8003d88:	617b      	str	r3, [r7, #20]
 8003d8a:	697b      	ldr	r3, [r7, #20]
 8003d8c:	2b00      	cmp	r3, #0
 8003d8e:	d109      	bne.n	8003da4 <xTimerCreateTimerTask+0x74>
 8003d90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003d94:	f383 8811 	msr	BASEPRI, r3
 8003d98:	f3bf 8f6f 	isb	sy
 8003d9c:	f3bf 8f4f 	dsb	sy
 8003da0:	613b      	str	r3, [r7, #16]
 8003da2:	e7fe      	b.n	8003da2 <xTimerCreateTimerTask+0x72>
 8003da4:	697b      	ldr	r3, [r7, #20]
 8003da6:	4618      	mov	r0, r3
 8003da8:	3718      	adds	r7, #24
 8003daa:	46bd      	mov	sp, r7
 8003dac:	bd80      	pop	{r7, pc}
 8003dae:	bf00      	nop
 8003db0:	20000cc0 	.word	0x20000cc0
 8003db4:	0800560c 	.word	0x0800560c
 8003db8:	08003ed9 	.word	0x08003ed9
 8003dbc:	20000cc4 	.word	0x20000cc4

08003dc0 <xTimerGenericCommand>:
 8003dc0:	b580      	push	{r7, lr}
 8003dc2:	b08a      	sub	sp, #40	; 0x28
 8003dc4:	af00      	add	r7, sp, #0
 8003dc6:	60f8      	str	r0, [r7, #12]
 8003dc8:	60b9      	str	r1, [r7, #8]
 8003dca:	607a      	str	r2, [r7, #4]
 8003dcc:	603b      	str	r3, [r7, #0]
 8003dce:	2300      	movs	r3, #0
 8003dd0:	627b      	str	r3, [r7, #36]	; 0x24
 8003dd2:	68fb      	ldr	r3, [r7, #12]
 8003dd4:	2b00      	cmp	r3, #0
 8003dd6:	d109      	bne.n	8003dec <xTimerGenericCommand+0x2c>
 8003dd8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003ddc:	f383 8811 	msr	BASEPRI, r3
 8003de0:	f3bf 8f6f 	isb	sy
 8003de4:	f3bf 8f4f 	dsb	sy
 8003de8:	623b      	str	r3, [r7, #32]
 8003dea:	e7fe      	b.n	8003dea <xTimerGenericCommand+0x2a>
 8003dec:	4b19      	ldr	r3, [pc, #100]	; (8003e54 <xTimerGenericCommand+0x94>)
 8003dee:	681b      	ldr	r3, [r3, #0]
 8003df0:	2b00      	cmp	r3, #0
 8003df2:	d02a      	beq.n	8003e4a <xTimerGenericCommand+0x8a>
 8003df4:	68bb      	ldr	r3, [r7, #8]
 8003df6:	613b      	str	r3, [r7, #16]
 8003df8:	687b      	ldr	r3, [r7, #4]
 8003dfa:	617b      	str	r3, [r7, #20]
 8003dfc:	68fb      	ldr	r3, [r7, #12]
 8003dfe:	61bb      	str	r3, [r7, #24]
 8003e00:	68bb      	ldr	r3, [r7, #8]
 8003e02:	2b05      	cmp	r3, #5
 8003e04:	dc18      	bgt.n	8003e38 <xTimerGenericCommand+0x78>
 8003e06:	f7ff feb5 	bl	8003b74 <xTaskGetSchedulerState>
 8003e0a:	4603      	mov	r3, r0
 8003e0c:	2b02      	cmp	r3, #2
 8003e0e:	d109      	bne.n	8003e24 <xTimerGenericCommand+0x64>
 8003e10:	4b10      	ldr	r3, [pc, #64]	; (8003e54 <xTimerGenericCommand+0x94>)
 8003e12:	6818      	ldr	r0, [r3, #0]
 8003e14:	f107 0110 	add.w	r1, r7, #16
 8003e18:	2300      	movs	r3, #0
 8003e1a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 8003e1c:	f7fe fc8e 	bl	800273c <xQueueGenericSend>
 8003e20:	6278      	str	r0, [r7, #36]	; 0x24
 8003e22:	e012      	b.n	8003e4a <xTimerGenericCommand+0x8a>
 8003e24:	4b0b      	ldr	r3, [pc, #44]	; (8003e54 <xTimerGenericCommand+0x94>)
 8003e26:	6818      	ldr	r0, [r3, #0]
 8003e28:	f107 0110 	add.w	r1, r7, #16
 8003e2c:	2300      	movs	r3, #0
 8003e2e:	2200      	movs	r2, #0
 8003e30:	f7fe fc84 	bl	800273c <xQueueGenericSend>
 8003e34:	6278      	str	r0, [r7, #36]	; 0x24
 8003e36:	e008      	b.n	8003e4a <xTimerGenericCommand+0x8a>
 8003e38:	4b06      	ldr	r3, [pc, #24]	; (8003e54 <xTimerGenericCommand+0x94>)
 8003e3a:	6818      	ldr	r0, [r3, #0]
 8003e3c:	f107 0110 	add.w	r1, r7, #16
 8003e40:	2300      	movs	r3, #0
 8003e42:	683a      	ldr	r2, [r7, #0]
 8003e44:	f7fe fd74 	bl	8002930 <xQueueGenericSendFromISR>
 8003e48:	6278      	str	r0, [r7, #36]	; 0x24
 8003e4a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003e4c:	4618      	mov	r0, r3
 8003e4e:	3728      	adds	r7, #40	; 0x28
 8003e50:	46bd      	mov	sp, r7
 8003e52:	bd80      	pop	{r7, pc}
 8003e54:	20000cc0 	.word	0x20000cc0

08003e58 <prvProcessExpiredTimer>:
 8003e58:	b580      	push	{r7, lr}
 8003e5a:	b088      	sub	sp, #32
 8003e5c:	af02      	add	r7, sp, #8
 8003e5e:	6078      	str	r0, [r7, #4]
 8003e60:	6039      	str	r1, [r7, #0]
 8003e62:	4b1c      	ldr	r3, [pc, #112]	; (8003ed4 <prvProcessExpiredTimer+0x7c>)
 8003e64:	681b      	ldr	r3, [r3, #0]
 8003e66:	68db      	ldr	r3, [r3, #12]
 8003e68:	68db      	ldr	r3, [r3, #12]
 8003e6a:	617b      	str	r3, [r7, #20]
 8003e6c:	697b      	ldr	r3, [r7, #20]
 8003e6e:	3304      	adds	r3, #4
 8003e70:	4618      	mov	r0, r3
 8003e72:	f7fe faff 	bl	8002474 <uxListRemove>
 8003e76:	697b      	ldr	r3, [r7, #20]
 8003e78:	69db      	ldr	r3, [r3, #28]
 8003e7a:	2b01      	cmp	r3, #1
 8003e7c:	d121      	bne.n	8003ec2 <prvProcessExpiredTimer+0x6a>
 8003e7e:	697b      	ldr	r3, [r7, #20]
 8003e80:	699a      	ldr	r2, [r3, #24]
 8003e82:	687b      	ldr	r3, [r7, #4]
 8003e84:	18d1      	adds	r1, r2, r3
 8003e86:	687b      	ldr	r3, [r7, #4]
 8003e88:	683a      	ldr	r2, [r7, #0]
 8003e8a:	6978      	ldr	r0, [r7, #20]
 8003e8c:	f000 f8c8 	bl	8004020 <prvInsertTimerInActiveList>
 8003e90:	4603      	mov	r3, r0
 8003e92:	2b00      	cmp	r3, #0
 8003e94:	d015      	beq.n	8003ec2 <prvProcessExpiredTimer+0x6a>
 8003e96:	2300      	movs	r3, #0
 8003e98:	9300      	str	r3, [sp, #0]
 8003e9a:	2300      	movs	r3, #0
 8003e9c:	687a      	ldr	r2, [r7, #4]
 8003e9e:	2100      	movs	r1, #0
 8003ea0:	6978      	ldr	r0, [r7, #20]
 8003ea2:	f7ff ff8d 	bl	8003dc0 <xTimerGenericCommand>
 8003ea6:	6138      	str	r0, [r7, #16]
 8003ea8:	693b      	ldr	r3, [r7, #16]
 8003eaa:	2b00      	cmp	r3, #0
 8003eac:	d109      	bne.n	8003ec2 <prvProcessExpiredTimer+0x6a>
 8003eae:	f04f 0350 	mov.w	r3, #80	; 0x50
 8003eb2:	f383 8811 	msr	BASEPRI, r3
 8003eb6:	f3bf 8f6f 	isb	sy
 8003eba:	f3bf 8f4f 	dsb	sy
 8003ebe:	60fb      	str	r3, [r7, #12]
 8003ec0:	e7fe      	b.n	8003ec0 <prvProcessExpiredTimer+0x68>
 8003ec2:	697b      	ldr	r3, [r7, #20]
 8003ec4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003ec6:	6978      	ldr	r0, [r7, #20]
 8003ec8:	4798      	blx	r3
 8003eca:	bf00      	nop
 8003ecc:	3718      	adds	r7, #24
 8003ece:	46bd      	mov	sp, r7
 8003ed0:	bd80      	pop	{r7, pc}
 8003ed2:	bf00      	nop
 8003ed4:	20000cb8 	.word	0x20000cb8

08003ed8 <prvTimerTask>:
 8003ed8:	b580      	push	{r7, lr}
 8003eda:	b084      	sub	sp, #16
 8003edc:	af00      	add	r7, sp, #0
 8003ede:	6078      	str	r0, [r7, #4]
 8003ee0:	f107 0308 	add.w	r3, r7, #8
 8003ee4:	4618      	mov	r0, r3
 8003ee6:	f000 f857 	bl	8003f98 <prvGetNextExpireTime>
 8003eea:	60f8      	str	r0, [r7, #12]
 8003eec:	68bb      	ldr	r3, [r7, #8]
 8003eee:	4619      	mov	r1, r3
 8003ef0:	68f8      	ldr	r0, [r7, #12]
 8003ef2:	f000 f803 	bl	8003efc <prvProcessTimerOrBlockTask>
 8003ef6:	f000 f8d5 	bl	80040a4 <prvProcessReceivedCommands>
 8003efa:	e7f1      	b.n	8003ee0 <prvTimerTask+0x8>

08003efc <prvProcessTimerOrBlockTask>:
 8003efc:	b580      	push	{r7, lr}
 8003efe:	b084      	sub	sp, #16
 8003f00:	af00      	add	r7, sp, #0
 8003f02:	6078      	str	r0, [r7, #4]
 8003f04:	6039      	str	r1, [r7, #0]
 8003f06:	f7ff fa39 	bl	800337c <vTaskSuspendAll>
 8003f0a:	f107 0308 	add.w	r3, r7, #8
 8003f0e:	4618      	mov	r0, r3
 8003f10:	f000 f866 	bl	8003fe0 <prvSampleTimeNow>
 8003f14:	60f8      	str	r0, [r7, #12]
 8003f16:	68bb      	ldr	r3, [r7, #8]
 8003f18:	2b00      	cmp	r3, #0
 8003f1a:	d130      	bne.n	8003f7e <prvProcessTimerOrBlockTask+0x82>
 8003f1c:	683b      	ldr	r3, [r7, #0]
 8003f1e:	2b00      	cmp	r3, #0
 8003f20:	d10a      	bne.n	8003f38 <prvProcessTimerOrBlockTask+0x3c>
 8003f22:	687a      	ldr	r2, [r7, #4]
 8003f24:	68fb      	ldr	r3, [r7, #12]
 8003f26:	429a      	cmp	r2, r3
 8003f28:	d806      	bhi.n	8003f38 <prvProcessTimerOrBlockTask+0x3c>
 8003f2a:	f7ff fa35 	bl	8003398 <xTaskResumeAll>
 8003f2e:	68f9      	ldr	r1, [r7, #12]
 8003f30:	6878      	ldr	r0, [r7, #4]
 8003f32:	f7ff ff91 	bl	8003e58 <prvProcessExpiredTimer>
 8003f36:	e024      	b.n	8003f82 <prvProcessTimerOrBlockTask+0x86>
 8003f38:	683b      	ldr	r3, [r7, #0]
 8003f3a:	2b00      	cmp	r3, #0
 8003f3c:	d008      	beq.n	8003f50 <prvProcessTimerOrBlockTask+0x54>
 8003f3e:	4b13      	ldr	r3, [pc, #76]	; (8003f8c <prvProcessTimerOrBlockTask+0x90>)
 8003f40:	681b      	ldr	r3, [r3, #0]
 8003f42:	681b      	ldr	r3, [r3, #0]
 8003f44:	2b00      	cmp	r3, #0
 8003f46:	bf0c      	ite	eq
 8003f48:	2301      	moveq	r3, #1
 8003f4a:	2300      	movne	r3, #0
 8003f4c:	b2db      	uxtb	r3, r3
 8003f4e:	603b      	str	r3, [r7, #0]
 8003f50:	4b0f      	ldr	r3, [pc, #60]	; (8003f90 <prvProcessTimerOrBlockTask+0x94>)
 8003f52:	6818      	ldr	r0, [r3, #0]
 8003f54:	687a      	ldr	r2, [r7, #4]
 8003f56:	68fb      	ldr	r3, [r7, #12]
 8003f58:	1ad3      	subs	r3, r2, r3
 8003f5a:	683a      	ldr	r2, [r7, #0]
 8003f5c:	4619      	mov	r1, r3
 8003f5e:	f7fe ffad 	bl	8002ebc <vQueueWaitForMessageRestricted>
 8003f62:	f7ff fa19 	bl	8003398 <xTaskResumeAll>
 8003f66:	4603      	mov	r3, r0
 8003f68:	2b00      	cmp	r3, #0
 8003f6a:	d10a      	bne.n	8003f82 <prvProcessTimerOrBlockTask+0x86>
 8003f6c:	4b09      	ldr	r3, [pc, #36]	; (8003f94 <prvProcessTimerOrBlockTask+0x98>)
 8003f6e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8003f72:	601a      	str	r2, [r3, #0]
 8003f74:	f3bf 8f4f 	dsb	sy
 8003f78:	f3bf 8f6f 	isb	sy
 8003f7c:	e001      	b.n	8003f82 <prvProcessTimerOrBlockTask+0x86>
 8003f7e:	f7ff fa0b 	bl	8003398 <xTaskResumeAll>
 8003f82:	bf00      	nop
 8003f84:	3710      	adds	r7, #16
 8003f86:	46bd      	mov	sp, r7
 8003f88:	bd80      	pop	{r7, pc}
 8003f8a:	bf00      	nop
 8003f8c:	20000cbc 	.word	0x20000cbc
 8003f90:	20000cc0 	.word	0x20000cc0
 8003f94:	e000ed04 	.word	0xe000ed04

08003f98 <prvGetNextExpireTime>:
 8003f98:	b480      	push	{r7}
 8003f9a:	b085      	sub	sp, #20
 8003f9c:	af00      	add	r7, sp, #0
 8003f9e:	6078      	str	r0, [r7, #4]
 8003fa0:	4b0e      	ldr	r3, [pc, #56]	; (8003fdc <prvGetNextExpireTime+0x44>)
 8003fa2:	681b      	ldr	r3, [r3, #0]
 8003fa4:	681b      	ldr	r3, [r3, #0]
 8003fa6:	2b00      	cmp	r3, #0
 8003fa8:	bf0c      	ite	eq
 8003faa:	2301      	moveq	r3, #1
 8003fac:	2300      	movne	r3, #0
 8003fae:	b2db      	uxtb	r3, r3
 8003fb0:	461a      	mov	r2, r3
 8003fb2:	687b      	ldr	r3, [r7, #4]
 8003fb4:	601a      	str	r2, [r3, #0]
 8003fb6:	687b      	ldr	r3, [r7, #4]
 8003fb8:	681b      	ldr	r3, [r3, #0]
 8003fba:	2b00      	cmp	r3, #0
 8003fbc:	d105      	bne.n	8003fca <prvGetNextExpireTime+0x32>
 8003fbe:	4b07      	ldr	r3, [pc, #28]	; (8003fdc <prvGetNextExpireTime+0x44>)
 8003fc0:	681b      	ldr	r3, [r3, #0]
 8003fc2:	68db      	ldr	r3, [r3, #12]
 8003fc4:	681b      	ldr	r3, [r3, #0]
 8003fc6:	60fb      	str	r3, [r7, #12]
 8003fc8:	e001      	b.n	8003fce <prvGetNextExpireTime+0x36>
 8003fca:	2300      	movs	r3, #0
 8003fcc:	60fb      	str	r3, [r7, #12]
 8003fce:	68fb      	ldr	r3, [r7, #12]
 8003fd0:	4618      	mov	r0, r3
 8003fd2:	3714      	adds	r7, #20
 8003fd4:	46bd      	mov	sp, r7
 8003fd6:	bc80      	pop	{r7}
 8003fd8:	4770      	bx	lr
 8003fda:	bf00      	nop
 8003fdc:	20000cb8 	.word	0x20000cb8

08003fe0 <prvSampleTimeNow>:
 8003fe0:	b580      	push	{r7, lr}
 8003fe2:	b084      	sub	sp, #16
 8003fe4:	af00      	add	r7, sp, #0
 8003fe6:	6078      	str	r0, [r7, #4]
 8003fe8:	f7ff fa72 	bl	80034d0 <xTaskGetTickCount>
 8003fec:	60f8      	str	r0, [r7, #12]
 8003fee:	4b0b      	ldr	r3, [pc, #44]	; (800401c <prvSampleTimeNow+0x3c>)
 8003ff0:	681b      	ldr	r3, [r3, #0]
 8003ff2:	68fa      	ldr	r2, [r7, #12]
 8003ff4:	429a      	cmp	r2, r3
 8003ff6:	d205      	bcs.n	8004004 <prvSampleTimeNow+0x24>
 8003ff8:	f000 f904 	bl	8004204 <prvSwitchTimerLists>
 8003ffc:	687b      	ldr	r3, [r7, #4]
 8003ffe:	2201      	movs	r2, #1
 8004000:	601a      	str	r2, [r3, #0]
 8004002:	e002      	b.n	800400a <prvSampleTimeNow+0x2a>
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	2200      	movs	r2, #0
 8004008:	601a      	str	r2, [r3, #0]
 800400a:	4a04      	ldr	r2, [pc, #16]	; (800401c <prvSampleTimeNow+0x3c>)
 800400c:	68fb      	ldr	r3, [r7, #12]
 800400e:	6013      	str	r3, [r2, #0]
 8004010:	68fb      	ldr	r3, [r7, #12]
 8004012:	4618      	mov	r0, r3
 8004014:	3710      	adds	r7, #16
 8004016:	46bd      	mov	sp, r7
 8004018:	bd80      	pop	{r7, pc}
 800401a:	bf00      	nop
 800401c:	20000cc8 	.word	0x20000cc8

08004020 <prvInsertTimerInActiveList>:
 8004020:	b580      	push	{r7, lr}
 8004022:	b086      	sub	sp, #24
 8004024:	af00      	add	r7, sp, #0
 8004026:	60f8      	str	r0, [r7, #12]
 8004028:	60b9      	str	r1, [r7, #8]
 800402a:	607a      	str	r2, [r7, #4]
 800402c:	603b      	str	r3, [r7, #0]
 800402e:	2300      	movs	r3, #0
 8004030:	617b      	str	r3, [r7, #20]
 8004032:	68fb      	ldr	r3, [r7, #12]
 8004034:	68ba      	ldr	r2, [r7, #8]
 8004036:	605a      	str	r2, [r3, #4]
 8004038:	68fb      	ldr	r3, [r7, #12]
 800403a:	68fa      	ldr	r2, [r7, #12]
 800403c:	611a      	str	r2, [r3, #16]
 800403e:	68ba      	ldr	r2, [r7, #8]
 8004040:	687b      	ldr	r3, [r7, #4]
 8004042:	429a      	cmp	r2, r3
 8004044:	d812      	bhi.n	800406c <prvInsertTimerInActiveList+0x4c>
 8004046:	687a      	ldr	r2, [r7, #4]
 8004048:	683b      	ldr	r3, [r7, #0]
 800404a:	1ad2      	subs	r2, r2, r3
 800404c:	68fb      	ldr	r3, [r7, #12]
 800404e:	699b      	ldr	r3, [r3, #24]
 8004050:	429a      	cmp	r2, r3
 8004052:	d302      	bcc.n	800405a <prvInsertTimerInActiveList+0x3a>
 8004054:	2301      	movs	r3, #1
 8004056:	617b      	str	r3, [r7, #20]
 8004058:	e01b      	b.n	8004092 <prvInsertTimerInActiveList+0x72>
 800405a:	4b10      	ldr	r3, [pc, #64]	; (800409c <prvInsertTimerInActiveList+0x7c>)
 800405c:	681a      	ldr	r2, [r3, #0]
 800405e:	68fb      	ldr	r3, [r7, #12]
 8004060:	3304      	adds	r3, #4
 8004062:	4619      	mov	r1, r3
 8004064:	4610      	mov	r0, r2
 8004066:	f7fe f9cd 	bl	8002404 <vListInsert>
 800406a:	e012      	b.n	8004092 <prvInsertTimerInActiveList+0x72>
 800406c:	687a      	ldr	r2, [r7, #4]
 800406e:	683b      	ldr	r3, [r7, #0]
 8004070:	429a      	cmp	r2, r3
 8004072:	d206      	bcs.n	8004082 <prvInsertTimerInActiveList+0x62>
 8004074:	68ba      	ldr	r2, [r7, #8]
 8004076:	683b      	ldr	r3, [r7, #0]
 8004078:	429a      	cmp	r2, r3
 800407a:	d302      	bcc.n	8004082 <prvInsertTimerInActiveList+0x62>
 800407c:	2301      	movs	r3, #1
 800407e:	617b      	str	r3, [r7, #20]
 8004080:	e007      	b.n	8004092 <prvInsertTimerInActiveList+0x72>
 8004082:	4b07      	ldr	r3, [pc, #28]	; (80040a0 <prvInsertTimerInActiveList+0x80>)
 8004084:	681a      	ldr	r2, [r3, #0]
 8004086:	68fb      	ldr	r3, [r7, #12]
 8004088:	3304      	adds	r3, #4
 800408a:	4619      	mov	r1, r3
 800408c:	4610      	mov	r0, r2
 800408e:	f7fe f9b9 	bl	8002404 <vListInsert>
 8004092:	697b      	ldr	r3, [r7, #20]
 8004094:	4618      	mov	r0, r3
 8004096:	3718      	adds	r7, #24
 8004098:	46bd      	mov	sp, r7
 800409a:	bd80      	pop	{r7, pc}
 800409c:	20000cbc 	.word	0x20000cbc
 80040a0:	20000cb8 	.word	0x20000cb8

080040a4 <prvProcessReceivedCommands>:
 80040a4:	b580      	push	{r7, lr}
 80040a6:	b08e      	sub	sp, #56	; 0x38
 80040a8:	af02      	add	r7, sp, #8
 80040aa:	e099      	b.n	80041e0 <prvProcessReceivedCommands+0x13c>
 80040ac:	687b      	ldr	r3, [r7, #4]
 80040ae:	2b00      	cmp	r3, #0
 80040b0:	da17      	bge.n	80040e2 <prvProcessReceivedCommands+0x3e>
 80040b2:	1d3b      	adds	r3, r7, #4
 80040b4:	3304      	adds	r3, #4
 80040b6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80040b8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80040ba:	2b00      	cmp	r3, #0
 80040bc:	d109      	bne.n	80040d2 <prvProcessReceivedCommands+0x2e>
 80040be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80040c2:	f383 8811 	msr	BASEPRI, r3
 80040c6:	f3bf 8f6f 	isb	sy
 80040ca:	f3bf 8f4f 	dsb	sy
 80040ce:	61fb      	str	r3, [r7, #28]
 80040d0:	e7fe      	b.n	80040d0 <prvProcessReceivedCommands+0x2c>
 80040d2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80040d4:	681b      	ldr	r3, [r3, #0]
 80040d6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80040d8:	6850      	ldr	r0, [r2, #4]
 80040da:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80040dc:	6892      	ldr	r2, [r2, #8]
 80040de:	4611      	mov	r1, r2
 80040e0:	4798      	blx	r3
 80040e2:	687b      	ldr	r3, [r7, #4]
 80040e4:	2b00      	cmp	r3, #0
 80040e6:	db7a      	blt.n	80041de <prvProcessReceivedCommands+0x13a>
 80040e8:	68fb      	ldr	r3, [r7, #12]
 80040ea:	62bb      	str	r3, [r7, #40]	; 0x28
 80040ec:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80040ee:	695b      	ldr	r3, [r3, #20]
 80040f0:	2b00      	cmp	r3, #0
 80040f2:	d004      	beq.n	80040fe <prvProcessReceivedCommands+0x5a>
 80040f4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80040f6:	3304      	adds	r3, #4
 80040f8:	4618      	mov	r0, r3
 80040fa:	f7fe f9bb 	bl	8002474 <uxListRemove>
 80040fe:	463b      	mov	r3, r7
 8004100:	4618      	mov	r0, r3
 8004102:	f7ff ff6d 	bl	8003fe0 <prvSampleTimeNow>
 8004106:	6278      	str	r0, [r7, #36]	; 0x24
 8004108:	687b      	ldr	r3, [r7, #4]
 800410a:	2b09      	cmp	r3, #9
 800410c:	d868      	bhi.n	80041e0 <prvProcessReceivedCommands+0x13c>
 800410e:	a201      	add	r2, pc, #4	; (adr r2, 8004114 <prvProcessReceivedCommands+0x70>)
 8004110:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004114:	0800413d 	.word	0x0800413d
 8004118:	0800413d 	.word	0x0800413d
 800411c:	0800413d 	.word	0x0800413d
 8004120:	080041e1 	.word	0x080041e1
 8004124:	08004197 	.word	0x08004197
 8004128:	080041cd 	.word	0x080041cd
 800412c:	0800413d 	.word	0x0800413d
 8004130:	0800413d 	.word	0x0800413d
 8004134:	080041e1 	.word	0x080041e1
 8004138:	08004197 	.word	0x08004197
 800413c:	68ba      	ldr	r2, [r7, #8]
 800413e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004140:	699b      	ldr	r3, [r3, #24]
 8004142:	18d1      	adds	r1, r2, r3
 8004144:	68bb      	ldr	r3, [r7, #8]
 8004146:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004148:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800414a:	f7ff ff69 	bl	8004020 <prvInsertTimerInActiveList>
 800414e:	4603      	mov	r3, r0
 8004150:	2b00      	cmp	r3, #0
 8004152:	d045      	beq.n	80041e0 <prvProcessReceivedCommands+0x13c>
 8004154:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004156:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004158:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800415a:	4798      	blx	r3
 800415c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800415e:	69db      	ldr	r3, [r3, #28]
 8004160:	2b01      	cmp	r3, #1
 8004162:	d13d      	bne.n	80041e0 <prvProcessReceivedCommands+0x13c>
 8004164:	68ba      	ldr	r2, [r7, #8]
 8004166:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8004168:	699b      	ldr	r3, [r3, #24]
 800416a:	441a      	add	r2, r3
 800416c:	2300      	movs	r3, #0
 800416e:	9300      	str	r3, [sp, #0]
 8004170:	2300      	movs	r3, #0
 8004172:	2100      	movs	r1, #0
 8004174:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 8004176:	f7ff fe23 	bl	8003dc0 <xTimerGenericCommand>
 800417a:	6238      	str	r0, [r7, #32]
 800417c:	6a3b      	ldr	r3, [r7, #32]
 800417e:	2b00      	cmp	r3, #0
 8004180:	d12e      	bne.n	80041e0 <prvProcessReceivedCommands+0x13c>
 8004182:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004186:	f383 8811 	msr	BASEPRI, r3
 800418a:	f3bf 8f6f 	isb	sy
 800418e:	f3bf 8f4f 	dsb	sy
 8004192:	61bb      	str	r3, [r7, #24]
 8004194:	e7fe      	b.n	8004194 <prvProcessReceivedCommands+0xf0>
 8004196:	68ba      	ldr	r2, [r7, #8]
 8004198:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800419a:	619a      	str	r2, [r3, #24]
 800419c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800419e:	699b      	ldr	r3, [r3, #24]
 80041a0:	2b00      	cmp	r3, #0
 80041a2:	d109      	bne.n	80041b8 <prvProcessReceivedCommands+0x114>
 80041a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80041a8:	f383 8811 	msr	BASEPRI, r3
 80041ac:	f3bf 8f6f 	isb	sy
 80041b0:	f3bf 8f4f 	dsb	sy
 80041b4:	617b      	str	r3, [r7, #20]
 80041b6:	e7fe      	b.n	80041b6 <prvProcessReceivedCommands+0x112>
 80041b8:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80041ba:	699a      	ldr	r2, [r3, #24]
 80041bc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80041be:	18d1      	adds	r1, r2, r3
 80041c0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80041c2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80041c4:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80041c6:	f7ff ff2b 	bl	8004020 <prvInsertTimerInActiveList>
 80041ca:	e009      	b.n	80041e0 <prvProcessReceivedCommands+0x13c>
 80041cc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80041ce:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 80041d2:	2b00      	cmp	r3, #0
 80041d4:	d104      	bne.n	80041e0 <prvProcessReceivedCommands+0x13c>
 80041d6:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 80041d8:	f000 fb56 	bl	8004888 <vPortFree>
 80041dc:	e000      	b.n	80041e0 <prvProcessReceivedCommands+0x13c>
 80041de:	bf00      	nop
 80041e0:	4b07      	ldr	r3, [pc, #28]	; (8004200 <prvProcessReceivedCommands+0x15c>)
 80041e2:	681b      	ldr	r3, [r3, #0]
 80041e4:	1d39      	adds	r1, r7, #4
 80041e6:	2200      	movs	r2, #0
 80041e8:	4618      	mov	r0, r3
 80041ea:	f7fe fc35 	bl	8002a58 <xQueueReceive>
 80041ee:	4603      	mov	r3, r0
 80041f0:	2b00      	cmp	r3, #0
 80041f2:	f47f af5b 	bne.w	80040ac <prvProcessReceivedCommands+0x8>
 80041f6:	bf00      	nop
 80041f8:	3730      	adds	r7, #48	; 0x30
 80041fa:	46bd      	mov	sp, r7
 80041fc:	bd80      	pop	{r7, pc}
 80041fe:	bf00      	nop
 8004200:	20000cc0 	.word	0x20000cc0

08004204 <prvSwitchTimerLists>:
 8004204:	b580      	push	{r7, lr}
 8004206:	b088      	sub	sp, #32
 8004208:	af02      	add	r7, sp, #8
 800420a:	e044      	b.n	8004296 <prvSwitchTimerLists+0x92>
 800420c:	4b2b      	ldr	r3, [pc, #172]	; (80042bc <prvSwitchTimerLists+0xb8>)
 800420e:	681b      	ldr	r3, [r3, #0]
 8004210:	68db      	ldr	r3, [r3, #12]
 8004212:	681b      	ldr	r3, [r3, #0]
 8004214:	613b      	str	r3, [r7, #16]
 8004216:	4b29      	ldr	r3, [pc, #164]	; (80042bc <prvSwitchTimerLists+0xb8>)
 8004218:	681b      	ldr	r3, [r3, #0]
 800421a:	68db      	ldr	r3, [r3, #12]
 800421c:	68db      	ldr	r3, [r3, #12]
 800421e:	60fb      	str	r3, [r7, #12]
 8004220:	68fb      	ldr	r3, [r7, #12]
 8004222:	3304      	adds	r3, #4
 8004224:	4618      	mov	r0, r3
 8004226:	f7fe f925 	bl	8002474 <uxListRemove>
 800422a:	68fb      	ldr	r3, [r7, #12]
 800422c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800422e:	68f8      	ldr	r0, [r7, #12]
 8004230:	4798      	blx	r3
 8004232:	68fb      	ldr	r3, [r7, #12]
 8004234:	69db      	ldr	r3, [r3, #28]
 8004236:	2b01      	cmp	r3, #1
 8004238:	d12d      	bne.n	8004296 <prvSwitchTimerLists+0x92>
 800423a:	68fb      	ldr	r3, [r7, #12]
 800423c:	699b      	ldr	r3, [r3, #24]
 800423e:	693a      	ldr	r2, [r7, #16]
 8004240:	4413      	add	r3, r2
 8004242:	60bb      	str	r3, [r7, #8]
 8004244:	68ba      	ldr	r2, [r7, #8]
 8004246:	693b      	ldr	r3, [r7, #16]
 8004248:	429a      	cmp	r2, r3
 800424a:	d90e      	bls.n	800426a <prvSwitchTimerLists+0x66>
 800424c:	68fb      	ldr	r3, [r7, #12]
 800424e:	68ba      	ldr	r2, [r7, #8]
 8004250:	605a      	str	r2, [r3, #4]
 8004252:	68fb      	ldr	r3, [r7, #12]
 8004254:	68fa      	ldr	r2, [r7, #12]
 8004256:	611a      	str	r2, [r3, #16]
 8004258:	4b18      	ldr	r3, [pc, #96]	; (80042bc <prvSwitchTimerLists+0xb8>)
 800425a:	681a      	ldr	r2, [r3, #0]
 800425c:	68fb      	ldr	r3, [r7, #12]
 800425e:	3304      	adds	r3, #4
 8004260:	4619      	mov	r1, r3
 8004262:	4610      	mov	r0, r2
 8004264:	f7fe f8ce 	bl	8002404 <vListInsert>
 8004268:	e015      	b.n	8004296 <prvSwitchTimerLists+0x92>
 800426a:	2300      	movs	r3, #0
 800426c:	9300      	str	r3, [sp, #0]
 800426e:	2300      	movs	r3, #0
 8004270:	693a      	ldr	r2, [r7, #16]
 8004272:	2100      	movs	r1, #0
 8004274:	68f8      	ldr	r0, [r7, #12]
 8004276:	f7ff fda3 	bl	8003dc0 <xTimerGenericCommand>
 800427a:	6078      	str	r0, [r7, #4]
 800427c:	687b      	ldr	r3, [r7, #4]
 800427e:	2b00      	cmp	r3, #0
 8004280:	d109      	bne.n	8004296 <prvSwitchTimerLists+0x92>
 8004282:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004286:	f383 8811 	msr	BASEPRI, r3
 800428a:	f3bf 8f6f 	isb	sy
 800428e:	f3bf 8f4f 	dsb	sy
 8004292:	603b      	str	r3, [r7, #0]
 8004294:	e7fe      	b.n	8004294 <prvSwitchTimerLists+0x90>
 8004296:	4b09      	ldr	r3, [pc, #36]	; (80042bc <prvSwitchTimerLists+0xb8>)
 8004298:	681b      	ldr	r3, [r3, #0]
 800429a:	681b      	ldr	r3, [r3, #0]
 800429c:	2b00      	cmp	r3, #0
 800429e:	d1b5      	bne.n	800420c <prvSwitchTimerLists+0x8>
 80042a0:	4b06      	ldr	r3, [pc, #24]	; (80042bc <prvSwitchTimerLists+0xb8>)
 80042a2:	681b      	ldr	r3, [r3, #0]
 80042a4:	617b      	str	r3, [r7, #20]
 80042a6:	4b06      	ldr	r3, [pc, #24]	; (80042c0 <prvSwitchTimerLists+0xbc>)
 80042a8:	681b      	ldr	r3, [r3, #0]
 80042aa:	4a04      	ldr	r2, [pc, #16]	; (80042bc <prvSwitchTimerLists+0xb8>)
 80042ac:	6013      	str	r3, [r2, #0]
 80042ae:	4a04      	ldr	r2, [pc, #16]	; (80042c0 <prvSwitchTimerLists+0xbc>)
 80042b0:	697b      	ldr	r3, [r7, #20]
 80042b2:	6013      	str	r3, [r2, #0]
 80042b4:	bf00      	nop
 80042b6:	3718      	adds	r7, #24
 80042b8:	46bd      	mov	sp, r7
 80042ba:	bd80      	pop	{r7, pc}
 80042bc:	20000cb8 	.word	0x20000cb8
 80042c0:	20000cbc 	.word	0x20000cbc

080042c4 <prvCheckForValidListAndQueue>:
 80042c4:	b580      	push	{r7, lr}
 80042c6:	b082      	sub	sp, #8
 80042c8:	af02      	add	r7, sp, #8
 80042ca:	f000 f925 	bl	8004518 <vPortEnterCritical>
 80042ce:	4b15      	ldr	r3, [pc, #84]	; (8004324 <prvCheckForValidListAndQueue+0x60>)
 80042d0:	681b      	ldr	r3, [r3, #0]
 80042d2:	2b00      	cmp	r3, #0
 80042d4:	d120      	bne.n	8004318 <prvCheckForValidListAndQueue+0x54>
 80042d6:	4814      	ldr	r0, [pc, #80]	; (8004328 <prvCheckForValidListAndQueue+0x64>)
 80042d8:	f7fe f846 	bl	8002368 <vListInitialise>
 80042dc:	4813      	ldr	r0, [pc, #76]	; (800432c <prvCheckForValidListAndQueue+0x68>)
 80042de:	f7fe f843 	bl	8002368 <vListInitialise>
 80042e2:	4b13      	ldr	r3, [pc, #76]	; (8004330 <prvCheckForValidListAndQueue+0x6c>)
 80042e4:	4a10      	ldr	r2, [pc, #64]	; (8004328 <prvCheckForValidListAndQueue+0x64>)
 80042e6:	601a      	str	r2, [r3, #0]
 80042e8:	4b12      	ldr	r3, [pc, #72]	; (8004334 <prvCheckForValidListAndQueue+0x70>)
 80042ea:	4a10      	ldr	r2, [pc, #64]	; (800432c <prvCheckForValidListAndQueue+0x68>)
 80042ec:	601a      	str	r2, [r3, #0]
 80042ee:	2300      	movs	r3, #0
 80042f0:	9300      	str	r3, [sp, #0]
 80042f2:	4b11      	ldr	r3, [pc, #68]	; (8004338 <prvCheckForValidListAndQueue+0x74>)
 80042f4:	4a11      	ldr	r2, [pc, #68]	; (800433c <prvCheckForValidListAndQueue+0x78>)
 80042f6:	2110      	movs	r1, #16
 80042f8:	200a      	movs	r0, #10
 80042fa:	f7fe f94d 	bl	8002598 <xQueueGenericCreateStatic>
 80042fe:	4602      	mov	r2, r0
 8004300:	4b08      	ldr	r3, [pc, #32]	; (8004324 <prvCheckForValidListAndQueue+0x60>)
 8004302:	601a      	str	r2, [r3, #0]
 8004304:	4b07      	ldr	r3, [pc, #28]	; (8004324 <prvCheckForValidListAndQueue+0x60>)
 8004306:	681b      	ldr	r3, [r3, #0]
 8004308:	2b00      	cmp	r3, #0
 800430a:	d005      	beq.n	8004318 <prvCheckForValidListAndQueue+0x54>
 800430c:	4b05      	ldr	r3, [pc, #20]	; (8004324 <prvCheckForValidListAndQueue+0x60>)
 800430e:	681b      	ldr	r3, [r3, #0]
 8004310:	490b      	ldr	r1, [pc, #44]	; (8004340 <prvCheckForValidListAndQueue+0x7c>)
 8004312:	4618      	mov	r0, r3
 8004314:	f7fe fdaa 	bl	8002e6c <vQueueAddToRegistry>
 8004318:	f000 f92c 	bl	8004574 <vPortExitCritical>
 800431c:	bf00      	nop
 800431e:	46bd      	mov	sp, r7
 8004320:	bd80      	pop	{r7, pc}
 8004322:	bf00      	nop
 8004324:	20000cc0 	.word	0x20000cc0
 8004328:	20000c90 	.word	0x20000c90
 800432c:	20000ca4 	.word	0x20000ca4
 8004330:	20000cb8 	.word	0x20000cb8
 8004334:	20000cbc 	.word	0x20000cbc
 8004338:	20000d6c 	.word	0x20000d6c
 800433c:	20000ccc 	.word	0x20000ccc
 8004340:	08005614 	.word	0x08005614

08004344 <pxPortInitialiseStack>:
 8004344:	b480      	push	{r7}
 8004346:	b085      	sub	sp, #20
 8004348:	af00      	add	r7, sp, #0
 800434a:	60f8      	str	r0, [r7, #12]
 800434c:	60b9      	str	r1, [r7, #8]
 800434e:	607a      	str	r2, [r7, #4]
 8004350:	68fb      	ldr	r3, [r7, #12]
 8004352:	3b04      	subs	r3, #4
 8004354:	60fb      	str	r3, [r7, #12]
 8004356:	68fb      	ldr	r3, [r7, #12]
 8004358:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800435c:	601a      	str	r2, [r3, #0]
 800435e:	68fb      	ldr	r3, [r7, #12]
 8004360:	3b04      	subs	r3, #4
 8004362:	60fb      	str	r3, [r7, #12]
 8004364:	68bb      	ldr	r3, [r7, #8]
 8004366:	f023 0201 	bic.w	r2, r3, #1
 800436a:	68fb      	ldr	r3, [r7, #12]
 800436c:	601a      	str	r2, [r3, #0]
 800436e:	68fb      	ldr	r3, [r7, #12]
 8004370:	3b04      	subs	r3, #4
 8004372:	60fb      	str	r3, [r7, #12]
 8004374:	4a08      	ldr	r2, [pc, #32]	; (8004398 <pxPortInitialiseStack+0x54>)
 8004376:	68fb      	ldr	r3, [r7, #12]
 8004378:	601a      	str	r2, [r3, #0]
 800437a:	68fb      	ldr	r3, [r7, #12]
 800437c:	3b14      	subs	r3, #20
 800437e:	60fb      	str	r3, [r7, #12]
 8004380:	687a      	ldr	r2, [r7, #4]
 8004382:	68fb      	ldr	r3, [r7, #12]
 8004384:	601a      	str	r2, [r3, #0]
 8004386:	68fb      	ldr	r3, [r7, #12]
 8004388:	3b20      	subs	r3, #32
 800438a:	60fb      	str	r3, [r7, #12]
 800438c:	68fb      	ldr	r3, [r7, #12]
 800438e:	4618      	mov	r0, r3
 8004390:	3714      	adds	r7, #20
 8004392:	46bd      	mov	sp, r7
 8004394:	bc80      	pop	{r7}
 8004396:	4770      	bx	lr
 8004398:	0800439d 	.word	0x0800439d

0800439c <prvTaskExitError>:
 800439c:	b480      	push	{r7}
 800439e:	b085      	sub	sp, #20
 80043a0:	af00      	add	r7, sp, #0
 80043a2:	2300      	movs	r3, #0
 80043a4:	607b      	str	r3, [r7, #4]
 80043a6:	4b10      	ldr	r3, [pc, #64]	; (80043e8 <prvTaskExitError+0x4c>)
 80043a8:	681b      	ldr	r3, [r3, #0]
 80043aa:	f1b3 3fff 	cmp.w	r3, #4294967295
 80043ae:	d009      	beq.n	80043c4 <prvTaskExitError+0x28>
 80043b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80043b4:	f383 8811 	msr	BASEPRI, r3
 80043b8:	f3bf 8f6f 	isb	sy
 80043bc:	f3bf 8f4f 	dsb	sy
 80043c0:	60fb      	str	r3, [r7, #12]
 80043c2:	e7fe      	b.n	80043c2 <prvTaskExitError+0x26>
 80043c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80043c8:	f383 8811 	msr	BASEPRI, r3
 80043cc:	f3bf 8f6f 	isb	sy
 80043d0:	f3bf 8f4f 	dsb	sy
 80043d4:	60bb      	str	r3, [r7, #8]
 80043d6:	bf00      	nop
 80043d8:	687b      	ldr	r3, [r7, #4]
 80043da:	2b00      	cmp	r3, #0
 80043dc:	d0fc      	beq.n	80043d8 <prvTaskExitError+0x3c>
 80043de:	bf00      	nop
 80043e0:	3714      	adds	r7, #20
 80043e2:	46bd      	mov	sp, r7
 80043e4:	bc80      	pop	{r7}
 80043e6:	4770      	bx	lr
 80043e8:	20000044 	.word	0x20000044
 80043ec:	00000000 	.word	0x00000000

080043f0 <SVC_Handler>:
 80043f0:	4b07      	ldr	r3, [pc, #28]	; (8004410 <pxCurrentTCBConst2>)
 80043f2:	6819      	ldr	r1, [r3, #0]
 80043f4:	6808      	ldr	r0, [r1, #0]
 80043f6:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 80043fa:	f380 8809 	msr	PSP, r0
 80043fe:	f3bf 8f6f 	isb	sy
 8004402:	f04f 0000 	mov.w	r0, #0
 8004406:	f380 8811 	msr	BASEPRI, r0
 800440a:	f04e 0e0d 	orr.w	lr, lr, #13
 800440e:	4770      	bx	lr

08004410 <pxCurrentTCBConst2>:
 8004410:	20000790 	.word	0x20000790
 8004414:	bf00      	nop
 8004416:	bf00      	nop

08004418 <prvPortStartFirstTask>:
 8004418:	4806      	ldr	r0, [pc, #24]	; (8004434 <prvPortStartFirstTask+0x1c>)
 800441a:	6800      	ldr	r0, [r0, #0]
 800441c:	6800      	ldr	r0, [r0, #0]
 800441e:	f380 8808 	msr	MSP, r0
 8004422:	b662      	cpsie	i
 8004424:	b661      	cpsie	f
 8004426:	f3bf 8f4f 	dsb	sy
 800442a:	f3bf 8f6f 	isb	sy
 800442e:	df00      	svc	0
 8004430:	bf00      	nop
 8004432:	bf00      	nop
 8004434:	e000ed08 	.word	0xe000ed08

08004438 <xPortStartScheduler>:
 8004438:	b580      	push	{r7, lr}
 800443a:	b084      	sub	sp, #16
 800443c:	af00      	add	r7, sp, #0
 800443e:	4b31      	ldr	r3, [pc, #196]	; (8004504 <xPortStartScheduler+0xcc>)
 8004440:	60fb      	str	r3, [r7, #12]
 8004442:	68fb      	ldr	r3, [r7, #12]
 8004444:	781b      	ldrb	r3, [r3, #0]
 8004446:	b2db      	uxtb	r3, r3
 8004448:	607b      	str	r3, [r7, #4]
 800444a:	68fb      	ldr	r3, [r7, #12]
 800444c:	22ff      	movs	r2, #255	; 0xff
 800444e:	701a      	strb	r2, [r3, #0]
 8004450:	68fb      	ldr	r3, [r7, #12]
 8004452:	781b      	ldrb	r3, [r3, #0]
 8004454:	b2db      	uxtb	r3, r3
 8004456:	70fb      	strb	r3, [r7, #3]
 8004458:	78fb      	ldrb	r3, [r7, #3]
 800445a:	b2db      	uxtb	r3, r3
 800445c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8004460:	b2da      	uxtb	r2, r3
 8004462:	4b29      	ldr	r3, [pc, #164]	; (8004508 <xPortStartScheduler+0xd0>)
 8004464:	701a      	strb	r2, [r3, #0]
 8004466:	4b29      	ldr	r3, [pc, #164]	; (800450c <xPortStartScheduler+0xd4>)
 8004468:	2207      	movs	r2, #7
 800446a:	601a      	str	r2, [r3, #0]
 800446c:	e009      	b.n	8004482 <xPortStartScheduler+0x4a>
 800446e:	4b27      	ldr	r3, [pc, #156]	; (800450c <xPortStartScheduler+0xd4>)
 8004470:	681b      	ldr	r3, [r3, #0]
 8004472:	3b01      	subs	r3, #1
 8004474:	4a25      	ldr	r2, [pc, #148]	; (800450c <xPortStartScheduler+0xd4>)
 8004476:	6013      	str	r3, [r2, #0]
 8004478:	78fb      	ldrb	r3, [r7, #3]
 800447a:	b2db      	uxtb	r3, r3
 800447c:	005b      	lsls	r3, r3, #1
 800447e:	b2db      	uxtb	r3, r3
 8004480:	70fb      	strb	r3, [r7, #3]
 8004482:	78fb      	ldrb	r3, [r7, #3]
 8004484:	b2db      	uxtb	r3, r3
 8004486:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800448a:	2b80      	cmp	r3, #128	; 0x80
 800448c:	d0ef      	beq.n	800446e <xPortStartScheduler+0x36>
 800448e:	4b1f      	ldr	r3, [pc, #124]	; (800450c <xPortStartScheduler+0xd4>)
 8004490:	681b      	ldr	r3, [r3, #0]
 8004492:	f1c3 0307 	rsb	r3, r3, #7
 8004496:	2b04      	cmp	r3, #4
 8004498:	d009      	beq.n	80044ae <xPortStartScheduler+0x76>
 800449a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800449e:	f383 8811 	msr	BASEPRI, r3
 80044a2:	f3bf 8f6f 	isb	sy
 80044a6:	f3bf 8f4f 	dsb	sy
 80044aa:	60bb      	str	r3, [r7, #8]
 80044ac:	e7fe      	b.n	80044ac <xPortStartScheduler+0x74>
 80044ae:	4b17      	ldr	r3, [pc, #92]	; (800450c <xPortStartScheduler+0xd4>)
 80044b0:	681b      	ldr	r3, [r3, #0]
 80044b2:	021b      	lsls	r3, r3, #8
 80044b4:	4a15      	ldr	r2, [pc, #84]	; (800450c <xPortStartScheduler+0xd4>)
 80044b6:	6013      	str	r3, [r2, #0]
 80044b8:	4b14      	ldr	r3, [pc, #80]	; (800450c <xPortStartScheduler+0xd4>)
 80044ba:	681b      	ldr	r3, [r3, #0]
 80044bc:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 80044c0:	4a12      	ldr	r2, [pc, #72]	; (800450c <xPortStartScheduler+0xd4>)
 80044c2:	6013      	str	r3, [r2, #0]
 80044c4:	687b      	ldr	r3, [r7, #4]
 80044c6:	b2da      	uxtb	r2, r3
 80044c8:	68fb      	ldr	r3, [r7, #12]
 80044ca:	701a      	strb	r2, [r3, #0]
 80044cc:	4b10      	ldr	r3, [pc, #64]	; (8004510 <xPortStartScheduler+0xd8>)
 80044ce:	681b      	ldr	r3, [r3, #0]
 80044d0:	4a0f      	ldr	r2, [pc, #60]	; (8004510 <xPortStartScheduler+0xd8>)
 80044d2:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80044d6:	6013      	str	r3, [r2, #0]
 80044d8:	4b0d      	ldr	r3, [pc, #52]	; (8004510 <xPortStartScheduler+0xd8>)
 80044da:	681b      	ldr	r3, [r3, #0]
 80044dc:	4a0c      	ldr	r2, [pc, #48]	; (8004510 <xPortStartScheduler+0xd8>)
 80044de:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 80044e2:	6013      	str	r3, [r2, #0]
 80044e4:	f000 f8b0 	bl	8004648 <vPortSetupTimerInterrupt>
 80044e8:	4b0a      	ldr	r3, [pc, #40]	; (8004514 <xPortStartScheduler+0xdc>)
 80044ea:	2200      	movs	r2, #0
 80044ec:	601a      	str	r2, [r3, #0]
 80044ee:	f7ff ff93 	bl	8004418 <prvPortStartFirstTask>
 80044f2:	f7ff f8db 	bl	80036ac <vTaskSwitchContext>
 80044f6:	f7ff ff51 	bl	800439c <prvTaskExitError>
 80044fa:	2300      	movs	r3, #0
 80044fc:	4618      	mov	r0, r3
 80044fe:	3710      	adds	r7, #16
 8004500:	46bd      	mov	sp, r7
 8004502:	bd80      	pop	{r7, pc}
 8004504:	e000e400 	.word	0xe000e400
 8004508:	20000dbc 	.word	0x20000dbc
 800450c:	20000dc0 	.word	0x20000dc0
 8004510:	e000ed20 	.word	0xe000ed20
 8004514:	20000044 	.word	0x20000044

08004518 <vPortEnterCritical>:
 8004518:	b480      	push	{r7}
 800451a:	b083      	sub	sp, #12
 800451c:	af00      	add	r7, sp, #0
 800451e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004522:	f383 8811 	msr	BASEPRI, r3
 8004526:	f3bf 8f6f 	isb	sy
 800452a:	f3bf 8f4f 	dsb	sy
 800452e:	607b      	str	r3, [r7, #4]
 8004530:	4b0e      	ldr	r3, [pc, #56]	; (800456c <vPortEnterCritical+0x54>)
 8004532:	681b      	ldr	r3, [r3, #0]
 8004534:	3301      	adds	r3, #1
 8004536:	4a0d      	ldr	r2, [pc, #52]	; (800456c <vPortEnterCritical+0x54>)
 8004538:	6013      	str	r3, [r2, #0]
 800453a:	4b0c      	ldr	r3, [pc, #48]	; (800456c <vPortEnterCritical+0x54>)
 800453c:	681b      	ldr	r3, [r3, #0]
 800453e:	2b01      	cmp	r3, #1
 8004540:	d10e      	bne.n	8004560 <vPortEnterCritical+0x48>
 8004542:	4b0b      	ldr	r3, [pc, #44]	; (8004570 <vPortEnterCritical+0x58>)
 8004544:	681b      	ldr	r3, [r3, #0]
 8004546:	b2db      	uxtb	r3, r3
 8004548:	2b00      	cmp	r3, #0
 800454a:	d009      	beq.n	8004560 <vPortEnterCritical+0x48>
 800454c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004550:	f383 8811 	msr	BASEPRI, r3
 8004554:	f3bf 8f6f 	isb	sy
 8004558:	f3bf 8f4f 	dsb	sy
 800455c:	603b      	str	r3, [r7, #0]
 800455e:	e7fe      	b.n	800455e <vPortEnterCritical+0x46>
 8004560:	bf00      	nop
 8004562:	370c      	adds	r7, #12
 8004564:	46bd      	mov	sp, r7
 8004566:	bc80      	pop	{r7}
 8004568:	4770      	bx	lr
 800456a:	bf00      	nop
 800456c:	20000044 	.word	0x20000044
 8004570:	e000ed04 	.word	0xe000ed04

08004574 <vPortExitCritical>:
 8004574:	b480      	push	{r7}
 8004576:	b083      	sub	sp, #12
 8004578:	af00      	add	r7, sp, #0
 800457a:	4b10      	ldr	r3, [pc, #64]	; (80045bc <vPortExitCritical+0x48>)
 800457c:	681b      	ldr	r3, [r3, #0]
 800457e:	2b00      	cmp	r3, #0
 8004580:	d109      	bne.n	8004596 <vPortExitCritical+0x22>
 8004582:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004586:	f383 8811 	msr	BASEPRI, r3
 800458a:	f3bf 8f6f 	isb	sy
 800458e:	f3bf 8f4f 	dsb	sy
 8004592:	607b      	str	r3, [r7, #4]
 8004594:	e7fe      	b.n	8004594 <vPortExitCritical+0x20>
 8004596:	4b09      	ldr	r3, [pc, #36]	; (80045bc <vPortExitCritical+0x48>)
 8004598:	681b      	ldr	r3, [r3, #0]
 800459a:	3b01      	subs	r3, #1
 800459c:	4a07      	ldr	r2, [pc, #28]	; (80045bc <vPortExitCritical+0x48>)
 800459e:	6013      	str	r3, [r2, #0]
 80045a0:	4b06      	ldr	r3, [pc, #24]	; (80045bc <vPortExitCritical+0x48>)
 80045a2:	681b      	ldr	r3, [r3, #0]
 80045a4:	2b00      	cmp	r3, #0
 80045a6:	d104      	bne.n	80045b2 <vPortExitCritical+0x3e>
 80045a8:	2300      	movs	r3, #0
 80045aa:	603b      	str	r3, [r7, #0]
 80045ac:	683b      	ldr	r3, [r7, #0]
 80045ae:	f383 8811 	msr	BASEPRI, r3
 80045b2:	bf00      	nop
 80045b4:	370c      	adds	r7, #12
 80045b6:	46bd      	mov	sp, r7
 80045b8:	bc80      	pop	{r7}
 80045ba:	4770      	bx	lr
 80045bc:	20000044 	.word	0x20000044

080045c0 <PendSV_Handler>:
 80045c0:	f3ef 8009 	mrs	r0, PSP
 80045c4:	f3bf 8f6f 	isb	sy
 80045c8:	4b0d      	ldr	r3, [pc, #52]	; (8004600 <pxCurrentTCBConst>)
 80045ca:	681a      	ldr	r2, [r3, #0]
 80045cc:	e920 0ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 80045d0:	6010      	str	r0, [r2, #0]
 80045d2:	e92d 4008 	stmdb	sp!, {r3, lr}
 80045d6:	f04f 0050 	mov.w	r0, #80	; 0x50
 80045da:	f380 8811 	msr	BASEPRI, r0
 80045de:	f7ff f865 	bl	80036ac <vTaskSwitchContext>
 80045e2:	f04f 0000 	mov.w	r0, #0
 80045e6:	f380 8811 	msr	BASEPRI, r0
 80045ea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 80045ee:	6819      	ldr	r1, [r3, #0]
 80045f0:	6808      	ldr	r0, [r1, #0]
 80045f2:	e8b0 0ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp}
 80045f6:	f380 8809 	msr	PSP, r0
 80045fa:	f3bf 8f6f 	isb	sy
 80045fe:	4770      	bx	lr

08004600 <pxCurrentTCBConst>:
 8004600:	20000790 	.word	0x20000790
 8004604:	bf00      	nop
 8004606:	bf00      	nop

08004608 <xPortSysTickHandler>:
 8004608:	b580      	push	{r7, lr}
 800460a:	b082      	sub	sp, #8
 800460c:	af00      	add	r7, sp, #0
 800460e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004612:	f383 8811 	msr	BASEPRI, r3
 8004616:	f3bf 8f6f 	isb	sy
 800461a:	f3bf 8f4f 	dsb	sy
 800461e:	607b      	str	r3, [r7, #4]
 8004620:	f7fe ff86 	bl	8003530 <xTaskIncrementTick>
 8004624:	4603      	mov	r3, r0
 8004626:	2b00      	cmp	r3, #0
 8004628:	d003      	beq.n	8004632 <xPortSysTickHandler+0x2a>
 800462a:	4b06      	ldr	r3, [pc, #24]	; (8004644 <xPortSysTickHandler+0x3c>)
 800462c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8004630:	601a      	str	r2, [r3, #0]
 8004632:	2300      	movs	r3, #0
 8004634:	603b      	str	r3, [r7, #0]
 8004636:	683b      	ldr	r3, [r7, #0]
 8004638:	f383 8811 	msr	BASEPRI, r3
 800463c:	bf00      	nop
 800463e:	3708      	adds	r7, #8
 8004640:	46bd      	mov	sp, r7
 8004642:	bd80      	pop	{r7, pc}
 8004644:	e000ed04 	.word	0xe000ed04

08004648 <vPortSetupTimerInterrupt>:
 8004648:	b480      	push	{r7}
 800464a:	af00      	add	r7, sp, #0
 800464c:	4b0a      	ldr	r3, [pc, #40]	; (8004678 <vPortSetupTimerInterrupt+0x30>)
 800464e:	2200      	movs	r2, #0
 8004650:	601a      	str	r2, [r3, #0]
 8004652:	4b0a      	ldr	r3, [pc, #40]	; (800467c <vPortSetupTimerInterrupt+0x34>)
 8004654:	2200      	movs	r2, #0
 8004656:	601a      	str	r2, [r3, #0]
 8004658:	4b09      	ldr	r3, [pc, #36]	; (8004680 <vPortSetupTimerInterrupt+0x38>)
 800465a:	681b      	ldr	r3, [r3, #0]
 800465c:	4a09      	ldr	r2, [pc, #36]	; (8004684 <vPortSetupTimerInterrupt+0x3c>)
 800465e:	fba2 2303 	umull	r2, r3, r2, r3
 8004662:	099b      	lsrs	r3, r3, #6
 8004664:	4a08      	ldr	r2, [pc, #32]	; (8004688 <vPortSetupTimerInterrupt+0x40>)
 8004666:	3b01      	subs	r3, #1
 8004668:	6013      	str	r3, [r2, #0]
 800466a:	4b03      	ldr	r3, [pc, #12]	; (8004678 <vPortSetupTimerInterrupt+0x30>)
 800466c:	2207      	movs	r2, #7
 800466e:	601a      	str	r2, [r3, #0]
 8004670:	bf00      	nop
 8004672:	46bd      	mov	sp, r7
 8004674:	bc80      	pop	{r7}
 8004676:	4770      	bx	lr
 8004678:	e000e010 	.word	0xe000e010
 800467c:	e000e018 	.word	0xe000e018
 8004680:	20000038 	.word	0x20000038
 8004684:	10624dd3 	.word	0x10624dd3
 8004688:	e000e014 	.word	0xe000e014

0800468c <vPortValidateInterruptPriority>:
 800468c:	b480      	push	{r7}
 800468e:	b085      	sub	sp, #20
 8004690:	af00      	add	r7, sp, #0
 8004692:	f3ef 8305 	mrs	r3, IPSR
 8004696:	60fb      	str	r3, [r7, #12]
 8004698:	68fb      	ldr	r3, [r7, #12]
 800469a:	2b0f      	cmp	r3, #15
 800469c:	d913      	bls.n	80046c6 <vPortValidateInterruptPriority+0x3a>
 800469e:	4a15      	ldr	r2, [pc, #84]	; (80046f4 <vPortValidateInterruptPriority+0x68>)
 80046a0:	68fb      	ldr	r3, [r7, #12]
 80046a2:	4413      	add	r3, r2
 80046a4:	781b      	ldrb	r3, [r3, #0]
 80046a6:	72fb      	strb	r3, [r7, #11]
 80046a8:	4b13      	ldr	r3, [pc, #76]	; (80046f8 <vPortValidateInterruptPriority+0x6c>)
 80046aa:	781b      	ldrb	r3, [r3, #0]
 80046ac:	7afa      	ldrb	r2, [r7, #11]
 80046ae:	429a      	cmp	r2, r3
 80046b0:	d209      	bcs.n	80046c6 <vPortValidateInterruptPriority+0x3a>
 80046b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80046b6:	f383 8811 	msr	BASEPRI, r3
 80046ba:	f3bf 8f6f 	isb	sy
 80046be:	f3bf 8f4f 	dsb	sy
 80046c2:	607b      	str	r3, [r7, #4]
 80046c4:	e7fe      	b.n	80046c4 <vPortValidateInterruptPriority+0x38>
 80046c6:	4b0d      	ldr	r3, [pc, #52]	; (80046fc <vPortValidateInterruptPriority+0x70>)
 80046c8:	681b      	ldr	r3, [r3, #0]
 80046ca:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 80046ce:	4b0c      	ldr	r3, [pc, #48]	; (8004700 <vPortValidateInterruptPriority+0x74>)
 80046d0:	681b      	ldr	r3, [r3, #0]
 80046d2:	429a      	cmp	r2, r3
 80046d4:	d909      	bls.n	80046ea <vPortValidateInterruptPriority+0x5e>
 80046d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80046da:	f383 8811 	msr	BASEPRI, r3
 80046de:	f3bf 8f6f 	isb	sy
 80046e2:	f3bf 8f4f 	dsb	sy
 80046e6:	603b      	str	r3, [r7, #0]
 80046e8:	e7fe      	b.n	80046e8 <vPortValidateInterruptPriority+0x5c>
 80046ea:	bf00      	nop
 80046ec:	3714      	adds	r7, #20
 80046ee:	46bd      	mov	sp, r7
 80046f0:	bc80      	pop	{r7}
 80046f2:	4770      	bx	lr
 80046f4:	e000e3f0 	.word	0xe000e3f0
 80046f8:	20000dbc 	.word	0x20000dbc
 80046fc:	e000ed0c 	.word	0xe000ed0c
 8004700:	20000dc0 	.word	0x20000dc0

08004704 <pvPortMalloc>:
 8004704:	b580      	push	{r7, lr}
 8004706:	b08a      	sub	sp, #40	; 0x28
 8004708:	af00      	add	r7, sp, #0
 800470a:	6078      	str	r0, [r7, #4]
 800470c:	2300      	movs	r3, #0
 800470e:	61fb      	str	r3, [r7, #28]
 8004710:	f7fe fe34 	bl	800337c <vTaskSuspendAll>
 8004714:	4b57      	ldr	r3, [pc, #348]	; (8004874 <pvPortMalloc+0x170>)
 8004716:	681b      	ldr	r3, [r3, #0]
 8004718:	2b00      	cmp	r3, #0
 800471a:	d101      	bne.n	8004720 <pvPortMalloc+0x1c>
 800471c:	f000 f90c 	bl	8004938 <prvHeapInit>
 8004720:	4b55      	ldr	r3, [pc, #340]	; (8004878 <pvPortMalloc+0x174>)
 8004722:	681a      	ldr	r2, [r3, #0]
 8004724:	687b      	ldr	r3, [r7, #4]
 8004726:	4013      	ands	r3, r2
 8004728:	2b00      	cmp	r3, #0
 800472a:	f040 808c 	bne.w	8004846 <pvPortMalloc+0x142>
 800472e:	687b      	ldr	r3, [r7, #4]
 8004730:	2b00      	cmp	r3, #0
 8004732:	d01c      	beq.n	800476e <pvPortMalloc+0x6a>
 8004734:	2208      	movs	r2, #8
 8004736:	687b      	ldr	r3, [r7, #4]
 8004738:	4413      	add	r3, r2
 800473a:	607b      	str	r3, [r7, #4]
 800473c:	687b      	ldr	r3, [r7, #4]
 800473e:	f003 0307 	and.w	r3, r3, #7
 8004742:	2b00      	cmp	r3, #0
 8004744:	d013      	beq.n	800476e <pvPortMalloc+0x6a>
 8004746:	687b      	ldr	r3, [r7, #4]
 8004748:	f023 0307 	bic.w	r3, r3, #7
 800474c:	3308      	adds	r3, #8
 800474e:	607b      	str	r3, [r7, #4]
 8004750:	687b      	ldr	r3, [r7, #4]
 8004752:	f003 0307 	and.w	r3, r3, #7
 8004756:	2b00      	cmp	r3, #0
 8004758:	d009      	beq.n	800476e <pvPortMalloc+0x6a>
 800475a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800475e:	f383 8811 	msr	BASEPRI, r3
 8004762:	f3bf 8f6f 	isb	sy
 8004766:	f3bf 8f4f 	dsb	sy
 800476a:	617b      	str	r3, [r7, #20]
 800476c:	e7fe      	b.n	800476c <pvPortMalloc+0x68>
 800476e:	687b      	ldr	r3, [r7, #4]
 8004770:	2b00      	cmp	r3, #0
 8004772:	d068      	beq.n	8004846 <pvPortMalloc+0x142>
 8004774:	4b41      	ldr	r3, [pc, #260]	; (800487c <pvPortMalloc+0x178>)
 8004776:	681b      	ldr	r3, [r3, #0]
 8004778:	687a      	ldr	r2, [r7, #4]
 800477a:	429a      	cmp	r2, r3
 800477c:	d863      	bhi.n	8004846 <pvPortMalloc+0x142>
 800477e:	4b40      	ldr	r3, [pc, #256]	; (8004880 <pvPortMalloc+0x17c>)
 8004780:	623b      	str	r3, [r7, #32]
 8004782:	4b3f      	ldr	r3, [pc, #252]	; (8004880 <pvPortMalloc+0x17c>)
 8004784:	681b      	ldr	r3, [r3, #0]
 8004786:	627b      	str	r3, [r7, #36]	; 0x24
 8004788:	e004      	b.n	8004794 <pvPortMalloc+0x90>
 800478a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800478c:	623b      	str	r3, [r7, #32]
 800478e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004790:	681b      	ldr	r3, [r3, #0]
 8004792:	627b      	str	r3, [r7, #36]	; 0x24
 8004794:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004796:	685b      	ldr	r3, [r3, #4]
 8004798:	687a      	ldr	r2, [r7, #4]
 800479a:	429a      	cmp	r2, r3
 800479c:	d903      	bls.n	80047a6 <pvPortMalloc+0xa2>
 800479e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80047a0:	681b      	ldr	r3, [r3, #0]
 80047a2:	2b00      	cmp	r3, #0
 80047a4:	d1f1      	bne.n	800478a <pvPortMalloc+0x86>
 80047a6:	4b33      	ldr	r3, [pc, #204]	; (8004874 <pvPortMalloc+0x170>)
 80047a8:	681b      	ldr	r3, [r3, #0]
 80047aa:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80047ac:	429a      	cmp	r2, r3
 80047ae:	d04a      	beq.n	8004846 <pvPortMalloc+0x142>
 80047b0:	6a3b      	ldr	r3, [r7, #32]
 80047b2:	681b      	ldr	r3, [r3, #0]
 80047b4:	2208      	movs	r2, #8
 80047b6:	4413      	add	r3, r2
 80047b8:	61fb      	str	r3, [r7, #28]
 80047ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80047bc:	681a      	ldr	r2, [r3, #0]
 80047be:	6a3b      	ldr	r3, [r7, #32]
 80047c0:	601a      	str	r2, [r3, #0]
 80047c2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80047c4:	685a      	ldr	r2, [r3, #4]
 80047c6:	687b      	ldr	r3, [r7, #4]
 80047c8:	1ad2      	subs	r2, r2, r3
 80047ca:	2308      	movs	r3, #8
 80047cc:	005b      	lsls	r3, r3, #1
 80047ce:	429a      	cmp	r2, r3
 80047d0:	d91e      	bls.n	8004810 <pvPortMalloc+0x10c>
 80047d2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80047d4:	687b      	ldr	r3, [r7, #4]
 80047d6:	4413      	add	r3, r2
 80047d8:	61bb      	str	r3, [r7, #24]
 80047da:	69bb      	ldr	r3, [r7, #24]
 80047dc:	f003 0307 	and.w	r3, r3, #7
 80047e0:	2b00      	cmp	r3, #0
 80047e2:	d009      	beq.n	80047f8 <pvPortMalloc+0xf4>
 80047e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80047e8:	f383 8811 	msr	BASEPRI, r3
 80047ec:	f3bf 8f6f 	isb	sy
 80047f0:	f3bf 8f4f 	dsb	sy
 80047f4:	613b      	str	r3, [r7, #16]
 80047f6:	e7fe      	b.n	80047f6 <pvPortMalloc+0xf2>
 80047f8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80047fa:	685a      	ldr	r2, [r3, #4]
 80047fc:	687b      	ldr	r3, [r7, #4]
 80047fe:	1ad2      	subs	r2, r2, r3
 8004800:	69bb      	ldr	r3, [r7, #24]
 8004802:	605a      	str	r2, [r3, #4]
 8004804:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004806:	687a      	ldr	r2, [r7, #4]
 8004808:	605a      	str	r2, [r3, #4]
 800480a:	69b8      	ldr	r0, [r7, #24]
 800480c:	f000 f8f6 	bl	80049fc <prvInsertBlockIntoFreeList>
 8004810:	4b1a      	ldr	r3, [pc, #104]	; (800487c <pvPortMalloc+0x178>)
 8004812:	681a      	ldr	r2, [r3, #0]
 8004814:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004816:	685b      	ldr	r3, [r3, #4]
 8004818:	1ad3      	subs	r3, r2, r3
 800481a:	4a18      	ldr	r2, [pc, #96]	; (800487c <pvPortMalloc+0x178>)
 800481c:	6013      	str	r3, [r2, #0]
 800481e:	4b17      	ldr	r3, [pc, #92]	; (800487c <pvPortMalloc+0x178>)
 8004820:	681a      	ldr	r2, [r3, #0]
 8004822:	4b18      	ldr	r3, [pc, #96]	; (8004884 <pvPortMalloc+0x180>)
 8004824:	681b      	ldr	r3, [r3, #0]
 8004826:	429a      	cmp	r2, r3
 8004828:	d203      	bcs.n	8004832 <pvPortMalloc+0x12e>
 800482a:	4b14      	ldr	r3, [pc, #80]	; (800487c <pvPortMalloc+0x178>)
 800482c:	681b      	ldr	r3, [r3, #0]
 800482e:	4a15      	ldr	r2, [pc, #84]	; (8004884 <pvPortMalloc+0x180>)
 8004830:	6013      	str	r3, [r2, #0]
 8004832:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004834:	685a      	ldr	r2, [r3, #4]
 8004836:	4b10      	ldr	r3, [pc, #64]	; (8004878 <pvPortMalloc+0x174>)
 8004838:	681b      	ldr	r3, [r3, #0]
 800483a:	431a      	orrs	r2, r3
 800483c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800483e:	605a      	str	r2, [r3, #4]
 8004840:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004842:	2200      	movs	r2, #0
 8004844:	601a      	str	r2, [r3, #0]
 8004846:	f7fe fda7 	bl	8003398 <xTaskResumeAll>
 800484a:	69fb      	ldr	r3, [r7, #28]
 800484c:	f003 0307 	and.w	r3, r3, #7
 8004850:	2b00      	cmp	r3, #0
 8004852:	d009      	beq.n	8004868 <pvPortMalloc+0x164>
 8004854:	f04f 0350 	mov.w	r3, #80	; 0x50
 8004858:	f383 8811 	msr	BASEPRI, r3
 800485c:	f3bf 8f6f 	isb	sy
 8004860:	f3bf 8f4f 	dsb	sy
 8004864:	60fb      	str	r3, [r7, #12]
 8004866:	e7fe      	b.n	8004866 <pvPortMalloc+0x162>
 8004868:	69fb      	ldr	r3, [r7, #28]
 800486a:	4618      	mov	r0, r3
 800486c:	3728      	adds	r7, #40	; 0x28
 800486e:	46bd      	mov	sp, r7
 8004870:	bd80      	pop	{r7, pc}
 8004872:	bf00      	nop
 8004874:	20002dcc 	.word	0x20002dcc
 8004878:	20002dd8 	.word	0x20002dd8
 800487c:	20002dd0 	.word	0x20002dd0
 8004880:	20002dc4 	.word	0x20002dc4
 8004884:	20002dd4 	.word	0x20002dd4

08004888 <vPortFree>:
 8004888:	b580      	push	{r7, lr}
 800488a:	b086      	sub	sp, #24
 800488c:	af00      	add	r7, sp, #0
 800488e:	6078      	str	r0, [r7, #4]
 8004890:	687b      	ldr	r3, [r7, #4]
 8004892:	617b      	str	r3, [r7, #20]
 8004894:	687b      	ldr	r3, [r7, #4]
 8004896:	2b00      	cmp	r3, #0
 8004898:	d046      	beq.n	8004928 <vPortFree+0xa0>
 800489a:	2308      	movs	r3, #8
 800489c:	425b      	negs	r3, r3
 800489e:	697a      	ldr	r2, [r7, #20]
 80048a0:	4413      	add	r3, r2
 80048a2:	617b      	str	r3, [r7, #20]
 80048a4:	697b      	ldr	r3, [r7, #20]
 80048a6:	613b      	str	r3, [r7, #16]
 80048a8:	693b      	ldr	r3, [r7, #16]
 80048aa:	685a      	ldr	r2, [r3, #4]
 80048ac:	4b20      	ldr	r3, [pc, #128]	; (8004930 <vPortFree+0xa8>)
 80048ae:	681b      	ldr	r3, [r3, #0]
 80048b0:	4013      	ands	r3, r2
 80048b2:	2b00      	cmp	r3, #0
 80048b4:	d109      	bne.n	80048ca <vPortFree+0x42>
 80048b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80048ba:	f383 8811 	msr	BASEPRI, r3
 80048be:	f3bf 8f6f 	isb	sy
 80048c2:	f3bf 8f4f 	dsb	sy
 80048c6:	60fb      	str	r3, [r7, #12]
 80048c8:	e7fe      	b.n	80048c8 <vPortFree+0x40>
 80048ca:	693b      	ldr	r3, [r7, #16]
 80048cc:	681b      	ldr	r3, [r3, #0]
 80048ce:	2b00      	cmp	r3, #0
 80048d0:	d009      	beq.n	80048e6 <vPortFree+0x5e>
 80048d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80048d6:	f383 8811 	msr	BASEPRI, r3
 80048da:	f3bf 8f6f 	isb	sy
 80048de:	f3bf 8f4f 	dsb	sy
 80048e2:	60bb      	str	r3, [r7, #8]
 80048e4:	e7fe      	b.n	80048e4 <vPortFree+0x5c>
 80048e6:	693b      	ldr	r3, [r7, #16]
 80048e8:	685a      	ldr	r2, [r3, #4]
 80048ea:	4b11      	ldr	r3, [pc, #68]	; (8004930 <vPortFree+0xa8>)
 80048ec:	681b      	ldr	r3, [r3, #0]
 80048ee:	4013      	ands	r3, r2
 80048f0:	2b00      	cmp	r3, #0
 80048f2:	d019      	beq.n	8004928 <vPortFree+0xa0>
 80048f4:	693b      	ldr	r3, [r7, #16]
 80048f6:	681b      	ldr	r3, [r3, #0]
 80048f8:	2b00      	cmp	r3, #0
 80048fa:	d115      	bne.n	8004928 <vPortFree+0xa0>
 80048fc:	693b      	ldr	r3, [r7, #16]
 80048fe:	685a      	ldr	r2, [r3, #4]
 8004900:	4b0b      	ldr	r3, [pc, #44]	; (8004930 <vPortFree+0xa8>)
 8004902:	681b      	ldr	r3, [r3, #0]
 8004904:	43db      	mvns	r3, r3
 8004906:	401a      	ands	r2, r3
 8004908:	693b      	ldr	r3, [r7, #16]
 800490a:	605a      	str	r2, [r3, #4]
 800490c:	f7fe fd36 	bl	800337c <vTaskSuspendAll>
 8004910:	693b      	ldr	r3, [r7, #16]
 8004912:	685a      	ldr	r2, [r3, #4]
 8004914:	4b07      	ldr	r3, [pc, #28]	; (8004934 <vPortFree+0xac>)
 8004916:	681b      	ldr	r3, [r3, #0]
 8004918:	4413      	add	r3, r2
 800491a:	4a06      	ldr	r2, [pc, #24]	; (8004934 <vPortFree+0xac>)
 800491c:	6013      	str	r3, [r2, #0]
 800491e:	6938      	ldr	r0, [r7, #16]
 8004920:	f000 f86c 	bl	80049fc <prvInsertBlockIntoFreeList>
 8004924:	f7fe fd38 	bl	8003398 <xTaskResumeAll>
 8004928:	bf00      	nop
 800492a:	3718      	adds	r7, #24
 800492c:	46bd      	mov	sp, r7
 800492e:	bd80      	pop	{r7, pc}
 8004930:	20002dd8 	.word	0x20002dd8
 8004934:	20002dd0 	.word	0x20002dd0

08004938 <prvHeapInit>:
 8004938:	b480      	push	{r7}
 800493a:	b085      	sub	sp, #20
 800493c:	af00      	add	r7, sp, #0
 800493e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8004942:	60bb      	str	r3, [r7, #8]
 8004944:	4b27      	ldr	r3, [pc, #156]	; (80049e4 <prvHeapInit+0xac>)
 8004946:	60fb      	str	r3, [r7, #12]
 8004948:	68fb      	ldr	r3, [r7, #12]
 800494a:	f003 0307 	and.w	r3, r3, #7
 800494e:	2b00      	cmp	r3, #0
 8004950:	d00c      	beq.n	800496c <prvHeapInit+0x34>
 8004952:	68fb      	ldr	r3, [r7, #12]
 8004954:	3307      	adds	r3, #7
 8004956:	60fb      	str	r3, [r7, #12]
 8004958:	68fb      	ldr	r3, [r7, #12]
 800495a:	f023 0307 	bic.w	r3, r3, #7
 800495e:	60fb      	str	r3, [r7, #12]
 8004960:	68ba      	ldr	r2, [r7, #8]
 8004962:	68fb      	ldr	r3, [r7, #12]
 8004964:	1ad3      	subs	r3, r2, r3
 8004966:	4a1f      	ldr	r2, [pc, #124]	; (80049e4 <prvHeapInit+0xac>)
 8004968:	4413      	add	r3, r2
 800496a:	60bb      	str	r3, [r7, #8]
 800496c:	68fb      	ldr	r3, [r7, #12]
 800496e:	607b      	str	r3, [r7, #4]
 8004970:	4a1d      	ldr	r2, [pc, #116]	; (80049e8 <prvHeapInit+0xb0>)
 8004972:	687b      	ldr	r3, [r7, #4]
 8004974:	6013      	str	r3, [r2, #0]
 8004976:	4b1c      	ldr	r3, [pc, #112]	; (80049e8 <prvHeapInit+0xb0>)
 8004978:	2200      	movs	r2, #0
 800497a:	605a      	str	r2, [r3, #4]
 800497c:	687b      	ldr	r3, [r7, #4]
 800497e:	68ba      	ldr	r2, [r7, #8]
 8004980:	4413      	add	r3, r2
 8004982:	60fb      	str	r3, [r7, #12]
 8004984:	2208      	movs	r2, #8
 8004986:	68fb      	ldr	r3, [r7, #12]
 8004988:	1a9b      	subs	r3, r3, r2
 800498a:	60fb      	str	r3, [r7, #12]
 800498c:	68fb      	ldr	r3, [r7, #12]
 800498e:	f023 0307 	bic.w	r3, r3, #7
 8004992:	60fb      	str	r3, [r7, #12]
 8004994:	68fb      	ldr	r3, [r7, #12]
 8004996:	4a15      	ldr	r2, [pc, #84]	; (80049ec <prvHeapInit+0xb4>)
 8004998:	6013      	str	r3, [r2, #0]
 800499a:	4b14      	ldr	r3, [pc, #80]	; (80049ec <prvHeapInit+0xb4>)
 800499c:	681b      	ldr	r3, [r3, #0]
 800499e:	2200      	movs	r2, #0
 80049a0:	605a      	str	r2, [r3, #4]
 80049a2:	4b12      	ldr	r3, [pc, #72]	; (80049ec <prvHeapInit+0xb4>)
 80049a4:	681b      	ldr	r3, [r3, #0]
 80049a6:	2200      	movs	r2, #0
 80049a8:	601a      	str	r2, [r3, #0]
 80049aa:	687b      	ldr	r3, [r7, #4]
 80049ac:	603b      	str	r3, [r7, #0]
 80049ae:	683b      	ldr	r3, [r7, #0]
 80049b0:	68fa      	ldr	r2, [r7, #12]
 80049b2:	1ad2      	subs	r2, r2, r3
 80049b4:	683b      	ldr	r3, [r7, #0]
 80049b6:	605a      	str	r2, [r3, #4]
 80049b8:	4b0c      	ldr	r3, [pc, #48]	; (80049ec <prvHeapInit+0xb4>)
 80049ba:	681a      	ldr	r2, [r3, #0]
 80049bc:	683b      	ldr	r3, [r7, #0]
 80049be:	601a      	str	r2, [r3, #0]
 80049c0:	683b      	ldr	r3, [r7, #0]
 80049c2:	685b      	ldr	r3, [r3, #4]
 80049c4:	4a0a      	ldr	r2, [pc, #40]	; (80049f0 <prvHeapInit+0xb8>)
 80049c6:	6013      	str	r3, [r2, #0]
 80049c8:	683b      	ldr	r3, [r7, #0]
 80049ca:	685b      	ldr	r3, [r3, #4]
 80049cc:	4a09      	ldr	r2, [pc, #36]	; (80049f4 <prvHeapInit+0xbc>)
 80049ce:	6013      	str	r3, [r2, #0]
 80049d0:	4b09      	ldr	r3, [pc, #36]	; (80049f8 <prvHeapInit+0xc0>)
 80049d2:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80049d6:	601a      	str	r2, [r3, #0]
 80049d8:	bf00      	nop
 80049da:	3714      	adds	r7, #20
 80049dc:	46bd      	mov	sp, r7
 80049de:	bc80      	pop	{r7}
 80049e0:	4770      	bx	lr
 80049e2:	bf00      	nop
 80049e4:	20000dc4 	.word	0x20000dc4
 80049e8:	20002dc4 	.word	0x20002dc4
 80049ec:	20002dcc 	.word	0x20002dcc
 80049f0:	20002dd4 	.word	0x20002dd4
 80049f4:	20002dd0 	.word	0x20002dd0
 80049f8:	20002dd8 	.word	0x20002dd8

080049fc <prvInsertBlockIntoFreeList>:
 80049fc:	b480      	push	{r7}
 80049fe:	b085      	sub	sp, #20
 8004a00:	af00      	add	r7, sp, #0
 8004a02:	6078      	str	r0, [r7, #4]
 8004a04:	4b27      	ldr	r3, [pc, #156]	; (8004aa4 <prvInsertBlockIntoFreeList+0xa8>)
 8004a06:	60fb      	str	r3, [r7, #12]
 8004a08:	e002      	b.n	8004a10 <prvInsertBlockIntoFreeList+0x14>
 8004a0a:	68fb      	ldr	r3, [r7, #12]
 8004a0c:	681b      	ldr	r3, [r3, #0]
 8004a0e:	60fb      	str	r3, [r7, #12]
 8004a10:	68fb      	ldr	r3, [r7, #12]
 8004a12:	681b      	ldr	r3, [r3, #0]
 8004a14:	687a      	ldr	r2, [r7, #4]
 8004a16:	429a      	cmp	r2, r3
 8004a18:	d8f7      	bhi.n	8004a0a <prvInsertBlockIntoFreeList+0xe>
 8004a1a:	68fb      	ldr	r3, [r7, #12]
 8004a1c:	60bb      	str	r3, [r7, #8]
 8004a1e:	68fb      	ldr	r3, [r7, #12]
 8004a20:	685b      	ldr	r3, [r3, #4]
 8004a22:	68ba      	ldr	r2, [r7, #8]
 8004a24:	4413      	add	r3, r2
 8004a26:	687a      	ldr	r2, [r7, #4]
 8004a28:	429a      	cmp	r2, r3
 8004a2a:	d108      	bne.n	8004a3e <prvInsertBlockIntoFreeList+0x42>
 8004a2c:	68fb      	ldr	r3, [r7, #12]
 8004a2e:	685a      	ldr	r2, [r3, #4]
 8004a30:	687b      	ldr	r3, [r7, #4]
 8004a32:	685b      	ldr	r3, [r3, #4]
 8004a34:	441a      	add	r2, r3
 8004a36:	68fb      	ldr	r3, [r7, #12]
 8004a38:	605a      	str	r2, [r3, #4]
 8004a3a:	68fb      	ldr	r3, [r7, #12]
 8004a3c:	607b      	str	r3, [r7, #4]
 8004a3e:	687b      	ldr	r3, [r7, #4]
 8004a40:	60bb      	str	r3, [r7, #8]
 8004a42:	687b      	ldr	r3, [r7, #4]
 8004a44:	685b      	ldr	r3, [r3, #4]
 8004a46:	68ba      	ldr	r2, [r7, #8]
 8004a48:	441a      	add	r2, r3
 8004a4a:	68fb      	ldr	r3, [r7, #12]
 8004a4c:	681b      	ldr	r3, [r3, #0]
 8004a4e:	429a      	cmp	r2, r3
 8004a50:	d118      	bne.n	8004a84 <prvInsertBlockIntoFreeList+0x88>
 8004a52:	68fb      	ldr	r3, [r7, #12]
 8004a54:	681a      	ldr	r2, [r3, #0]
 8004a56:	4b14      	ldr	r3, [pc, #80]	; (8004aa8 <prvInsertBlockIntoFreeList+0xac>)
 8004a58:	681b      	ldr	r3, [r3, #0]
 8004a5a:	429a      	cmp	r2, r3
 8004a5c:	d00d      	beq.n	8004a7a <prvInsertBlockIntoFreeList+0x7e>
 8004a5e:	687b      	ldr	r3, [r7, #4]
 8004a60:	685a      	ldr	r2, [r3, #4]
 8004a62:	68fb      	ldr	r3, [r7, #12]
 8004a64:	681b      	ldr	r3, [r3, #0]
 8004a66:	685b      	ldr	r3, [r3, #4]
 8004a68:	441a      	add	r2, r3
 8004a6a:	687b      	ldr	r3, [r7, #4]
 8004a6c:	605a      	str	r2, [r3, #4]
 8004a6e:	68fb      	ldr	r3, [r7, #12]
 8004a70:	681b      	ldr	r3, [r3, #0]
 8004a72:	681a      	ldr	r2, [r3, #0]
 8004a74:	687b      	ldr	r3, [r7, #4]
 8004a76:	601a      	str	r2, [r3, #0]
 8004a78:	e008      	b.n	8004a8c <prvInsertBlockIntoFreeList+0x90>
 8004a7a:	4b0b      	ldr	r3, [pc, #44]	; (8004aa8 <prvInsertBlockIntoFreeList+0xac>)
 8004a7c:	681a      	ldr	r2, [r3, #0]
 8004a7e:	687b      	ldr	r3, [r7, #4]
 8004a80:	601a      	str	r2, [r3, #0]
 8004a82:	e003      	b.n	8004a8c <prvInsertBlockIntoFreeList+0x90>
 8004a84:	68fb      	ldr	r3, [r7, #12]
 8004a86:	681a      	ldr	r2, [r3, #0]
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	601a      	str	r2, [r3, #0]
 8004a8c:	68fa      	ldr	r2, [r7, #12]
 8004a8e:	687b      	ldr	r3, [r7, #4]
 8004a90:	429a      	cmp	r2, r3
 8004a92:	d002      	beq.n	8004a9a <prvInsertBlockIntoFreeList+0x9e>
 8004a94:	68fb      	ldr	r3, [r7, #12]
 8004a96:	687a      	ldr	r2, [r7, #4]
 8004a98:	601a      	str	r2, [r3, #0]
 8004a9a:	bf00      	nop
 8004a9c:	3714      	adds	r7, #20
 8004a9e:	46bd      	mov	sp, r7
 8004aa0:	bc80      	pop	{r7}
 8004aa2:	4770      	bx	lr
 8004aa4:	20002dc4 	.word	0x20002dc4
 8004aa8:	20002dcc 	.word	0x20002dcc

08004aac <__errno>:
 8004aac:	4b01      	ldr	r3, [pc, #4]	; (8004ab4 <__errno+0x8>)
 8004aae:	6818      	ldr	r0, [r3, #0]
 8004ab0:	4770      	bx	lr
 8004ab2:	bf00      	nop
 8004ab4:	20000048 	.word	0x20000048

08004ab8 <__libc_init_array>:
 8004ab8:	b570      	push	{r4, r5, r6, lr}
 8004aba:	2500      	movs	r5, #0
 8004abc:	4e0c      	ldr	r6, [pc, #48]	; (8004af0 <__libc_init_array+0x38>)
 8004abe:	4c0d      	ldr	r4, [pc, #52]	; (8004af4 <__libc_init_array+0x3c>)
 8004ac0:	1ba4      	subs	r4, r4, r6
 8004ac2:	10a4      	asrs	r4, r4, #2
 8004ac4:	42a5      	cmp	r5, r4
 8004ac6:	d109      	bne.n	8004adc <__libc_init_array+0x24>
 8004ac8:	f000 fc72 	bl	80053b0 <_init>
 8004acc:	2500      	movs	r5, #0
 8004ace:	4e0a      	ldr	r6, [pc, #40]	; (8004af8 <__libc_init_array+0x40>)
 8004ad0:	4c0a      	ldr	r4, [pc, #40]	; (8004afc <__libc_init_array+0x44>)
 8004ad2:	1ba4      	subs	r4, r4, r6
 8004ad4:	10a4      	asrs	r4, r4, #2
 8004ad6:	42a5      	cmp	r5, r4
 8004ad8:	d105      	bne.n	8004ae6 <__libc_init_array+0x2e>
 8004ada:	bd70      	pop	{r4, r5, r6, pc}
 8004adc:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8004ae0:	4798      	blx	r3
 8004ae2:	3501      	adds	r5, #1
 8004ae4:	e7ee      	b.n	8004ac4 <__libc_init_array+0xc>
 8004ae6:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8004aea:	4798      	blx	r3
 8004aec:	3501      	adds	r5, #1
 8004aee:	e7f2      	b.n	8004ad6 <__libc_init_array+0x1e>
 8004af0:	080056d4 	.word	0x080056d4
 8004af4:	080056d4 	.word	0x080056d4
 8004af8:	080056d4 	.word	0x080056d4
 8004afc:	080056d8 	.word	0x080056d8

08004b00 <memcpy>:
 8004b00:	b510      	push	{r4, lr}
 8004b02:	1e43      	subs	r3, r0, #1
 8004b04:	440a      	add	r2, r1
 8004b06:	4291      	cmp	r1, r2
 8004b08:	d100      	bne.n	8004b0c <memcpy+0xc>
 8004b0a:	bd10      	pop	{r4, pc}
 8004b0c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8004b10:	f803 4f01 	strb.w	r4, [r3, #1]!
 8004b14:	e7f7      	b.n	8004b06 <memcpy+0x6>

08004b16 <memset>:
 8004b16:	4603      	mov	r3, r0
 8004b18:	4402      	add	r2, r0
 8004b1a:	4293      	cmp	r3, r2
 8004b1c:	d100      	bne.n	8004b20 <memset+0xa>
 8004b1e:	4770      	bx	lr
 8004b20:	f803 1b01 	strb.w	r1, [r3], #1
 8004b24:	e7f9      	b.n	8004b1a <memset+0x4>
	...

08004b28 <rand>:
 8004b28:	b538      	push	{r3, r4, r5, lr}
 8004b2a:	4b13      	ldr	r3, [pc, #76]	; (8004b78 <rand+0x50>)
 8004b2c:	681c      	ldr	r4, [r3, #0]
 8004b2e:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8004b30:	b97b      	cbnz	r3, 8004b52 <rand+0x2a>
 8004b32:	2018      	movs	r0, #24
 8004b34:	f000 f84c 	bl	8004bd0 <malloc>
 8004b38:	4a10      	ldr	r2, [pc, #64]	; (8004b7c <rand+0x54>)
 8004b3a:	4b11      	ldr	r3, [pc, #68]	; (8004b80 <rand+0x58>)
 8004b3c:	63a0      	str	r0, [r4, #56]	; 0x38
 8004b3e:	e9c0 2300 	strd	r2, r3, [r0]
 8004b42:	4b10      	ldr	r3, [pc, #64]	; (8004b84 <rand+0x5c>)
 8004b44:	2201      	movs	r2, #1
 8004b46:	6083      	str	r3, [r0, #8]
 8004b48:	230b      	movs	r3, #11
 8004b4a:	8183      	strh	r3, [r0, #12]
 8004b4c:	2300      	movs	r3, #0
 8004b4e:	e9c0 2304 	strd	r2, r3, [r0, #16]
 8004b52:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8004b54:	480c      	ldr	r0, [pc, #48]	; (8004b88 <rand+0x60>)
 8004b56:	690a      	ldr	r2, [r1, #16]
 8004b58:	694b      	ldr	r3, [r1, #20]
 8004b5a:	4350      	muls	r0, r2
 8004b5c:	4c0b      	ldr	r4, [pc, #44]	; (8004b8c <rand+0x64>)
 8004b5e:	fb04 0003 	mla	r0, r4, r3, r0
 8004b62:	fba2 2304 	umull	r2, r3, r2, r4
 8004b66:	4403      	add	r3, r0
 8004b68:	1c54      	adds	r4, r2, #1
 8004b6a:	f143 0500 	adc.w	r5, r3, #0
 8004b6e:	e9c1 4504 	strd	r4, r5, [r1, #16]
 8004b72:	f025 4000 	bic.w	r0, r5, #2147483648	; 0x80000000
 8004b76:	bd38      	pop	{r3, r4, r5, pc}
 8004b78:	20000048 	.word	0x20000048
 8004b7c:	abcd330e 	.word	0xabcd330e
 8004b80:	e66d1234 	.word	0xe66d1234
 8004b84:	0005deec 	.word	0x0005deec
 8004b88:	5851f42d 	.word	0x5851f42d
 8004b8c:	4c957f2d 	.word	0x4c957f2d

08004b90 <siprintf>:
 8004b90:	b40e      	push	{r1, r2, r3}
 8004b92:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8004b96:	b500      	push	{lr}
 8004b98:	b09c      	sub	sp, #112	; 0x70
 8004b9a:	ab1d      	add	r3, sp, #116	; 0x74
 8004b9c:	9002      	str	r0, [sp, #8]
 8004b9e:	9006      	str	r0, [sp, #24]
 8004ba0:	9107      	str	r1, [sp, #28]
 8004ba2:	9104      	str	r1, [sp, #16]
 8004ba4:	4808      	ldr	r0, [pc, #32]	; (8004bc8 <siprintf+0x38>)
 8004ba6:	4909      	ldr	r1, [pc, #36]	; (8004bcc <siprintf+0x3c>)
 8004ba8:	f853 2b04 	ldr.w	r2, [r3], #4
 8004bac:	9105      	str	r1, [sp, #20]
 8004bae:	6800      	ldr	r0, [r0, #0]
 8004bb0:	a902      	add	r1, sp, #8
 8004bb2:	9301      	str	r3, [sp, #4]
 8004bb4:	f000 f914 	bl	8004de0 <_svfiprintf_r>
 8004bb8:	2200      	movs	r2, #0
 8004bba:	9b02      	ldr	r3, [sp, #8]
 8004bbc:	701a      	strb	r2, [r3, #0]
 8004bbe:	b01c      	add	sp, #112	; 0x70
 8004bc0:	f85d eb04 	ldr.w	lr, [sp], #4
 8004bc4:	b003      	add	sp, #12
 8004bc6:	4770      	bx	lr
 8004bc8:	20000048 	.word	0x20000048
 8004bcc:	ffff0208 	.word	0xffff0208

08004bd0 <malloc>:
 8004bd0:	4b02      	ldr	r3, [pc, #8]	; (8004bdc <malloc+0xc>)
 8004bd2:	4601      	mov	r1, r0
 8004bd4:	6818      	ldr	r0, [r3, #0]
 8004bd6:	f000 b84f 	b.w	8004c78 <_malloc_r>
 8004bda:	bf00      	nop
 8004bdc:	20000048 	.word	0x20000048

08004be0 <_free_r>:
 8004be0:	b538      	push	{r3, r4, r5, lr}
 8004be2:	4605      	mov	r5, r0
 8004be4:	2900      	cmp	r1, #0
 8004be6:	d043      	beq.n	8004c70 <_free_r+0x90>
 8004be8:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004bec:	1f0c      	subs	r4, r1, #4
 8004bee:	2b00      	cmp	r3, #0
 8004bf0:	bfb8      	it	lt
 8004bf2:	18e4      	addlt	r4, r4, r3
 8004bf4:	f000 fbab 	bl	800534e <__malloc_lock>
 8004bf8:	4a1e      	ldr	r2, [pc, #120]	; (8004c74 <_free_r+0x94>)
 8004bfa:	6813      	ldr	r3, [r2, #0]
 8004bfc:	4610      	mov	r0, r2
 8004bfe:	b933      	cbnz	r3, 8004c0e <_free_r+0x2e>
 8004c00:	6063      	str	r3, [r4, #4]
 8004c02:	6014      	str	r4, [r2, #0]
 8004c04:	4628      	mov	r0, r5
 8004c06:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004c0a:	f000 bba1 	b.w	8005350 <__malloc_unlock>
 8004c0e:	42a3      	cmp	r3, r4
 8004c10:	d90b      	bls.n	8004c2a <_free_r+0x4a>
 8004c12:	6821      	ldr	r1, [r4, #0]
 8004c14:	1862      	adds	r2, r4, r1
 8004c16:	4293      	cmp	r3, r2
 8004c18:	bf01      	itttt	eq
 8004c1a:	681a      	ldreq	r2, [r3, #0]
 8004c1c:	685b      	ldreq	r3, [r3, #4]
 8004c1e:	1852      	addeq	r2, r2, r1
 8004c20:	6022      	streq	r2, [r4, #0]
 8004c22:	6063      	str	r3, [r4, #4]
 8004c24:	6004      	str	r4, [r0, #0]
 8004c26:	e7ed      	b.n	8004c04 <_free_r+0x24>
 8004c28:	4613      	mov	r3, r2
 8004c2a:	685a      	ldr	r2, [r3, #4]
 8004c2c:	b10a      	cbz	r2, 8004c32 <_free_r+0x52>
 8004c2e:	42a2      	cmp	r2, r4
 8004c30:	d9fa      	bls.n	8004c28 <_free_r+0x48>
 8004c32:	6819      	ldr	r1, [r3, #0]
 8004c34:	1858      	adds	r0, r3, r1
 8004c36:	42a0      	cmp	r0, r4
 8004c38:	d10b      	bne.n	8004c52 <_free_r+0x72>
 8004c3a:	6820      	ldr	r0, [r4, #0]
 8004c3c:	4401      	add	r1, r0
 8004c3e:	1858      	adds	r0, r3, r1
 8004c40:	4282      	cmp	r2, r0
 8004c42:	6019      	str	r1, [r3, #0]
 8004c44:	d1de      	bne.n	8004c04 <_free_r+0x24>
 8004c46:	6810      	ldr	r0, [r2, #0]
 8004c48:	6852      	ldr	r2, [r2, #4]
 8004c4a:	4401      	add	r1, r0
 8004c4c:	6019      	str	r1, [r3, #0]
 8004c4e:	605a      	str	r2, [r3, #4]
 8004c50:	e7d8      	b.n	8004c04 <_free_r+0x24>
 8004c52:	d902      	bls.n	8004c5a <_free_r+0x7a>
 8004c54:	230c      	movs	r3, #12
 8004c56:	602b      	str	r3, [r5, #0]
 8004c58:	e7d4      	b.n	8004c04 <_free_r+0x24>
 8004c5a:	6820      	ldr	r0, [r4, #0]
 8004c5c:	1821      	adds	r1, r4, r0
 8004c5e:	428a      	cmp	r2, r1
 8004c60:	bf01      	itttt	eq
 8004c62:	6811      	ldreq	r1, [r2, #0]
 8004c64:	6852      	ldreq	r2, [r2, #4]
 8004c66:	1809      	addeq	r1, r1, r0
 8004c68:	6021      	streq	r1, [r4, #0]
 8004c6a:	6062      	str	r2, [r4, #4]
 8004c6c:	605c      	str	r4, [r3, #4]
 8004c6e:	e7c9      	b.n	8004c04 <_free_r+0x24>
 8004c70:	bd38      	pop	{r3, r4, r5, pc}
 8004c72:	bf00      	nop
 8004c74:	20002ddc 	.word	0x20002ddc

08004c78 <_malloc_r>:
 8004c78:	b570      	push	{r4, r5, r6, lr}
 8004c7a:	1ccd      	adds	r5, r1, #3
 8004c7c:	f025 0503 	bic.w	r5, r5, #3
 8004c80:	3508      	adds	r5, #8
 8004c82:	2d0c      	cmp	r5, #12
 8004c84:	bf38      	it	cc
 8004c86:	250c      	movcc	r5, #12
 8004c88:	2d00      	cmp	r5, #0
 8004c8a:	4606      	mov	r6, r0
 8004c8c:	db01      	blt.n	8004c92 <_malloc_r+0x1a>
 8004c8e:	42a9      	cmp	r1, r5
 8004c90:	d903      	bls.n	8004c9a <_malloc_r+0x22>
 8004c92:	230c      	movs	r3, #12
 8004c94:	6033      	str	r3, [r6, #0]
 8004c96:	2000      	movs	r0, #0
 8004c98:	bd70      	pop	{r4, r5, r6, pc}
 8004c9a:	f000 fb58 	bl	800534e <__malloc_lock>
 8004c9e:	4a21      	ldr	r2, [pc, #132]	; (8004d24 <_malloc_r+0xac>)
 8004ca0:	6814      	ldr	r4, [r2, #0]
 8004ca2:	4621      	mov	r1, r4
 8004ca4:	b991      	cbnz	r1, 8004ccc <_malloc_r+0x54>
 8004ca6:	4c20      	ldr	r4, [pc, #128]	; (8004d28 <_malloc_r+0xb0>)
 8004ca8:	6823      	ldr	r3, [r4, #0]
 8004caa:	b91b      	cbnz	r3, 8004cb4 <_malloc_r+0x3c>
 8004cac:	4630      	mov	r0, r6
 8004cae:	f000 fb17 	bl	80052e0 <_sbrk_r>
 8004cb2:	6020      	str	r0, [r4, #0]
 8004cb4:	4629      	mov	r1, r5
 8004cb6:	4630      	mov	r0, r6
 8004cb8:	f000 fb12 	bl	80052e0 <_sbrk_r>
 8004cbc:	1c43      	adds	r3, r0, #1
 8004cbe:	d124      	bne.n	8004d0a <_malloc_r+0x92>
 8004cc0:	230c      	movs	r3, #12
 8004cc2:	4630      	mov	r0, r6
 8004cc4:	6033      	str	r3, [r6, #0]
 8004cc6:	f000 fb43 	bl	8005350 <__malloc_unlock>
 8004cca:	e7e4      	b.n	8004c96 <_malloc_r+0x1e>
 8004ccc:	680b      	ldr	r3, [r1, #0]
 8004cce:	1b5b      	subs	r3, r3, r5
 8004cd0:	d418      	bmi.n	8004d04 <_malloc_r+0x8c>
 8004cd2:	2b0b      	cmp	r3, #11
 8004cd4:	d90f      	bls.n	8004cf6 <_malloc_r+0x7e>
 8004cd6:	600b      	str	r3, [r1, #0]
 8004cd8:	18cc      	adds	r4, r1, r3
 8004cda:	50cd      	str	r5, [r1, r3]
 8004cdc:	4630      	mov	r0, r6
 8004cde:	f000 fb37 	bl	8005350 <__malloc_unlock>
 8004ce2:	f104 000b 	add.w	r0, r4, #11
 8004ce6:	1d23      	adds	r3, r4, #4
 8004ce8:	f020 0007 	bic.w	r0, r0, #7
 8004cec:	1ac3      	subs	r3, r0, r3
 8004cee:	d0d3      	beq.n	8004c98 <_malloc_r+0x20>
 8004cf0:	425a      	negs	r2, r3
 8004cf2:	50e2      	str	r2, [r4, r3]
 8004cf4:	e7d0      	b.n	8004c98 <_malloc_r+0x20>
 8004cf6:	684b      	ldr	r3, [r1, #4]
 8004cf8:	428c      	cmp	r4, r1
 8004cfa:	bf16      	itet	ne
 8004cfc:	6063      	strne	r3, [r4, #4]
 8004cfe:	6013      	streq	r3, [r2, #0]
 8004d00:	460c      	movne	r4, r1
 8004d02:	e7eb      	b.n	8004cdc <_malloc_r+0x64>
 8004d04:	460c      	mov	r4, r1
 8004d06:	6849      	ldr	r1, [r1, #4]
 8004d08:	e7cc      	b.n	8004ca4 <_malloc_r+0x2c>
 8004d0a:	1cc4      	adds	r4, r0, #3
 8004d0c:	f024 0403 	bic.w	r4, r4, #3
 8004d10:	42a0      	cmp	r0, r4
 8004d12:	d005      	beq.n	8004d20 <_malloc_r+0xa8>
 8004d14:	1a21      	subs	r1, r4, r0
 8004d16:	4630      	mov	r0, r6
 8004d18:	f000 fae2 	bl	80052e0 <_sbrk_r>
 8004d1c:	3001      	adds	r0, #1
 8004d1e:	d0cf      	beq.n	8004cc0 <_malloc_r+0x48>
 8004d20:	6025      	str	r5, [r4, #0]
 8004d22:	e7db      	b.n	8004cdc <_malloc_r+0x64>
 8004d24:	20002ddc 	.word	0x20002ddc
 8004d28:	20002de0 	.word	0x20002de0

08004d2c <__ssputs_r>:
 8004d2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004d30:	688e      	ldr	r6, [r1, #8]
 8004d32:	4682      	mov	sl, r0
 8004d34:	429e      	cmp	r6, r3
 8004d36:	460c      	mov	r4, r1
 8004d38:	4690      	mov	r8, r2
 8004d3a:	4699      	mov	r9, r3
 8004d3c:	d837      	bhi.n	8004dae <__ssputs_r+0x82>
 8004d3e:	898a      	ldrh	r2, [r1, #12]
 8004d40:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8004d44:	d031      	beq.n	8004daa <__ssputs_r+0x7e>
 8004d46:	2302      	movs	r3, #2
 8004d48:	6825      	ldr	r5, [r4, #0]
 8004d4a:	6909      	ldr	r1, [r1, #16]
 8004d4c:	1a6f      	subs	r7, r5, r1
 8004d4e:	6965      	ldr	r5, [r4, #20]
 8004d50:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8004d54:	fb95 f5f3 	sdiv	r5, r5, r3
 8004d58:	f109 0301 	add.w	r3, r9, #1
 8004d5c:	443b      	add	r3, r7
 8004d5e:	429d      	cmp	r5, r3
 8004d60:	bf38      	it	cc
 8004d62:	461d      	movcc	r5, r3
 8004d64:	0553      	lsls	r3, r2, #21
 8004d66:	d530      	bpl.n	8004dca <__ssputs_r+0x9e>
 8004d68:	4629      	mov	r1, r5
 8004d6a:	f7ff ff85 	bl	8004c78 <_malloc_r>
 8004d6e:	4606      	mov	r6, r0
 8004d70:	b950      	cbnz	r0, 8004d88 <__ssputs_r+0x5c>
 8004d72:	230c      	movs	r3, #12
 8004d74:	f04f 30ff 	mov.w	r0, #4294967295
 8004d78:	f8ca 3000 	str.w	r3, [sl]
 8004d7c:	89a3      	ldrh	r3, [r4, #12]
 8004d7e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004d82:	81a3      	strh	r3, [r4, #12]
 8004d84:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004d88:	463a      	mov	r2, r7
 8004d8a:	6921      	ldr	r1, [r4, #16]
 8004d8c:	f7ff feb8 	bl	8004b00 <memcpy>
 8004d90:	89a3      	ldrh	r3, [r4, #12]
 8004d92:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8004d96:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8004d9a:	81a3      	strh	r3, [r4, #12]
 8004d9c:	6126      	str	r6, [r4, #16]
 8004d9e:	443e      	add	r6, r7
 8004da0:	6026      	str	r6, [r4, #0]
 8004da2:	464e      	mov	r6, r9
 8004da4:	6165      	str	r5, [r4, #20]
 8004da6:	1bed      	subs	r5, r5, r7
 8004da8:	60a5      	str	r5, [r4, #8]
 8004daa:	454e      	cmp	r6, r9
 8004dac:	d900      	bls.n	8004db0 <__ssputs_r+0x84>
 8004dae:	464e      	mov	r6, r9
 8004db0:	4632      	mov	r2, r6
 8004db2:	4641      	mov	r1, r8
 8004db4:	6820      	ldr	r0, [r4, #0]
 8004db6:	f000 fab1 	bl	800531c <memmove>
 8004dba:	68a3      	ldr	r3, [r4, #8]
 8004dbc:	2000      	movs	r0, #0
 8004dbe:	1b9b      	subs	r3, r3, r6
 8004dc0:	60a3      	str	r3, [r4, #8]
 8004dc2:	6823      	ldr	r3, [r4, #0]
 8004dc4:	441e      	add	r6, r3
 8004dc6:	6026      	str	r6, [r4, #0]
 8004dc8:	e7dc      	b.n	8004d84 <__ssputs_r+0x58>
 8004dca:	462a      	mov	r2, r5
 8004dcc:	f000 fac1 	bl	8005352 <_realloc_r>
 8004dd0:	4606      	mov	r6, r0
 8004dd2:	2800      	cmp	r0, #0
 8004dd4:	d1e2      	bne.n	8004d9c <__ssputs_r+0x70>
 8004dd6:	6921      	ldr	r1, [r4, #16]
 8004dd8:	4650      	mov	r0, sl
 8004dda:	f7ff ff01 	bl	8004be0 <_free_r>
 8004dde:	e7c8      	b.n	8004d72 <__ssputs_r+0x46>

08004de0 <_svfiprintf_r>:
 8004de0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004de4:	461d      	mov	r5, r3
 8004de6:	898b      	ldrh	r3, [r1, #12]
 8004de8:	b09d      	sub	sp, #116	; 0x74
 8004dea:	061f      	lsls	r7, r3, #24
 8004dec:	4680      	mov	r8, r0
 8004dee:	460c      	mov	r4, r1
 8004df0:	4616      	mov	r6, r2
 8004df2:	d50f      	bpl.n	8004e14 <_svfiprintf_r+0x34>
 8004df4:	690b      	ldr	r3, [r1, #16]
 8004df6:	b96b      	cbnz	r3, 8004e14 <_svfiprintf_r+0x34>
 8004df8:	2140      	movs	r1, #64	; 0x40
 8004dfa:	f7ff ff3d 	bl	8004c78 <_malloc_r>
 8004dfe:	6020      	str	r0, [r4, #0]
 8004e00:	6120      	str	r0, [r4, #16]
 8004e02:	b928      	cbnz	r0, 8004e10 <_svfiprintf_r+0x30>
 8004e04:	230c      	movs	r3, #12
 8004e06:	f8c8 3000 	str.w	r3, [r8]
 8004e0a:	f04f 30ff 	mov.w	r0, #4294967295
 8004e0e:	e0c8      	b.n	8004fa2 <_svfiprintf_r+0x1c2>
 8004e10:	2340      	movs	r3, #64	; 0x40
 8004e12:	6163      	str	r3, [r4, #20]
 8004e14:	2300      	movs	r3, #0
 8004e16:	9309      	str	r3, [sp, #36]	; 0x24
 8004e18:	2320      	movs	r3, #32
 8004e1a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8004e1e:	2330      	movs	r3, #48	; 0x30
 8004e20:	f04f 0b01 	mov.w	fp, #1
 8004e24:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8004e28:	9503      	str	r5, [sp, #12]
 8004e2a:	4637      	mov	r7, r6
 8004e2c:	463d      	mov	r5, r7
 8004e2e:	f815 3b01 	ldrb.w	r3, [r5], #1
 8004e32:	b10b      	cbz	r3, 8004e38 <_svfiprintf_r+0x58>
 8004e34:	2b25      	cmp	r3, #37	; 0x25
 8004e36:	d13e      	bne.n	8004eb6 <_svfiprintf_r+0xd6>
 8004e38:	ebb7 0a06 	subs.w	sl, r7, r6
 8004e3c:	d00b      	beq.n	8004e56 <_svfiprintf_r+0x76>
 8004e3e:	4653      	mov	r3, sl
 8004e40:	4632      	mov	r2, r6
 8004e42:	4621      	mov	r1, r4
 8004e44:	4640      	mov	r0, r8
 8004e46:	f7ff ff71 	bl	8004d2c <__ssputs_r>
 8004e4a:	3001      	adds	r0, #1
 8004e4c:	f000 80a4 	beq.w	8004f98 <_svfiprintf_r+0x1b8>
 8004e50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004e52:	4453      	add	r3, sl
 8004e54:	9309      	str	r3, [sp, #36]	; 0x24
 8004e56:	783b      	ldrb	r3, [r7, #0]
 8004e58:	2b00      	cmp	r3, #0
 8004e5a:	f000 809d 	beq.w	8004f98 <_svfiprintf_r+0x1b8>
 8004e5e:	2300      	movs	r3, #0
 8004e60:	f04f 32ff 	mov.w	r2, #4294967295
 8004e64:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8004e68:	9304      	str	r3, [sp, #16]
 8004e6a:	9307      	str	r3, [sp, #28]
 8004e6c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8004e70:	931a      	str	r3, [sp, #104]	; 0x68
 8004e72:	462f      	mov	r7, r5
 8004e74:	2205      	movs	r2, #5
 8004e76:	f817 1b01 	ldrb.w	r1, [r7], #1
 8004e7a:	4850      	ldr	r0, [pc, #320]	; (8004fbc <_svfiprintf_r+0x1dc>)
 8004e7c:	f000 fa40 	bl	8005300 <memchr>
 8004e80:	9b04      	ldr	r3, [sp, #16]
 8004e82:	b9d0      	cbnz	r0, 8004eba <_svfiprintf_r+0xda>
 8004e84:	06d9      	lsls	r1, r3, #27
 8004e86:	bf44      	itt	mi
 8004e88:	2220      	movmi	r2, #32
 8004e8a:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8004e8e:	071a      	lsls	r2, r3, #28
 8004e90:	bf44      	itt	mi
 8004e92:	222b      	movmi	r2, #43	; 0x2b
 8004e94:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8004e98:	782a      	ldrb	r2, [r5, #0]
 8004e9a:	2a2a      	cmp	r2, #42	; 0x2a
 8004e9c:	d015      	beq.n	8004eca <_svfiprintf_r+0xea>
 8004e9e:	462f      	mov	r7, r5
 8004ea0:	2000      	movs	r0, #0
 8004ea2:	250a      	movs	r5, #10
 8004ea4:	9a07      	ldr	r2, [sp, #28]
 8004ea6:	4639      	mov	r1, r7
 8004ea8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8004eac:	3b30      	subs	r3, #48	; 0x30
 8004eae:	2b09      	cmp	r3, #9
 8004eb0:	d94d      	bls.n	8004f4e <_svfiprintf_r+0x16e>
 8004eb2:	b1b8      	cbz	r0, 8004ee4 <_svfiprintf_r+0x104>
 8004eb4:	e00f      	b.n	8004ed6 <_svfiprintf_r+0xf6>
 8004eb6:	462f      	mov	r7, r5
 8004eb8:	e7b8      	b.n	8004e2c <_svfiprintf_r+0x4c>
 8004eba:	4a40      	ldr	r2, [pc, #256]	; (8004fbc <_svfiprintf_r+0x1dc>)
 8004ebc:	463d      	mov	r5, r7
 8004ebe:	1a80      	subs	r0, r0, r2
 8004ec0:	fa0b f000 	lsl.w	r0, fp, r0
 8004ec4:	4318      	orrs	r0, r3
 8004ec6:	9004      	str	r0, [sp, #16]
 8004ec8:	e7d3      	b.n	8004e72 <_svfiprintf_r+0x92>
 8004eca:	9a03      	ldr	r2, [sp, #12]
 8004ecc:	1d11      	adds	r1, r2, #4
 8004ece:	6812      	ldr	r2, [r2, #0]
 8004ed0:	9103      	str	r1, [sp, #12]
 8004ed2:	2a00      	cmp	r2, #0
 8004ed4:	db01      	blt.n	8004eda <_svfiprintf_r+0xfa>
 8004ed6:	9207      	str	r2, [sp, #28]
 8004ed8:	e004      	b.n	8004ee4 <_svfiprintf_r+0x104>
 8004eda:	4252      	negs	r2, r2
 8004edc:	f043 0302 	orr.w	r3, r3, #2
 8004ee0:	9207      	str	r2, [sp, #28]
 8004ee2:	9304      	str	r3, [sp, #16]
 8004ee4:	783b      	ldrb	r3, [r7, #0]
 8004ee6:	2b2e      	cmp	r3, #46	; 0x2e
 8004ee8:	d10c      	bne.n	8004f04 <_svfiprintf_r+0x124>
 8004eea:	787b      	ldrb	r3, [r7, #1]
 8004eec:	2b2a      	cmp	r3, #42	; 0x2a
 8004eee:	d133      	bne.n	8004f58 <_svfiprintf_r+0x178>
 8004ef0:	9b03      	ldr	r3, [sp, #12]
 8004ef2:	3702      	adds	r7, #2
 8004ef4:	1d1a      	adds	r2, r3, #4
 8004ef6:	681b      	ldr	r3, [r3, #0]
 8004ef8:	9203      	str	r2, [sp, #12]
 8004efa:	2b00      	cmp	r3, #0
 8004efc:	bfb8      	it	lt
 8004efe:	f04f 33ff 	movlt.w	r3, #4294967295
 8004f02:	9305      	str	r3, [sp, #20]
 8004f04:	4d2e      	ldr	r5, [pc, #184]	; (8004fc0 <_svfiprintf_r+0x1e0>)
 8004f06:	2203      	movs	r2, #3
 8004f08:	7839      	ldrb	r1, [r7, #0]
 8004f0a:	4628      	mov	r0, r5
 8004f0c:	f000 f9f8 	bl	8005300 <memchr>
 8004f10:	b138      	cbz	r0, 8004f22 <_svfiprintf_r+0x142>
 8004f12:	2340      	movs	r3, #64	; 0x40
 8004f14:	1b40      	subs	r0, r0, r5
 8004f16:	fa03 f000 	lsl.w	r0, r3, r0
 8004f1a:	9b04      	ldr	r3, [sp, #16]
 8004f1c:	3701      	adds	r7, #1
 8004f1e:	4303      	orrs	r3, r0
 8004f20:	9304      	str	r3, [sp, #16]
 8004f22:	7839      	ldrb	r1, [r7, #0]
 8004f24:	2206      	movs	r2, #6
 8004f26:	4827      	ldr	r0, [pc, #156]	; (8004fc4 <_svfiprintf_r+0x1e4>)
 8004f28:	1c7e      	adds	r6, r7, #1
 8004f2a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8004f2e:	f000 f9e7 	bl	8005300 <memchr>
 8004f32:	2800      	cmp	r0, #0
 8004f34:	d038      	beq.n	8004fa8 <_svfiprintf_r+0x1c8>
 8004f36:	4b24      	ldr	r3, [pc, #144]	; (8004fc8 <_svfiprintf_r+0x1e8>)
 8004f38:	bb13      	cbnz	r3, 8004f80 <_svfiprintf_r+0x1a0>
 8004f3a:	9b03      	ldr	r3, [sp, #12]
 8004f3c:	3307      	adds	r3, #7
 8004f3e:	f023 0307 	bic.w	r3, r3, #7
 8004f42:	3308      	adds	r3, #8
 8004f44:	9303      	str	r3, [sp, #12]
 8004f46:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004f48:	444b      	add	r3, r9
 8004f4a:	9309      	str	r3, [sp, #36]	; 0x24
 8004f4c:	e76d      	b.n	8004e2a <_svfiprintf_r+0x4a>
 8004f4e:	fb05 3202 	mla	r2, r5, r2, r3
 8004f52:	2001      	movs	r0, #1
 8004f54:	460f      	mov	r7, r1
 8004f56:	e7a6      	b.n	8004ea6 <_svfiprintf_r+0xc6>
 8004f58:	2300      	movs	r3, #0
 8004f5a:	250a      	movs	r5, #10
 8004f5c:	4619      	mov	r1, r3
 8004f5e:	3701      	adds	r7, #1
 8004f60:	9305      	str	r3, [sp, #20]
 8004f62:	4638      	mov	r0, r7
 8004f64:	f810 2b01 	ldrb.w	r2, [r0], #1
 8004f68:	3a30      	subs	r2, #48	; 0x30
 8004f6a:	2a09      	cmp	r2, #9
 8004f6c:	d903      	bls.n	8004f76 <_svfiprintf_r+0x196>
 8004f6e:	2b00      	cmp	r3, #0
 8004f70:	d0c8      	beq.n	8004f04 <_svfiprintf_r+0x124>
 8004f72:	9105      	str	r1, [sp, #20]
 8004f74:	e7c6      	b.n	8004f04 <_svfiprintf_r+0x124>
 8004f76:	fb05 2101 	mla	r1, r5, r1, r2
 8004f7a:	2301      	movs	r3, #1
 8004f7c:	4607      	mov	r7, r0
 8004f7e:	e7f0      	b.n	8004f62 <_svfiprintf_r+0x182>
 8004f80:	ab03      	add	r3, sp, #12
 8004f82:	9300      	str	r3, [sp, #0]
 8004f84:	4622      	mov	r2, r4
 8004f86:	4b11      	ldr	r3, [pc, #68]	; (8004fcc <_svfiprintf_r+0x1ec>)
 8004f88:	a904      	add	r1, sp, #16
 8004f8a:	4640      	mov	r0, r8
 8004f8c:	f3af 8000 	nop.w
 8004f90:	f1b0 3fff 	cmp.w	r0, #4294967295
 8004f94:	4681      	mov	r9, r0
 8004f96:	d1d6      	bne.n	8004f46 <_svfiprintf_r+0x166>
 8004f98:	89a3      	ldrh	r3, [r4, #12]
 8004f9a:	065b      	lsls	r3, r3, #25
 8004f9c:	f53f af35 	bmi.w	8004e0a <_svfiprintf_r+0x2a>
 8004fa0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8004fa2:	b01d      	add	sp, #116	; 0x74
 8004fa4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004fa8:	ab03      	add	r3, sp, #12
 8004faa:	9300      	str	r3, [sp, #0]
 8004fac:	4622      	mov	r2, r4
 8004fae:	4b07      	ldr	r3, [pc, #28]	; (8004fcc <_svfiprintf_r+0x1ec>)
 8004fb0:	a904      	add	r1, sp, #16
 8004fb2:	4640      	mov	r0, r8
 8004fb4:	f000 f882 	bl	80050bc <_printf_i>
 8004fb8:	e7ea      	b.n	8004f90 <_svfiprintf_r+0x1b0>
 8004fba:	bf00      	nop
 8004fbc:	080056a0 	.word	0x080056a0
 8004fc0:	080056a6 	.word	0x080056a6
 8004fc4:	080056aa 	.word	0x080056aa
 8004fc8:	00000000 	.word	0x00000000
 8004fcc:	08004d2d 	.word	0x08004d2d

08004fd0 <_printf_common>:
 8004fd0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8004fd4:	4691      	mov	r9, r2
 8004fd6:	461f      	mov	r7, r3
 8004fd8:	688a      	ldr	r2, [r1, #8]
 8004fda:	690b      	ldr	r3, [r1, #16]
 8004fdc:	4606      	mov	r6, r0
 8004fde:	4293      	cmp	r3, r2
 8004fe0:	bfb8      	it	lt
 8004fe2:	4613      	movlt	r3, r2
 8004fe4:	f8c9 3000 	str.w	r3, [r9]
 8004fe8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8004fec:	460c      	mov	r4, r1
 8004fee:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8004ff2:	b112      	cbz	r2, 8004ffa <_printf_common+0x2a>
 8004ff4:	3301      	adds	r3, #1
 8004ff6:	f8c9 3000 	str.w	r3, [r9]
 8004ffa:	6823      	ldr	r3, [r4, #0]
 8004ffc:	0699      	lsls	r1, r3, #26
 8004ffe:	bf42      	ittt	mi
 8005000:	f8d9 3000 	ldrmi.w	r3, [r9]
 8005004:	3302      	addmi	r3, #2
 8005006:	f8c9 3000 	strmi.w	r3, [r9]
 800500a:	6825      	ldr	r5, [r4, #0]
 800500c:	f015 0506 	ands.w	r5, r5, #6
 8005010:	d107      	bne.n	8005022 <_printf_common+0x52>
 8005012:	f104 0a19 	add.w	sl, r4, #25
 8005016:	68e3      	ldr	r3, [r4, #12]
 8005018:	f8d9 2000 	ldr.w	r2, [r9]
 800501c:	1a9b      	subs	r3, r3, r2
 800501e:	42ab      	cmp	r3, r5
 8005020:	dc29      	bgt.n	8005076 <_printf_common+0xa6>
 8005022:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8005026:	6822      	ldr	r2, [r4, #0]
 8005028:	3300      	adds	r3, #0
 800502a:	bf18      	it	ne
 800502c:	2301      	movne	r3, #1
 800502e:	0692      	lsls	r2, r2, #26
 8005030:	d42e      	bmi.n	8005090 <_printf_common+0xc0>
 8005032:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8005036:	4639      	mov	r1, r7
 8005038:	4630      	mov	r0, r6
 800503a:	47c0      	blx	r8
 800503c:	3001      	adds	r0, #1
 800503e:	d021      	beq.n	8005084 <_printf_common+0xb4>
 8005040:	6823      	ldr	r3, [r4, #0]
 8005042:	68e5      	ldr	r5, [r4, #12]
 8005044:	f003 0306 	and.w	r3, r3, #6
 8005048:	2b04      	cmp	r3, #4
 800504a:	bf18      	it	ne
 800504c:	2500      	movne	r5, #0
 800504e:	f8d9 2000 	ldr.w	r2, [r9]
 8005052:	f04f 0900 	mov.w	r9, #0
 8005056:	bf08      	it	eq
 8005058:	1aad      	subeq	r5, r5, r2
 800505a:	68a3      	ldr	r3, [r4, #8]
 800505c:	6922      	ldr	r2, [r4, #16]
 800505e:	bf08      	it	eq
 8005060:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8005064:	4293      	cmp	r3, r2
 8005066:	bfc4      	itt	gt
 8005068:	1a9b      	subgt	r3, r3, r2
 800506a:	18ed      	addgt	r5, r5, r3
 800506c:	341a      	adds	r4, #26
 800506e:	454d      	cmp	r5, r9
 8005070:	d11a      	bne.n	80050a8 <_printf_common+0xd8>
 8005072:	2000      	movs	r0, #0
 8005074:	e008      	b.n	8005088 <_printf_common+0xb8>
 8005076:	2301      	movs	r3, #1
 8005078:	4652      	mov	r2, sl
 800507a:	4639      	mov	r1, r7
 800507c:	4630      	mov	r0, r6
 800507e:	47c0      	blx	r8
 8005080:	3001      	adds	r0, #1
 8005082:	d103      	bne.n	800508c <_printf_common+0xbc>
 8005084:	f04f 30ff 	mov.w	r0, #4294967295
 8005088:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800508c:	3501      	adds	r5, #1
 800508e:	e7c2      	b.n	8005016 <_printf_common+0x46>
 8005090:	2030      	movs	r0, #48	; 0x30
 8005092:	18e1      	adds	r1, r4, r3
 8005094:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8005098:	1c5a      	adds	r2, r3, #1
 800509a:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 800509e:	4422      	add	r2, r4
 80050a0:	3302      	adds	r3, #2
 80050a2:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80050a6:	e7c4      	b.n	8005032 <_printf_common+0x62>
 80050a8:	2301      	movs	r3, #1
 80050aa:	4622      	mov	r2, r4
 80050ac:	4639      	mov	r1, r7
 80050ae:	4630      	mov	r0, r6
 80050b0:	47c0      	blx	r8
 80050b2:	3001      	adds	r0, #1
 80050b4:	d0e6      	beq.n	8005084 <_printf_common+0xb4>
 80050b6:	f109 0901 	add.w	r9, r9, #1
 80050ba:	e7d8      	b.n	800506e <_printf_common+0x9e>

080050bc <_printf_i>:
 80050bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80050c0:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 80050c4:	460c      	mov	r4, r1
 80050c6:	7e09      	ldrb	r1, [r1, #24]
 80050c8:	b085      	sub	sp, #20
 80050ca:	296e      	cmp	r1, #110	; 0x6e
 80050cc:	4617      	mov	r7, r2
 80050ce:	4606      	mov	r6, r0
 80050d0:	4698      	mov	r8, r3
 80050d2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80050d4:	f000 80b3 	beq.w	800523e <_printf_i+0x182>
 80050d8:	d822      	bhi.n	8005120 <_printf_i+0x64>
 80050da:	2963      	cmp	r1, #99	; 0x63
 80050dc:	d036      	beq.n	800514c <_printf_i+0x90>
 80050de:	d80a      	bhi.n	80050f6 <_printf_i+0x3a>
 80050e0:	2900      	cmp	r1, #0
 80050e2:	f000 80b9 	beq.w	8005258 <_printf_i+0x19c>
 80050e6:	2958      	cmp	r1, #88	; 0x58
 80050e8:	f000 8083 	beq.w	80051f2 <_printf_i+0x136>
 80050ec:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80050f0:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 80050f4:	e032      	b.n	800515c <_printf_i+0xa0>
 80050f6:	2964      	cmp	r1, #100	; 0x64
 80050f8:	d001      	beq.n	80050fe <_printf_i+0x42>
 80050fa:	2969      	cmp	r1, #105	; 0x69
 80050fc:	d1f6      	bne.n	80050ec <_printf_i+0x30>
 80050fe:	6820      	ldr	r0, [r4, #0]
 8005100:	6813      	ldr	r3, [r2, #0]
 8005102:	0605      	lsls	r5, r0, #24
 8005104:	f103 0104 	add.w	r1, r3, #4
 8005108:	d52a      	bpl.n	8005160 <_printf_i+0xa4>
 800510a:	681b      	ldr	r3, [r3, #0]
 800510c:	6011      	str	r1, [r2, #0]
 800510e:	2b00      	cmp	r3, #0
 8005110:	da03      	bge.n	800511a <_printf_i+0x5e>
 8005112:	222d      	movs	r2, #45	; 0x2d
 8005114:	425b      	negs	r3, r3
 8005116:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 800511a:	486f      	ldr	r0, [pc, #444]	; (80052d8 <_printf_i+0x21c>)
 800511c:	220a      	movs	r2, #10
 800511e:	e039      	b.n	8005194 <_printf_i+0xd8>
 8005120:	2973      	cmp	r1, #115	; 0x73
 8005122:	f000 809d 	beq.w	8005260 <_printf_i+0x1a4>
 8005126:	d808      	bhi.n	800513a <_printf_i+0x7e>
 8005128:	296f      	cmp	r1, #111	; 0x6f
 800512a:	d020      	beq.n	800516e <_printf_i+0xb2>
 800512c:	2970      	cmp	r1, #112	; 0x70
 800512e:	d1dd      	bne.n	80050ec <_printf_i+0x30>
 8005130:	6823      	ldr	r3, [r4, #0]
 8005132:	f043 0320 	orr.w	r3, r3, #32
 8005136:	6023      	str	r3, [r4, #0]
 8005138:	e003      	b.n	8005142 <_printf_i+0x86>
 800513a:	2975      	cmp	r1, #117	; 0x75
 800513c:	d017      	beq.n	800516e <_printf_i+0xb2>
 800513e:	2978      	cmp	r1, #120	; 0x78
 8005140:	d1d4      	bne.n	80050ec <_printf_i+0x30>
 8005142:	2378      	movs	r3, #120	; 0x78
 8005144:	4865      	ldr	r0, [pc, #404]	; (80052dc <_printf_i+0x220>)
 8005146:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800514a:	e055      	b.n	80051f8 <_printf_i+0x13c>
 800514c:	6813      	ldr	r3, [r2, #0]
 800514e:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8005152:	1d19      	adds	r1, r3, #4
 8005154:	681b      	ldr	r3, [r3, #0]
 8005156:	6011      	str	r1, [r2, #0]
 8005158:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800515c:	2301      	movs	r3, #1
 800515e:	e08c      	b.n	800527a <_printf_i+0x1be>
 8005160:	681b      	ldr	r3, [r3, #0]
 8005162:	f010 0f40 	tst.w	r0, #64	; 0x40
 8005166:	6011      	str	r1, [r2, #0]
 8005168:	bf18      	it	ne
 800516a:	b21b      	sxthne	r3, r3
 800516c:	e7cf      	b.n	800510e <_printf_i+0x52>
 800516e:	6813      	ldr	r3, [r2, #0]
 8005170:	6825      	ldr	r5, [r4, #0]
 8005172:	1d18      	adds	r0, r3, #4
 8005174:	6010      	str	r0, [r2, #0]
 8005176:	0628      	lsls	r0, r5, #24
 8005178:	d501      	bpl.n	800517e <_printf_i+0xc2>
 800517a:	681b      	ldr	r3, [r3, #0]
 800517c:	e002      	b.n	8005184 <_printf_i+0xc8>
 800517e:	0668      	lsls	r0, r5, #25
 8005180:	d5fb      	bpl.n	800517a <_printf_i+0xbe>
 8005182:	881b      	ldrh	r3, [r3, #0]
 8005184:	296f      	cmp	r1, #111	; 0x6f
 8005186:	bf14      	ite	ne
 8005188:	220a      	movne	r2, #10
 800518a:	2208      	moveq	r2, #8
 800518c:	4852      	ldr	r0, [pc, #328]	; (80052d8 <_printf_i+0x21c>)
 800518e:	2100      	movs	r1, #0
 8005190:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8005194:	6865      	ldr	r5, [r4, #4]
 8005196:	2d00      	cmp	r5, #0
 8005198:	60a5      	str	r5, [r4, #8]
 800519a:	f2c0 8095 	blt.w	80052c8 <_printf_i+0x20c>
 800519e:	6821      	ldr	r1, [r4, #0]
 80051a0:	f021 0104 	bic.w	r1, r1, #4
 80051a4:	6021      	str	r1, [r4, #0]
 80051a6:	2b00      	cmp	r3, #0
 80051a8:	d13d      	bne.n	8005226 <_printf_i+0x16a>
 80051aa:	2d00      	cmp	r5, #0
 80051ac:	f040 808e 	bne.w	80052cc <_printf_i+0x210>
 80051b0:	4665      	mov	r5, ip
 80051b2:	2a08      	cmp	r2, #8
 80051b4:	d10b      	bne.n	80051ce <_printf_i+0x112>
 80051b6:	6823      	ldr	r3, [r4, #0]
 80051b8:	07db      	lsls	r3, r3, #31
 80051ba:	d508      	bpl.n	80051ce <_printf_i+0x112>
 80051bc:	6923      	ldr	r3, [r4, #16]
 80051be:	6862      	ldr	r2, [r4, #4]
 80051c0:	429a      	cmp	r2, r3
 80051c2:	bfde      	ittt	le
 80051c4:	2330      	movle	r3, #48	; 0x30
 80051c6:	f805 3c01 	strble.w	r3, [r5, #-1]
 80051ca:	f105 35ff 	addle.w	r5, r5, #4294967295
 80051ce:	ebac 0305 	sub.w	r3, ip, r5
 80051d2:	6123      	str	r3, [r4, #16]
 80051d4:	f8cd 8000 	str.w	r8, [sp]
 80051d8:	463b      	mov	r3, r7
 80051da:	aa03      	add	r2, sp, #12
 80051dc:	4621      	mov	r1, r4
 80051de:	4630      	mov	r0, r6
 80051e0:	f7ff fef6 	bl	8004fd0 <_printf_common>
 80051e4:	3001      	adds	r0, #1
 80051e6:	d14d      	bne.n	8005284 <_printf_i+0x1c8>
 80051e8:	f04f 30ff 	mov.w	r0, #4294967295
 80051ec:	b005      	add	sp, #20
 80051ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80051f2:	4839      	ldr	r0, [pc, #228]	; (80052d8 <_printf_i+0x21c>)
 80051f4:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 80051f8:	6813      	ldr	r3, [r2, #0]
 80051fa:	6821      	ldr	r1, [r4, #0]
 80051fc:	1d1d      	adds	r5, r3, #4
 80051fe:	681b      	ldr	r3, [r3, #0]
 8005200:	6015      	str	r5, [r2, #0]
 8005202:	060a      	lsls	r2, r1, #24
 8005204:	d50b      	bpl.n	800521e <_printf_i+0x162>
 8005206:	07ca      	lsls	r2, r1, #31
 8005208:	bf44      	itt	mi
 800520a:	f041 0120 	orrmi.w	r1, r1, #32
 800520e:	6021      	strmi	r1, [r4, #0]
 8005210:	b91b      	cbnz	r3, 800521a <_printf_i+0x15e>
 8005212:	6822      	ldr	r2, [r4, #0]
 8005214:	f022 0220 	bic.w	r2, r2, #32
 8005218:	6022      	str	r2, [r4, #0]
 800521a:	2210      	movs	r2, #16
 800521c:	e7b7      	b.n	800518e <_printf_i+0xd2>
 800521e:	064d      	lsls	r5, r1, #25
 8005220:	bf48      	it	mi
 8005222:	b29b      	uxthmi	r3, r3
 8005224:	e7ef      	b.n	8005206 <_printf_i+0x14a>
 8005226:	4665      	mov	r5, ip
 8005228:	fbb3 f1f2 	udiv	r1, r3, r2
 800522c:	fb02 3311 	mls	r3, r2, r1, r3
 8005230:	5cc3      	ldrb	r3, [r0, r3]
 8005232:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8005236:	460b      	mov	r3, r1
 8005238:	2900      	cmp	r1, #0
 800523a:	d1f5      	bne.n	8005228 <_printf_i+0x16c>
 800523c:	e7b9      	b.n	80051b2 <_printf_i+0xf6>
 800523e:	6813      	ldr	r3, [r2, #0]
 8005240:	6825      	ldr	r5, [r4, #0]
 8005242:	1d18      	adds	r0, r3, #4
 8005244:	6961      	ldr	r1, [r4, #20]
 8005246:	6010      	str	r0, [r2, #0]
 8005248:	0628      	lsls	r0, r5, #24
 800524a:	681b      	ldr	r3, [r3, #0]
 800524c:	d501      	bpl.n	8005252 <_printf_i+0x196>
 800524e:	6019      	str	r1, [r3, #0]
 8005250:	e002      	b.n	8005258 <_printf_i+0x19c>
 8005252:	066a      	lsls	r2, r5, #25
 8005254:	d5fb      	bpl.n	800524e <_printf_i+0x192>
 8005256:	8019      	strh	r1, [r3, #0]
 8005258:	2300      	movs	r3, #0
 800525a:	4665      	mov	r5, ip
 800525c:	6123      	str	r3, [r4, #16]
 800525e:	e7b9      	b.n	80051d4 <_printf_i+0x118>
 8005260:	6813      	ldr	r3, [r2, #0]
 8005262:	1d19      	adds	r1, r3, #4
 8005264:	6011      	str	r1, [r2, #0]
 8005266:	681d      	ldr	r5, [r3, #0]
 8005268:	6862      	ldr	r2, [r4, #4]
 800526a:	2100      	movs	r1, #0
 800526c:	4628      	mov	r0, r5
 800526e:	f000 f847 	bl	8005300 <memchr>
 8005272:	b108      	cbz	r0, 8005278 <_printf_i+0x1bc>
 8005274:	1b40      	subs	r0, r0, r5
 8005276:	6060      	str	r0, [r4, #4]
 8005278:	6863      	ldr	r3, [r4, #4]
 800527a:	6123      	str	r3, [r4, #16]
 800527c:	2300      	movs	r3, #0
 800527e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8005282:	e7a7      	b.n	80051d4 <_printf_i+0x118>
 8005284:	6923      	ldr	r3, [r4, #16]
 8005286:	462a      	mov	r2, r5
 8005288:	4639      	mov	r1, r7
 800528a:	4630      	mov	r0, r6
 800528c:	47c0      	blx	r8
 800528e:	3001      	adds	r0, #1
 8005290:	d0aa      	beq.n	80051e8 <_printf_i+0x12c>
 8005292:	6823      	ldr	r3, [r4, #0]
 8005294:	079b      	lsls	r3, r3, #30
 8005296:	d413      	bmi.n	80052c0 <_printf_i+0x204>
 8005298:	68e0      	ldr	r0, [r4, #12]
 800529a:	9b03      	ldr	r3, [sp, #12]
 800529c:	4298      	cmp	r0, r3
 800529e:	bfb8      	it	lt
 80052a0:	4618      	movlt	r0, r3
 80052a2:	e7a3      	b.n	80051ec <_printf_i+0x130>
 80052a4:	2301      	movs	r3, #1
 80052a6:	464a      	mov	r2, r9
 80052a8:	4639      	mov	r1, r7
 80052aa:	4630      	mov	r0, r6
 80052ac:	47c0      	blx	r8
 80052ae:	3001      	adds	r0, #1
 80052b0:	d09a      	beq.n	80051e8 <_printf_i+0x12c>
 80052b2:	3501      	adds	r5, #1
 80052b4:	68e3      	ldr	r3, [r4, #12]
 80052b6:	9a03      	ldr	r2, [sp, #12]
 80052b8:	1a9b      	subs	r3, r3, r2
 80052ba:	42ab      	cmp	r3, r5
 80052bc:	dcf2      	bgt.n	80052a4 <_printf_i+0x1e8>
 80052be:	e7eb      	b.n	8005298 <_printf_i+0x1dc>
 80052c0:	2500      	movs	r5, #0
 80052c2:	f104 0919 	add.w	r9, r4, #25
 80052c6:	e7f5      	b.n	80052b4 <_printf_i+0x1f8>
 80052c8:	2b00      	cmp	r3, #0
 80052ca:	d1ac      	bne.n	8005226 <_printf_i+0x16a>
 80052cc:	7803      	ldrb	r3, [r0, #0]
 80052ce:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80052d2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80052d6:	e76c      	b.n	80051b2 <_printf_i+0xf6>
 80052d8:	080056b1 	.word	0x080056b1
 80052dc:	080056c2 	.word	0x080056c2

080052e0 <_sbrk_r>:
 80052e0:	b538      	push	{r3, r4, r5, lr}
 80052e2:	2300      	movs	r3, #0
 80052e4:	4c05      	ldr	r4, [pc, #20]	; (80052fc <_sbrk_r+0x1c>)
 80052e6:	4605      	mov	r5, r0
 80052e8:	4608      	mov	r0, r1
 80052ea:	6023      	str	r3, [r4, #0]
 80052ec:	f7fb fcc0 	bl	8000c70 <_sbrk>
 80052f0:	1c43      	adds	r3, r0, #1
 80052f2:	d102      	bne.n	80052fa <_sbrk_r+0x1a>
 80052f4:	6823      	ldr	r3, [r4, #0]
 80052f6:	b103      	cbz	r3, 80052fa <_sbrk_r+0x1a>
 80052f8:	602b      	str	r3, [r5, #0]
 80052fa:	bd38      	pop	{r3, r4, r5, pc}
 80052fc:	20002f54 	.word	0x20002f54

08005300 <memchr>:
 8005300:	b510      	push	{r4, lr}
 8005302:	b2c9      	uxtb	r1, r1
 8005304:	4402      	add	r2, r0
 8005306:	4290      	cmp	r0, r2
 8005308:	4603      	mov	r3, r0
 800530a:	d101      	bne.n	8005310 <memchr+0x10>
 800530c:	2300      	movs	r3, #0
 800530e:	e003      	b.n	8005318 <memchr+0x18>
 8005310:	781c      	ldrb	r4, [r3, #0]
 8005312:	3001      	adds	r0, #1
 8005314:	428c      	cmp	r4, r1
 8005316:	d1f6      	bne.n	8005306 <memchr+0x6>
 8005318:	4618      	mov	r0, r3
 800531a:	bd10      	pop	{r4, pc}

0800531c <memmove>:
 800531c:	4288      	cmp	r0, r1
 800531e:	b510      	push	{r4, lr}
 8005320:	eb01 0302 	add.w	r3, r1, r2
 8005324:	d807      	bhi.n	8005336 <memmove+0x1a>
 8005326:	1e42      	subs	r2, r0, #1
 8005328:	4299      	cmp	r1, r3
 800532a:	d00a      	beq.n	8005342 <memmove+0x26>
 800532c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005330:	f802 4f01 	strb.w	r4, [r2, #1]!
 8005334:	e7f8      	b.n	8005328 <memmove+0xc>
 8005336:	4283      	cmp	r3, r0
 8005338:	d9f5      	bls.n	8005326 <memmove+0xa>
 800533a:	1881      	adds	r1, r0, r2
 800533c:	1ad2      	subs	r2, r2, r3
 800533e:	42d3      	cmn	r3, r2
 8005340:	d100      	bne.n	8005344 <memmove+0x28>
 8005342:	bd10      	pop	{r4, pc}
 8005344:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8005348:	f801 4d01 	strb.w	r4, [r1, #-1]!
 800534c:	e7f7      	b.n	800533e <memmove+0x22>

0800534e <__malloc_lock>:
 800534e:	4770      	bx	lr

08005350 <__malloc_unlock>:
 8005350:	4770      	bx	lr

08005352 <_realloc_r>:
 8005352:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005354:	4607      	mov	r7, r0
 8005356:	4614      	mov	r4, r2
 8005358:	460e      	mov	r6, r1
 800535a:	b921      	cbnz	r1, 8005366 <_realloc_r+0x14>
 800535c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 8005360:	4611      	mov	r1, r2
 8005362:	f7ff bc89 	b.w	8004c78 <_malloc_r>
 8005366:	b922      	cbnz	r2, 8005372 <_realloc_r+0x20>
 8005368:	f7ff fc3a 	bl	8004be0 <_free_r>
 800536c:	4625      	mov	r5, r4
 800536e:	4628      	mov	r0, r5
 8005370:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005372:	f000 f814 	bl	800539e <_malloc_usable_size_r>
 8005376:	42a0      	cmp	r0, r4
 8005378:	d20f      	bcs.n	800539a <_realloc_r+0x48>
 800537a:	4621      	mov	r1, r4
 800537c:	4638      	mov	r0, r7
 800537e:	f7ff fc7b 	bl	8004c78 <_malloc_r>
 8005382:	4605      	mov	r5, r0
 8005384:	2800      	cmp	r0, #0
 8005386:	d0f2      	beq.n	800536e <_realloc_r+0x1c>
 8005388:	4631      	mov	r1, r6
 800538a:	4622      	mov	r2, r4
 800538c:	f7ff fbb8 	bl	8004b00 <memcpy>
 8005390:	4631      	mov	r1, r6
 8005392:	4638      	mov	r0, r7
 8005394:	f7ff fc24 	bl	8004be0 <_free_r>
 8005398:	e7e9      	b.n	800536e <_realloc_r+0x1c>
 800539a:	4635      	mov	r5, r6
 800539c:	e7e7      	b.n	800536e <_realloc_r+0x1c>

0800539e <_malloc_usable_size_r>:
 800539e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80053a2:	1f18      	subs	r0, r3, #4
 80053a4:	2b00      	cmp	r3, #0
 80053a6:	bfbc      	itt	lt
 80053a8:	580b      	ldrlt	r3, [r1, r0]
 80053aa:	18c0      	addlt	r0, r0, r3
 80053ac:	4770      	bx	lr
	...

080053b0 <_init>:
 80053b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80053b2:	bf00      	nop
 80053b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80053b6:	bc08      	pop	{r3}
 80053b8:	469e      	mov	lr, r3
 80053ba:	4770      	bx	lr

080053bc <_fini>:
 80053bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80053be:	bf00      	nop
 80053c0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80053c2:	bc08      	pop	{r3}
 80053c4:	469e      	mov	lr, r3
 80053c6:	4770      	bx	lr
